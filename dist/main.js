/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./js/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./js/ServiceFunctions.js":
/*!********************************!*\
  !*** ./js/ServiceFunctions.js ***!
  \********************************/
/*! exports provided: GenerateClientCard */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GenerateClientCard\", function() { return GenerateClientCard; });\n\n/**\n *  Функция генерации объекта карточки клиента из данных из БД\n * @param {obj} data - ответ из БД\n * @returns {obj} - объект карточки клиента\n */\nfunction GenerateClientCard(data) {\n  return {\n    'Данные компании':\n      {\n        \"Форма организации\": getOrgForm(data.OrganizationFormID),\n        \"Наименование организации\": data.name,\n        \"Дата регистрации\": getDate(data.registration_date),\n        \"Наименование рег. органа\": data.who_registrate,\n      },\n    \"Генеральный директор\":\n      {\n        \"ФИО директора\": data.director_name,\n        \"Серия и номер паспорта\": data.general_director_passport,\n        \"Когда выдан\": getDate(data.give_date),\n        \"Кем выдан\": data.director_authority,\n      },\n    \"Продолжение\":\n      {\n        \"Место рождения\": data.director_birth_place,\n        \"Адрес регистрации\": data.director_address,\n      },\n    \"Реквизиты компании\":\n      {\n        \"ОГРН\": data.OGRN,\n        \"ИНН\": data.INN,\n        \"КПП\": data.KPP,\n        \"ОКПО\": data.OKPO,\n        \"ОКВЭД\": data.OKVED,\n      },\n    \"Банковские реквизиты\":\n      {\n        \"р/счет\": data.r_account,\n        \"к/счет\": data.k_account,\n        \"Банк\": data.bank,\n        \"БИК\": data.bik,\n      },\n    \"Доп. информация\":\n      {\n        \"Телефон\": data.company_phone,\n        \"Эл. почта\": data.company_mail,\n        \"Юридический адрес\": data.Legal_address,\n        \"Фактический адрес\": data.Real_address,\n      }\n  }\n}\n/**\n * Функция возвращает наименование формы компании \n * @param {number} id \n */\nfunction getOrgForm(id) {\n  if (id === '0') return '';\n  const forms = {\n    1: \"ЗАО\",\n    2: \"ООО\",\n    3: \"ОАО\",\n    4: \"ИП\"\n  }\n  return forms[+id];\n}\nfunction getDate(date) {\n  return (date === '0000-00-00') ? '' : date;\n}\n\n//# sourceURL=webpack:///./js/ServiceFunctions.js?");

/***/ }),

/***/ "./js/app.js":
/*!*******************!*\
  !*** ./js/app.js ***!
  \*******************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _proto_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./proto.js */ \"./js/proto.js\");\n/* harmony import */ var _calculation_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./calculation.js */ \"./js/calculation.js\");\n\n\n\nconst app = angular.module(\"mainApp\", [\n    \"ngRoute\",\n    \"ngCookies\",\n]);\nwindow.app = app;\napp.config(function ($routeProvider) {\n    //с помощью .config мы определяем маршруты приложения. Для конфигурации маршрутов используется объект $routeProvider.\n    /*\n       Метод $routeProvider.when принимает два параметра: название маршрута и объект маршрута.\n       Объект маршрута задает представление и обрабатывающий его контроллер с помощью параметров\n       templateUrl и controller. Поэтому для представлений нам не надо определять контроллер с помощью директивы.\n       */\n    $routeProvider\n        .when(\"/\", {\n            templateUrl: \"dashboard.html\",\n            controller: \"dashboardCtrl as dashboard\"\n        })\n        .when(\"/dashboard\", {\n            resolve: {\n                check: function ($location, $cookies, $rootScope, $http) {\n                    const cookies = $cookies.getAll();\n                    if ($rootScope.loggedIn) $location.path(\"/dashboard\");\n                    else if (\n                        cookies.hasOwnProperty(\"login\") &&\n                        cookies.hasOwnProperty(\"pwd\")\n                    ) {\n                        let data = {};\n                        data.login = cookies.login;\n                        data.pwd = cookies.pwd;\n                        $http.post(\"php/authorization.php\", data).then(\n                            function success(response) {\n                                if (response.data[\"loggin\"] === true) {\n                                    $rootScope.loggedIn = true;\n                                    $location.path(\"/dashboard\");\n                                    $rootScope.name = response.data[\"name\"];\n                                    $cookies.put(\"loggedIn\", response.data[\"loggin\"]);\n                                    $cookies.put(\"username\", response.data[\"name\"]);\n                                    $cookies.put(\"login\", response.data[\"login\"]);\n                                    $cookies.put(\"pwd\", response.data[\"pwd\"]);\n                                    console.log($cookies);\n                                }\n                            },\n                            function error(response) {\n                                console.log(response);\n                            }\n                        );\n                    } else $location.path(\"/\");\n                }\n            },\n            templateUrl: \"dashboard.html\",\n            controller: \"dashboardCtrl as dashboard\"\n        })\n        .when(\"/company\", {\n            templateUrl: \"./templates/paths/company/index.html\",\n            controller: \"companyCtrl\"\n        })\n        .when(\"/polis\", {\n            templateUrl: \"./templates/paths/polis/index.html\",\n            controller: \"polisCtrl as polisCtrl\"\n        })\n        .when(\"/calculation\", {\n            templateUrl: \"./templates/paths/calculation/index.html\",\n            controller: \"calculationCtrl as calculation\"\n        })\n        .when(\"/polisEditor\", {\n            templateUrl: \"./templates/paths/polisEditor/index.html\",\n            controller: \"polisEditorCtrl\"\n        })\n        .when(\"/finance\", {\n            templateUrl: \"./templates/paths/finance/index.html\",\n            controller: \"financeCtrl\"\n        })\n        .when(\"/profile\", {\n            templateUrl: \"./templates/paths/profile/index.html\",\n            controller: \"profileCtrl\"\n        })\n        .otherwise({\n            redirectTo: \"/\"\n        });\n});\napp.directive(\"financeDashboard\", function () {\n    return {\n        restrict: \"A\",\n        templateUrl: \"./templates/paths/finance/dashboard.html\"\n    };\n});\napp.directive(\"financeMatrix\", function () {\n    return {\n        restrict: \"A\",\n        templateUrl: \"./templates/paths/finance/matrix.html\"\n    };\n});\napp.directive(\"financeReturn\", function () {\n    return {\n        restrict: \"A\",\n        templateUrl: \"./templates/paths/finance/return.html\"\n    };\n});\napp.directive(\"financeView\", function () {\n    return {\n        restrict: \"A\",\n        templateUrl: \"./templates/views/finance.view.html\"\n    };\n});\napp.directive(\"polisEditorReturn\", function () {\n    return {\n        restrict: \"A\",\n        templateUrl: \"./templates/paths/polisEditor/return.html\"\n    };\n});\napp.directive(\"polisEditorDashboard\", function () {\n    return {\n        restrict: \"A\",\n        templateUrl: \"./templates/paths/polisEditor/dashboard.html\"\n    };\n});\napp.directive(\"polisEditorMatrix\", function () {\n    return {\n        restrict: \"A\",\n        templateUrl: \"./templates/paths/polisEditor/matrix.html\"\n    };\n});\napp.directive(\"polisEditorNav\", function () {\n    return {\n        restrict: \"A\",\n        templateUrl: \"./templates/paths/polisEditor/navigation.html\"\n    };\n});\napp.directive(\"addition\", function () {\n    return {\n        scope: {\n            addition: \"=\"\n        },\n        restrict: \"A\",\n        templateUrl: \"./templates/views/addition.view.html\"\n    };\n});\napp.directive(\"companyView\", function () {\n    return {\n        restrict: \"A\",\n        templateUrl: \"./templates/views/company.view.html\"\n    };\n});\napp.directive(\"calculationBottomView\", function () {\n    return {\n        restrict: \"A\",\n        templateUrl: \"./templates/paths/calculation/bottom.view.html\"\n    };\n});\napp.directive(\"calculationBottom\", function () {\n    return {\n        restrict: \"A\",\n        templateUrl: \"./templates/paths/calculation/bottom.html\"\n    };\n});\napp.directive(\"calculationMatrix\", function () {\n    return {\n        restrict: \"A\",\n        templateUrl: \"./templates/paths/calculation/matrix.html\"\n    };\n});\napp.directive(\"calculationReturn\", function () {\n    return {\n        restrict: \"A\",\n        templateUrl: \"./templates/paths/calculation/return.html\"\n    };\n});\napp.directive(\"calculationNav\", function () {\n    return {\n        restrict: \"A\",\n        templateUrl: \"./templates/paths/calculation/navigation.html\"\n    };\n});\napp.directive(\"calculationDashboard\", function () {\n    return {\n        restrict: \"A\",\n        templateUrl: \"./templates/paths/calculation/dashboard.html\"\n    };\n});\napp.directive(\"calculationView\", function () {\n    return {\n        restrict: \"A\",\n        templateUrl: \"./templates/views/calculation.view.html\"\n    };\n});\napp.directive(\"polisDashboard\", function () {\n    return {\n        restrict: \"A\",\n        templateUrl: \"./templates/paths/polis/dashboard.html\"\n    };\n});\napp.directive(\"polisMatrix\", function () {\n    return {\n        restrict: \"A\",\n        templateUrl: \"./templates/paths/polis/matrix.html\"\n    };\n});\napp.directive(\"polisReturn\", function () {\n    return {\n        restrict: \"A\",\n        templateUrl: \"./templates/paths/polis/return.html\"\n    };\n});\napp.directive(\"polisHeader\", function () {\n    return {\n        restrict: \"A\",\n        templateUrl: \"./templates/paths/polis/header.html\"\n    };\n});\napp.directive(\"polisNav\", function () {\n    return {\n        restrict: \"A\",\n        templateUrl: \"./templates/paths/polis/navigation.html\"\n    };\n});\napp.directive(\"companyDashboard\", function () {\n    return {\n        restrict: \"A\",\n        templateUrl: \"./templates/paths/company/dashboard.html\"\n    };\n});\napp.directive(\"companyReturn\", function () {\n    return {\n        restrict: \"A\",\n        templateUrl: \"./templates/paths/company/return.html\"\n    };\n});\napp.directive(\"companyMatrix\", function () {\n    return {\n        restrict: \"A\",\n        templateUrl: \"./templates/paths/company/matrix.html\"\n    };\n});\napp.directive(\"companyNav\", function () {\n    return {\n        restrict: \"A\",\n        templateUrl: \"./templates/paths/company/navigation.html\"\n    };\n});\napp.directive(\"karetka\", function () {\n    return {\n        restrict: \"A\",\n        templateUrl: \"./templates/dashboards/karetka.html\"\n    };\n});\napp.directive(\"return\", function () {\n    return {\n        restrict: \"A\",\n        templateUrl: \"./templates/paths/main/return.html\"\n    };\n});\napp.directive(\"mainNav\", function () {\n    return {\n        restrict: \"A\",\n        templateUrl: \"./templates/paths/main/navigation.html\"\n    };\n});\napp.directive(\"findCompany\", function () {\n    return {\n        restrict: \"A\",\n        templateUrl: \"./templates/matrix/find_company.html\",\n        link: function (scope, elements, attrs, ctrl) { }\n    };\n});\napp.directive(\"searchCompany\", function () {\n    return {\n        restrict: \"A\",\n        templateUrl: \"./templates/paths/calculation/search-company.html\",\n        link: function (scope, elements, attrs, ctrl) { }\n    };\n});\napp.directive(\"findCalculation\", function () {\n    return {\n        restrict: \"A\",\n        templateUrl: \"./templates/matrix/find_calculation.html\"\n    };\n});\napp.directive(\"findCalculationView\", function () {\n    return {\n        restrict: \"A\",\n        templateUrl: \"./templates/views/find_calculation_view.html\"\n    };\n});\napp.directive(\"profileDashboard\", function () {\n    return {\n        restrict: \"A\",\n        templateUrl: \"./templates/paths/profile/dashboard.html\"\n    };\n});\napp.directive(\"profileHeader\", function () {\n    return {\n        restrict: \"A\",\n        templateUrl: \"./templates/paths/profile/header.html\"\n    };\n});\napp.directive(\"profileReturn\", function () {\n    return {\n        restrict: \"A\",\n        templateUrl: \"./templates/paths/profile/return.html\"\n    };\n});\napp.directive(\"profileMatrix\", function () {\n    return {\n        restrict: \"A\",\n        templateUrl: \"./templates/paths/profile/matrix.html\"\n    };\n});\napp.directive(\"profileNav\", function () {\n    return {\n        restrict: \"A\",\n        templateUrl: \"./templates/paths/profile/navigation.html\"\n    };\n});\napp.directive(\"profileCalcs\", function () {\n    return {\n        restrict: \"A\",\n        templateUrl: \"./templates/paths/profile/calcs-matrix.html\"\n    };\n});\napp.directive(\"loading\", function () {\n    return {\n        restrict: \"A\",\n        templateUrl: \"./templates/views/loading.html\"\n    };\n});\n\napp.directive(\"ngRightClick\", function ($parse) {\n    return function (scope, element, attrs) {\n        let fn = $parse(attrs.ngRightClick);\n        element.bind(\"contextmenu\", function (event) {\n            scope.$apply(function () {\n                event.preventDefault();\n                fn(scope, { $event: event });\n            });\n        });\n    };\n});\napp.directive(\"importSheetJs\", function SheetJSImportDirective(myFactory) {\n    return {\n        scope: { opts: '=' },\n        link: function ($scope, $elm, $attrs) {\n            $elm.on('change', function (changeEvent) {\n                try {\n                    $scope.changeE = changeEvent;\n                    const reader = new FileReader();\n                    reader.onload = function (e) {\n                        /* read workbook */\n                        try {\n                            const parkInd = $attrs.importSheetJs.match(/\\d+/gi)[0];\n                            const procInd = $attrs.importSheetJs.match(/\\d+/gi)[1];\n                            const park = myFactory.parks[parkInd];\n                            const bstr = e.target.result;\n                            const workbook = XLSX.read(bstr, { type: 'binary' });\n                            const firstList = workbook.Sheets[workbook.SheetNames[0]];\n                            $scope.changeE.target.parentNode.classList.toggle('select--hidden'); //закрываем попап с выбором файла\n                            const cars = prepareList(firstList);//преобразовываем полученные данные в вид массива с машинами\n                            myFactory.setCarsFromExcel(cars,park,parkInd,procInd);// применяем данные машины\n                        }\n                        catch (e) {\n                            alert('Выбран несоответствующий файл. Пожалуйста, выберите файл формата xls или xlsx');\n                            console.error(e);\n                        }\n                    };\n                    reader.readAsBinaryString(changeEvent.target.files[0]);\n                }\n                catch (e) {\n                    alert('Выбран несоответствующий файл. Пожалуйста, выберите файл формата xls или xlsx');\n                    console.error(e);\n                }\n                \n            });\n        }\n    };\n    /**\n     * \n     * @param {object} list - объект данных, полученных из эксель\n     * Правила для Экселя: в столбце А стоит нумерация строк с машинами\n     * Столбец B C D E это марка, номер, вин и год соответственно\n     * @returns {Array} массив с машинами\n     */\n    function prepareList (list) {\n        const validList = [];\n        let startRow = 0;\n        let endRow = 0;\n        const lastRowInFile = parseInt(list['!ref'].match(/.:[A-Z]+(\\d*)/)[1]);\n        let countStarted = false;\n        //определяем строки первой и последней машин\n        for (let i=1;i<=lastRowInFile;i++) {\n            const key = `A${i}`;\n            if (list[key]&&list[key].v===1) {\n                // если в ячейке стоит 1, значит это первая машина и это первая строка\n                startRow = i;\n                countStarted = true;\n            }\n            if (!list[key]&&countStarted) {\n                // если значение в столбце А пустое,а отсчет уже начат, значит таблица закончилась\n                endRow = i-1;\n                break;\n            }\n        }\n        const cars = [];\n        for (let i=startRow;i<=endRow;i++) {\n            const car = {\n                model: (list[`B${i}`]) ? list[`B${i}`].w.trim() : '',\n                autNumber: (list[`C${i}`]) ? list[`C${i}`].w : '',\n                VIN: (list[`D${i}`]) ? list[`D${i}`].w : '',\n                prodYear: (list[`E${i}`]) ? list[`E${i}`].w : '',\n            }\n            cars.push(car);\n        }\n        return cars;\n    }\n});\n\napp.directive(\"currencyInput\", function ($filter, myFactory) {\n    return {\n        require: \"?ngModel\",\n        link: function ($scope, $element, $attrs, ctrl) {\n            if (!ctrl) {\n                return;\n            }\n\n            ctrl.$formatters.unshift(function () {\n                return $filter(\"number\")(ctrl.$modelValue);\n            });\n\n            ctrl.$parsers.unshift(function (viewValue) {\n                let plainNumber = viewValue.replace(/[\\,\\.\\s]/g, \"\"),\n                    b = $filter(\"number\")(plainNumber);\n\n                $element.val(b);\n\n                return plainNumber;\n            });\n            $element.bind(\"click\", $event => {\n                $event.target.select();\n            });\n            $element.bind('blur',$event=>{\n                if ($attrs[\"currencyInput\"] == \"a_limit\") {\n                    let val = $element.val().replace(/[\\s\\,]/g, \"\") * 1;\n                    LimKoef = 1;\n                    let a_limit = myFactory.a_limit;\n                    a_limit.hand = true;\n                    myFactory.finalCalc();\n                    a_limit.value = $element.val().replace(/[\\s\\,]/g, \"\") * 1;\n                    if (a_limit.value == \"\" || a_limit.value == 0) {\n                        a_limit.type = \"Агр. лимит\";\n                        a_limit.value = a_limit.max_limit;\n                        myFactory.a_limit.value = a_limit.max_limit;\n                        a_limit.hand = false;\n                        LimKoef = 1;\n                    } else if (a_limit.value == a_limit.max_limit) {\n                        a_limit.hand = false;\n                        LimKoef = 1;\n                    }\n                    myFactory.applyAlimit();\n                    myFactory.finalCalc();\n                    $scope.$apply();\n                } else if ($attrs.currencyInput == \"payment\") {\n                    if ($element.val() <= 0 || $element.val() == \"\") {\n                        $element.val(1);\n                        myFactory.payment.hand = false;\n                    } else {\n                        if ($element.val() > 12) $element.val(12);\n                        myFactory.payment.hand = true;\n                    }\n                    myFactory.payment.val = $element.val();\n                    myFactory.finalCalc();\n                    $scope.$apply();\n                } else if ($attrs.currencyInput == \"practicalPrice\") {\n                    console.log(myFactory.totalPrice - (myFactory.totalPrice % 1));\n                    if (\n                        $element.val() == 0 ||\n                        $element.val() == \"\" ||\n                        myFactory.practicalPrice.val ==\n                        myFactory.totalPrice - (myFactory.totalPrice % 1)\n                    ) {\n                        //если мы очистили форму для фактической премии\n                        myFactory.checkPracticalPriceKoef(false);\n                        if (\n                            myFactory.practicalPrice.val ==\n                            myFactory.totalPrice - (myFactory.totalPrice % 1)\n                        )\n                            $element.val(\"\");\n                        myFactory.bottom.priceMode = \"price\";\n                    } else {\n                        //если мы что-то ввели в фактическую премию\n                        if (myFactory.bottom.singleAmount) {\n                            myFactory.practicalPrice.val *=\n                                myFactory.totalAmount / myFactory.totalAmountForSingle;\n                        }\n                        myFactory.practicalPrice.koef =\n                            myFactory.practicalPrice.val / myFactory.totalPrice;\n                        myFactory.checkPracticalPriceKoef(true);\n                    }\n                    myFactory.finalCalc();\n                    $scope.$apply();\n                    \n                } else if ($attrs.currencyInput == \"agents\") {\n                    const val = myFactory.agents.val;\n                    const mode = myFactory.agents.mode;\n                    //  ограничиваем агентский процент на 50\n                    if (mode === \"%\" && val > 50) myFactory.agents.val = 50;\n                    myFactory.finalCalc();\n                    $scope.$apply();\n                } else {\n                    if ($scope.calculation.karetka.mode == \"listener\")\n                        $scope.calculation.karetka.mode = \"making new process\";\n                    let val = $element.val().replace(/[\\s\\,]/g, \"\") * 1;\n                    if (myFactory.process.constructor.name == \"Park\") {\n                        if (\n                            $attrs[\"param\"] == \"amount\" &&\n                            myFactory.amountType == \"Тягачей\"\n                        )\n                            val *= 24;\n                        let park = myFactory.process;\n                        if (Array.isArray(park[$attrs[\"param\"]])) {\n                            if (myFactory.parkTemplate.length > 0) {\n                            }\n                        } else {\n                            park.changeProperty($attrs[\"param\"], val);\n                            myFactory.finalCalc();\n                            $scope.$apply();\n                        }\n                    } else if (myFactory.process.constructor.name == \"Multi\") {\n                        if (\n                            $attrs[\"param\"] == \"amount\" &&\n                            myFactory.amountType == \"Тягачей\"\n                        )\n                            myFactory.process.changeProperty($attrs[\"param\"], val * 24);\n                        else myFactory.process.changeProperty($attrs[\"param\"], val);\n                    } else {\n                        if (\n                            $attrs[\"param\"] == \"amount\" &&\n                            myFactory.amountType == \"Тягачей\"\n                        )\n                            myFactory.process[$attrs[\"param\"]] = val * 24;\n                        else myFactory.process[$attrs[\"param\"]] = val;\n                    }\n                    if ($scope.calculation.karetka.mode == \"making new process\") {\n                        let i = 0;\n                        for (let key in myFactory.process) {\n                            if (myFactory.process[key] === \"\") {\n                                $scope.calculation.selectParam(i);\n                                let target = $event.target;\n                                target.blur();\n                                document.querySelector(\".dashboard_container\").focus();\n                                return;\n                            }\n                            i++;\n                        }\n                        myFactory.addNewProcess();\n                        myFactory.finalCalc();\n                        $scope.$apply();\n                    }\n                    if ($scope.calculation.karetka.mode == \"changing process\")\n                        delete myFactory.process.changing;\n                }\n            })\n            $element.bind(\"keydown keypress\", $event => {\n                let key = $event.which;\n                // If the keys include the CTRL, SHIFT, ALT, or META keys, or the arrow keys, do nothing.\n                // This lets us support copy and paste too\n                if (key == 91 || (15 < key && key < 19) || (37 <= key && key <= 40))\n                    return;\n                if ($attrs[\"currencyInput\"] == \"a_limit\") {\n                    let val = $element.val().replace(/[\\s\\,]/g, \"\") * 1;\n                    if (key == 13) {\n                        LimKoef = 1;\n                        let a_limit = myFactory.a_limit;\n                        a_limit.hand = true;\n                        myFactory.finalCalc();\n                        a_limit.value = $element.val().replace(/[\\s\\,]/g, \"\") * 1;\n                        if (a_limit.value == \"\" || a_limit.value == 0) {\n                            a_limit.type = \"Агр. лимит\";\n                            a_limit.value = a_limit.max_limit;\n                            myFactory.a_limit.value = a_limit.max_limit;\n                            a_limit.hand = false;\n                            LimKoef = 1;\n                        } else if (a_limit.value == a_limit.max_limit) {\n                            a_limit.hand = false;\n                            LimKoef = 1;\n                        }\n                        myFactory.applyAlimit();\n                        myFactory.finalCalc();\n                        console.log(myFactory.a_limit.value);\n                        $scope.$apply();\n                    }\n                } else if ($attrs.currencyInput == \"payment\") {\n                    if (key == 13) {\n                        if ($element.val() <= 0 || $element.val() == \"\") {\n                            $element.val(1);\n                            myFactory.payment.hand = false;\n                        } else {\n                            if ($element.val() > 12) $element.val(12);\n                            myFactory.payment.hand = true;\n                        }\n                        myFactory.payment.val = $element.val();\n                        myFactory.finalCalc();\n                        $scope.$apply();\n                    }\n                } else if ($attrs.currencyInput == \"practicalPrice\") {\n                    if (key == 13) {\n                        console.log(myFactory.totalPrice - (myFactory.totalPrice % 1));\n                        if (\n                            $element.val() == 0 ||\n                            $element.val() == \"\" ||\n                            myFactory.practicalPrice.val ==\n                            myFactory.totalPrice - (myFactory.totalPrice % 1)\n                        ) {\n                            //если мы очистили форму для фактической премии\n                            myFactory.checkPracticalPriceKoef(false);\n                            if (\n                                myFactory.practicalPrice.val ==\n                                myFactory.totalPrice - (myFactory.totalPrice % 1)\n                            )\n                                $element.val(\"\");\n                            myFactory.bottom.priceMode = \"price\";\n                        } else {\n                            //если мы что-то ввели в фактическую премию\n                            if (myFactory.bottom.singleAmount) {\n                                myFactory.practicalPrice.val *=\n                                    myFactory.totalAmount / myFactory.totalAmountForSingle;\n                            }\n                            myFactory.practicalPrice.koef =\n                                myFactory.practicalPrice.val / myFactory.totalPrice;\n                            myFactory.checkPracticalPriceKoef(true);\n                        }\n                        myFactory.finalCalc();\n                        $scope.$apply();\n                    }\n                } else if ($attrs.currencyInput == \"agents\") {\n                    if (key == 13) {\n                        const val = myFactory.agents.val;\n                        const mode = myFactory.agents.mode;\n                        //  ограничиваем агентский процент на 50\n                        if (mode === \"%\" && val > 50) myFactory.agents.val = 50;\n                        myFactory.finalCalc();\n                        $scope.$apply();\n                    }\n                } else {\n                    if ($scope.calculation.karetka.mode == \"listener\")\n                        $scope.calculation.karetka.mode = \"making new process\";\n                    console.log(myFactory.process);\n                    if (key == 13) {\n                        let val = $element.val().replace(/[\\s\\,]/g, \"\") * 1;\n                        if (myFactory.process.constructor.name == \"Park\") {\n                            if (\n                                $attrs[\"param\"] == \"amount\" &&\n                                myFactory.amountType == \"Тягачей\"\n                            )\n                                val *= 24;\n                            let park = myFactory.process;\n                            if (Array.isArray(park[$attrs[\"param\"]])) {\n                                if (myFactory.parkTemplate.length > 0) {\n                                }\n                            } else {\n                                park.changeProperty($attrs[\"param\"], val);\n                                myFactory.finalCalc();\n                                $scope.$apply();\n                            }\n                        } else if (myFactory.process.constructor.name == \"Multi\") {\n                            if (\n                                $attrs[\"param\"] == \"amount\" &&\n                                myFactory.amountType == \"Тягачей\"\n                            )\n                                myFactory.process.changeProperty($attrs[\"param\"], val * 24);\n                            else myFactory.process.changeProperty($attrs[\"param\"], val);\n                        } else {\n                            if (\n                                $attrs[\"param\"] == \"amount\" &&\n                                myFactory.amountType == \"Тягачей\"\n                            )\n                                myFactory.process[$attrs[\"param\"]] = val * 24;\n                            else myFactory.process[$attrs[\"param\"]] = val;\n                        }\n                        if ($scope.calculation.karetka.mode == \"making new process\") {\n                            let i = 0;\n                            for (let key in myFactory.process) {\n                                if (myFactory.process[key] === \"\") {\n                                    $scope.calculation.selectParam(i);\n                                    let target = $event.target;\n                                    target.blur();\n                                    document.querySelector(\".dashboard_container\").focus();\n                                    console.log(myFactory.process);\n                                    return;\n                                }\n                                i++;\n                            }\n                            myFactory.addNewProcess();\n                            myFactory.finalCalc();\n                            $scope.$apply();\n                        }\n                        if ($scope.calculation.karetka.mode == \"changing process\")\n                            delete myFactory.process.changing;\n                        $scope.calculation.clean();\n                        let target = $event.target;\n                        target.blur();\n                    }\n                }\n            });\n        }\n    };\n});\n\napp.factory(\"myFactory\", function () {\n    return {\n        cameFrom: {\n            name: null,\n            path: null\n        },\n        karetkaTypes: {\n            'Перевозчики':'HIP.json',\n            'Экспедиторы': 'HIP-conf.json',\n        },\n        calcObj: {},\n        companyObj: {},\n        makingPolis: false,\n        addNewPolisProperty: function () {\n            const conditions = this.polisObj.conditions;\n            conditions.push({\n                name: \"\",\n                values: []\n            });\n            this.polisCurrent = conditions[conditions.length - 1];\n            this.polisCurrent.isNew = true;\n        },\n        polisCurrent: \"\",\n        multi: {\n            multies: [],\n            mode: false,\n            count: 0,\n            template: [],\n            arrays: {\n                risk: [],\n                wrapping: []\n            },\n            clean: function () {\n                this.arrays.risk = [];\n                this.arrays.wrapping = [];\n                this.mode = false;\n                this.template = [];\n            }\n        },\n        /**\n         * function multiChangeMode функция меняет состояние мульти\n         * @param {boolean} mode режим мульти\n         */\n        multiChangeMode: function (mode) {\n            if (mode === undefined) {\n                if (this.multi.mode == false) {\n                    if (\n                        this.process.wrapping != \"\" &&\n                        this.process.wrapping != \"multi\" &&\n                        this.multi.arrays.wrapping.indexOf(this.process.wrapping)\n                    )\n                        this.multi.arrays.wrapping.push(this.process.wrapping);\n                    if (\n                        this.process.risk != \"\" &&\n                        this.process.risk != \"multi\" &&\n                        this.multi.arrays.risk.indexOf(this.process.risk)\n                    )\n                        this.multi.arrays.risk.push(this.process.risk);\n                    this.multi.mode = true;\n                } else this.multi.mode = false;\n            } else this.multi.mode = mode;\n            console.log(this.multi.mode);\n        },\n        /**\n         * этот раздел с keyCodes можно удалить\n         */\n        keyCodes: {\n            qwerty: {\n                mass: [113, 119, 101, 114, 116, 121, 117, 105, 111, 112],\n                length: 0\n            },\n            number: {\n                mass: [49, 50, 51, 52, 53, 54, 55, 56, 57, 48], //длину придется пока задавать\n                length: 7\n            },\n            tab: {\n                mass: [60, 62, 167, 177]\n            }\n        },\n        document: {\n            model: \"Расчет\",\n            currParam: 0,\n            selectedParam: 0,\n            clean: function () {\n                this.currParam = \"\";\n                this.selectedParam = \"\";\n            },\n            currency: \"Р\"\n        },\n        bottom: {\n            singleAmount: false,\n            priceMode: \"price\"\n        },\n        matrixType: \"find\",\n\n        a_limit: {\n            max_limit: 0,\n            value: 0,\n            type: \"Агр. лимит\",\n            hand: false\n        },\n        /**\n         * ручной ввод агрегатного лимита\n         */\n        changeAlimit() {\n            let a_limit = this.a_limit;\n            if (a_limit.type == \"Агр. лимит\") {\n                a_limit.type = \"Кол-во случаев\";\n                a_limit.value = 1;\n                a_limit.hand = true;\n                this.applyAlimit();\n            } else {\n                a_limit.hand = false;\n                a_limit.type = \"Агр. лимит\";\n                if (!a_limit.hand) a_limit.value = a_limit.max_limit;\n            }\n        },\n        /**\n         * Функция для изменения значения лимита на \"кол-во случае\" со значением times - раз\n         * @param {number} times - количество случаев\n         */\n        setAlimitAsTimes(times) {\n            let a_limit = this.a_limit;\n            if (a_limit.type === \"Кол-во случаев\" && a_limit.value === times)\n                return true;\n            LimKoef = 1;\n            a_limit.type = \"Кол-во случаев\";\n            a_limit.value = times;\n            a_limit.hand = true;\n            // первый расчет нужен для формирования значений цены\n            this.finalCalc();\n            // применение лимита к существующим значениям\n            this.applyAlimit();\n            this.finalCalc();\n        },\n        /**\n         * Функция изменения на агр. лимит\n         */\n        setAlimitAsAgr() {\n            const a_limit = this.a_limit;\n            a_limit.hand = false;\n            a_limit.type = \"Агр. лимит\";\n            if (!a_limit.hand) a_limit.value = a_limit.max_limit;\n        },\n        /**\n         * применение агрегатного лимита\n         */\n        applyAlimit: function () {\n            let a_limit = this.a_limit;\n            if (a_limit.value < a_limit.max_limit && a_limit.type == \"Агр. лимит\") {\n                this.parks.forEach(function (park) {\n                    park.cutDownLimits(a_limit.value);\n                });\n                a_limit.hand = false;\n                LimKoef = 1;\n            } else {\n                let overall = 0;\n                this.cleanUpProcessesInParks();\n                if (a_limit.type == \"Кол-во случаев\") {\n                    this.parks.forEach(function (park) {\n                        overall += park.calculateMatrixWithAlimit(a_limit.value, true) * 1;\n                    });\n                    LimKoef = overall / this.totalPrice;\n                } else {\n                    this.parks.forEach(function (park) {\n                        overall += park.calculateMatrixWithAlimit(a_limit.value, false) * 1;\n                    });\n                    overall = Math.abs(overall - this.totalPriceWithoutPayments);\n                    overall *= a_limit.max_limit / a_limit.value;\n                    overall += this.totalPrice;\n                    overall = overall / this.totalPrice;\n                    LimKoef = overall;\n                }\n            }\n        },\n        /**\n         * все что касается этапов платежей\n         */\n        payment: {\n            val: 0,\n            hand: false,\n            mode: \"ON\",\n            totalPrice: null,\n            leftPrice: null,\n            calcDebt: null,\n            payed: \"0\",\n            changeMode: function () {\n                if (this.mode == \"ON\") {\n                    this.mode = \"OFF\";\n                    this.val = 1;\n                    this.hand = false;\n                } else this.mode = \"ON\";\n            },\n            /**\n             * функция создает массив из этапов платежей, необходимо для дальнейшего управления финансами полиса\n             * @param {number} price\n             */\n            makeArray(price, { start = \"\", end = \"\", time = \"\", startDate = ''}) {\n                const getCurrentDate = date => {\n                    let day = date.getDate();\n                    let month = date.getMonth() + 1;\n                    let year = date.getFullYear();\n                    if (day < 10) day = `0${day}`;\n                    if (month < 10) month = `0${month}`;\n                    return `${day}.${month}.${year}`;\n                };\n                const chooseLong = (start, end, time) => {\n                    switch (time) {\n                        case \"Год\":\n                            return 12;\n                        case \"6 месяцев\":\n                            return 6;\n                        case \"Вручную\":\n                            //возвращаем примерное количество месяцев\n                            return Math.ceil(\n                                (new Date(end) - new Date(start)) / (30 * 86400000)\n                            );\n                        default:\n                            return 12;\n                            break;\n                    }\n                };\n                this.totalPrice = price;\n                this.datesWhenCreated = { start, end, time }; //записываем значение, чтобы потом сравнивать и если что обновлять финансы\n\n                let payment = Object(_calculation_js__WEBPACK_IMPORTED_MODULE_1__[\"addSpaces\"])(Math.round(price / this.val)); //рассчитываем цену одного платежа\n                this.calcDebt = payment; //устанавливаем долг равный полной цене\n                this.leftPrice = Object(_calculation_js__WEBPACK_IMPORTED_MODULE_1__[\"addSpaces\"])(Math.round(price / this.val) * this.val);\n                start = start.replace(/(\\d+).(\\d+).(\\d+)/, \"$2.$1.$3\"); // меняем местами месяц и день в дате, чтобы js воспринимал нормально дату\n                end = end.replace(/(\\d+).(\\d+).(\\d+)/, \"$2.$1.$3\");\n                const array = [];\n                const long = chooseLong(start, end, time); //выбираем продолжительность\n\n                if (long < this.val)\n                    console.warn(\"Продолжительность договора меньше чем этапов платежей\"); // пока неизвестно, что с этим делать\n                for (let i = 0; i < this.val; i++) {\n                    let date = start.length === 10 ? new Date(startDate) : new Date();\n                    date.setMonth(date.getMonth() + i*(long / this.val));\n                    date = getCurrentDate(date);\n                    array.push({\n                        price: \"\",\n                        date: \"\",\n                        debt: payment,\n                        debtDate: date,\n                        manual: false\n                    });\n                }\n                this.array = array;\n            }\n        },\n        agents: {\n            val: \"\",\n            getKoef: function (totalPrice) {\n                this.val *= 1;\n                if (this.mode == \"%\") {\n                    let newPrice = totalPrice / (1 - this.val / 100);\n                    return newPrice / totalPrice;\n                } else {\n                    let newPrice = totalPrice + this.val;\n                    return newPrice / totalPrice;\n                }\n            },\n            mode: \"%\",\n            changeMode: function () {\n                if (this.mode == \"Р\") this.mode = \"%\";\n                else this.mode = \"Р\";\n            }\n        },\n        practicalPrice: {\n            val: \"\",\n            koef: 1\n        },\n        process: {\n            cost: \"\",\n            amount: \"\",\n            wrapping: \"\",\n            risk: \"\",\n            limit: \"\",\n            franchise: \"\"\n        },\n        cleanProcess: function () {\n            // очищаем каретку от заполненного процесса\n            this.process = {};\n            for (let i = 0; i < transportProp.length; i++)\n                this.process[transportProp[i]] = \"\";\n        },\n        amountType: \"Тягачей\", // для фильтра тягачей\n        changeAmountType: function () {\n            //для фильтра тягачей\n            if (this.amountType == \"Тягачей\") this.amountType = \"Рейсов\";\n            else this.amountType = \"Тягачей\";\n        },\n        parks: [],\n        parkTemplate: [],\n        /**\n         * функция распределения процессов по паркам\n         * @param {array} array массив процессов\n         * @param {park} park если данный агрумент есть - значит процессы нужно вставить именно в этот парк\n         * @param {number} index если index получен, то процессы нужно вставить после данного номера в парке\n         * @param {park} oldPark\n         */\n        choosePark(array, park, index, oldPark) {\n            // проверяем если передали список мультиузлов\n            for (let j = 0; j < array.length; j++) {\n                let process = array[j];\n                if (process.constructor.name == \"Multi\") {\n                    let multi = process;\n                    array.splice(j, 1);\n                    for (let i = 0; i < multi.processes.length; i++) {\n                        array.splice(j + i, 0, multi.processes[i]);\n                    }\n                }\n            }\n\n            if (park) {\n                let indexToPaste = index;\n                // присваиваем новым процам старый парк\n                array.forEach(function (process) {\n                    // назначаем каждому новому процессу этот парк\n                    process.park = park;\n                    // если этого проца нет в парке то ставим его на место инжекс в этом парке\n                    if (park.processes.indexOf(process) === -1) {\n                        park.processes.splice(indexToPaste, 0, process);\n                        indexToPaste++;\n                    }\n                });\n            } else {\n                let newParkFlag = false;\n                let myFactory = this;\n                if (this.parks.length == 0) newParkFlag = true;\n                else {\n                    array.forEach(function (process) {\n                        if (myFactory.parks[0].risks.indexOf(process.risk) != -1)\n                            newParkFlag = true;\n                    });\n                }\n                if (newParkFlag) {\n                    if (oldPark) {\n                        for (let i = 0; i < array.length; i++) {\n                            if (i == 0) {\n                                this.parks.push(new _proto_js__WEBPACK_IMPORTED_MODULE_0__[\"Park\"](array[i]));\n                            } else {\n                                array[i].park = this.parks[this.parks.length - 1];\n                                this.parks[this.parks.length - 1].processes.splice(\n                                    i,\n                                    0,\n                                    array[i]\n                                );\n                            }\n                        }\n                    } else {\n                        for (let i = 0; i < array.length; i++) {\n                            if (i == 0) {\n                                this.parks.splice(i, 0, new _proto_js__WEBPACK_IMPORTED_MODULE_0__[\"Park\"](array[i]));\n                            } else {\n                                array[i].park = this.parks[0];\n                                this.parks[0].processes.splice(i, 0, array[i]);\n                            }\n                        }\n                    }\n                } else {\n                    //если таких рисков в первом парке нету\n                    for (let i = 0; i < array.length; i++) {\n                        array[i].park = this.parks[0];\n                        this.parks[0].processes.unshift(array[i]);\n                    }\n                }\n            }\n        },\n        /**\n         * функция меняет коэффициент фактической премии\n         * @param {boolean} mode фактическая премия либо есть либо нет\n         *\n         */\n        checkPracticalPriceKoef: function (mode) {\n            let myFactory = this;\n            if (mode) {\n                this.parks.forEach(function (park) {\n                    park.processes.forEach(function (process) {\n                        process.practicalPriceKoef = myFactory.practicalPrice.koef;\n                    });\n                });\n            } else {\n                this.parks.forEach(function (park) {\n                    park.processes.forEach(function (process) {\n                        delete process.practicalPriceKoef;\n                    });\n                });\n            }\n        },\n        /**\n         * функция считает количество траков по всем паркам\n         */\n        calculateParksAmount() {\n            let sum = 0;\n            this.parks.forEach(function (park) {\n                sum += park.calculateAmount();\n            });\n            totalAmount = sum;\n            this.totalAmount = totalAmount;\n        },\n        /**\n         * функция ищет максимальный лимит по случаю\n         */\n        findMaxLimit() {\n            let max = 0;\n            this.parks.forEach(function (park) {\n                max = Math.max(park.findMaxLimit(), max);\n            });\n            this.a_limit.max_limit = max;\n            //if(!this.a_limit.hand) this.a_limit.value=max;\n        },\n        makePackage() {\n            //пакеты\n            let array = [];\n            let obj = {};\n            obj.packName = this.process.risk;\n            obj.template = this.multi.template;\n            this.process.risk = BASENAME;\n            this.process[\"package\"] = obj.packName;\n            //this.process.multi=this.multi.count;\n            array.push(new _proto_js__WEBPACK_IMPORTED_MODULE_0__[\"Process\"](this.process));\n            let myFactory = this;\n\n            this.multi.template.forEach(function (proc) {\n                let newProcess = {};\n                for (let key in myFactory.process)\n                    newProcess[key] = myFactory.process[key];\n                for (let key in proc) {\n                    if (key == \"limit\" || key == \"franchise\")\n                        newProcess[key] = proc[key] * myFactory.process[key];\n                    else newProcess[key] = proc[key];\n                }\n\n                array.push(new _proto_js__WEBPACK_IMPORTED_MODULE_0__[\"Process\"](newProcess));\n            });\n            obj.array = array;\n            delete this.process[\"package\"];\n            return obj;\n        },\n        /**\n         * @function функция для того чтобы совместить старый мульти узел и новый создаваемый\n         * @param {array} array массив с новыми процами\n         * @param {object} старый объект мульти\n         * @return\n         */\n        bindMulti: function (array, multi) {\n            if (multi.packName) delete multi.packName;\n            if (multi.template) delete multi.template;\n            let myFactory = this;\n            let mass = [];\n            // копируем все процы из старого мульти в массив\n            multi.processes.forEach(proc => mass.push(proc));\n            // удаляем все эти процы которые были в массиве\n            for (let i = 0; i < mass.length; i++) {\n                let process = mass[i];\n                process.remove();\n            }\n            // ставим новые процы на место старых\n            multi.processes = array;\n            // привязываем процам мульти объект\n            multi.processes.forEach(function (process) {\n                process.multi = multi;\n            });\n            return multi;\n        },\n        /**\n         * @function функция для создания мультиузлов\n         * @param {array} bindMulti массив с процессами, для которым мы создаем мультиузел\n         * @return {object} возвращает массив с процессами\n         */\n        makeMulti(bindMulti) {\n            if (this.multi.arrays.risk.length == 0) {\n                this.multi.arrays.risk.push(this.process.risk);\n            }\n            if (this.multi.arrays.wrapping.length == 0) {\n                this.multi.arrays.wrapping.push(this.process.wrapping);\n            }\n            if (\n                this.multi.arrays.wrapping.length === 1 &&\n                this.multi.arrays.risk.length === 1\n            ) {\n                this.process.risk = this.multi.arrays.risk[0];\n                this.process.wrapping = this.multi.arrays.wrapping[0];\n                let risk = this.multi.arrays.risk[0];\n                let packages = this.packages.filter(function (pack) {\n                    //пакеты\n                    return pack.name == risk;\n                });\n                if (packages.length > 0) {\n                    this.multi.template = packages[0].values;\n                    let obj = this.makePackage();\n                    if (bindMulti) {\n                        this.bindMulti(obj.array, bindMulti);\n                        bindMulti.packName = obj.packName;\n                        bindMulti.template = obj.template;\n                    } else\n                        this.multi.multies.push(\n                            new _proto_js__WEBPACK_IMPORTED_MODULE_0__[\"Multi\"](obj.array, obj.packName, obj.template)\n                        );\n                    return obj.array;\n                } else {\n                    if (bindMulti) {\n                        let myFactory = this;\n                        bindMulti.processes.forEach(function (process) {\n                            if (\n                                myFactory.multi.arrays.risk.indexOf(process.risk) == -1 ||\n                                myFactory.multi.arrays.wrapping.indexOf(process.wrapping) == -1\n                            )\n                                bindMulti.processes.splice(\n                                    bindMulti.processes.indexOf(process),\n                                    1\n                                );\n                        });\n                    } else return [new _proto_js__WEBPACK_IMPORTED_MODULE_0__[\"Process\"](this.process)];\n                }\n            }\n            //  массив который потом возвращаем как новый мульти объект\n            let array = [];\n            let obj;\n            // блок для поштучного создания процев из данных\n            // для каждого пункта \"тип отсека\" в коллекторе мульти\n            for (let i = 0; i < this.multi.arrays.wrapping.length; i++) {\n                // для каждого пункта \"риск\" в коллекторе мульти\n                for (let j = 0; j < this.multi.arrays.risk.length; j++) {\n                    this.process.wrapping = this.multi.arrays.wrapping[i];\n                    this.process.risk = this.multi.arrays.risk[j];\n                    let risk = this.process.risk;\n                    let packages = this.packages.filter(function (pack) {\n                        //пакеты\n                        return pack.name == risk;\n                    });\n                    if (packages.length > 0) {\n                        this.multi.template = packages[0].values;\n                        obj = this.makePackage();\n                        obj.array.forEach(function (proc) {\n                            array.push(proc);\n                        });\n                    } else {\n                        // получаем объект голых процев\n                        array.push(new _proto_js__WEBPACK_IMPORTED_MODULE_0__[\"Process\"](this.process));\n                    }\n                }\n            }\n            // перемещение базовых рисков на первую строчку если они есть\n            let flag = false;\n            array.forEach(process => {\n                if (process.risk == BASENAME) flag = true;\n            });\n            if (flag) {\n                while (array[0].risk != BASENAME) {\n                    array.push(array.splice(0, 1)[0]);\n                }\n            }\n            //\n            let multi;\n            // если уже есть мульти с которым связываем\n            // bindMulti старый мульти узел по которому кликнули\n            if (bindMulti) {\n                multi = this.bindMulti(array, bindMulti);\n            }\n            // если новый мульти\n            else {\n                multi = new _proto_js__WEBPACK_IMPORTED_MODULE_0__[\"Multi\"](array);\n                this.multi.multies.push(multi);\n            }\n\n            if (obj) {\n                multi.packName = obj.packName;\n                multi.template = obj.template;\n            }\n            return array;\n        },\n        /**\n         * @function функция добавления нового процесса/процессов\n         * @param {string} mode режим\n         * @param {array} multiChanging массив с процессами для мультиузла\n         */\n        addNewProcess(mode, multiChanging, indexToPaste) {\n            //если мульти\n            if (mode == \"changing\") {\n                let park = this.process.park;\n                let process = this.process;\n                // очищаем myFActory.process на котором нажали\n                this.cleanProcess();\n                // создаем тот же проц с ключевыми параметрами, но без всех атрибутов типа мульти, парк и расчеты\n                // потом будем им заменять старый\n                for (let key in process) {\n                    if (transportProp.indexOf(key) != -1)\n                        this.process[key] = process[key];\n                }\n                //SKLV: deleting existing procceses that are in multi\n                let index = park.processes.indexOf(process);\n                const nubOfMulti = multiChanging ? multiChanging.processes.length : 1;\n                if (process.multi) {\n                    //SKLV: 30.05.18 fixed index of multi-cell\n                    let minIndex = park.processes.length;\n                    process.multi.processes.forEach(proc => {\n                        let ind = park.processes.indexOf(proc);\n                        if (ind < minIndex) minIndex = ind;\n                    });\n                    index = minIndex;\n                } else {\n                    park.processes.splice(index, nubOfMulti);\n                }\n                if (this.multi.template.length > 0) {\n                    //если меняем на пакет\n                    let obj = this.makePackage();\n                    let array = obj.array;\n                    this.multi.multies.push(new _proto_js__WEBPACK_IMPORTED_MODULE_0__[\"Multi\"](array, obj.packName, obj.template));\n                    this.choosePark(array, park, index);\n                } else if (\n                    this.multi.arrays.risk.length > 0 ||\n                    this.multi.arrays.wrapping.length > 0\n                ) {\n                    //если меняем на комплекс\n                    // создаем новый мульти узел из старого объекта на основании того, что у него записано в рисках и типах отсека\n                    let array = this.makeMulti(multiChanging);\n                    // новый мульти узел, парк, индекс для вставки\n                    if (indexToPaste !== undefined) index = indexToPaste;\n                    this.choosePark(array, park, index);\n                    this.multi.template = [];\n                }\n            } else if (\n                this.multi.arrays.risk.length > 0 ||\n                this.multi.arrays.wrapping.length > 0\n            ) {\n                let array = [];\n                // разделяем мульти-риски на пакеты и просто риски\n                const splittedRisks = splitRisks.call(this);\n                // проверяем есть ли там больше пакетов чем надо\n                const needToEnroll = checkEnroll(splittedRisks);\n                // если есть, делаем из этого один большой мульти-узел\n                if (needToEnroll) {\n                    const enrolledRisks = enrollRisks.call(this, splittedRisks);\n                    this.multi.arrays.risk = [];\n                    // удаляем базовые риски, чтобы потом поместить в начало\n                    delete enrolledRisks[BASENAME];\n                    this.multi.arrays.risk = Object.keys(enrolledRisks);\n                    // добавляем базовые риски в начало списка\n                    this.multi.arrays.risk.unshift(BASENAME);\n                    array = this.makeMulti();\n                    array.forEach(pr => {\n                        const limitKoef = enrolledRisks[pr.risk]\n                            ? enrolledRisks[pr.risk]\n                            : 1;\n                        pr.limit = pr.limit * limitKoef;\n                    });\n                } else {\n                    array = this.makeMulti();\n                }\n                this.choosePark(array);\n\n                function splitRisks() {\n                    const packages = []; // все выбранные пакеты\n                    const notPackages = []; // все выбранные процы\n                    const multiArr = [...this.multi.arrays.risk];\n                    // сортируем на пакеты и просто риски\n                    multiArr.map(risk => {\n                        if (this.packages.some(pack => pack.name === risk))\n                            packages.push(risk);\n                        else notPackages.push(risk);\n                    });\n                    return { packages, notPackages };\n                }\n                function checkEnroll({ packages, notPackages }) {\n                    return !(\n                        packages.length === 0 ||\n                        (notPackages.length === 0 && packages.length === 1)\n                    );\n                }\n                function enrollRisks({ packages, notPackages }) {\n                    const sum = {};\n                    packages.forEach(pack => {\n                        // проходимся по каждому пакету, вытаскиваем его риск, добавляем в коллектор, запоминаем лимит\n                        // если риск повторяется, сравниваем по лимиту и оставляем больший лимит\n                        const thisPack = this.packages\n                            .find(p => p.name === pack)\n                            .values.map(val => {\n                                const limit = val.limit ? val.limit : 1;\n                                sum[val.risk] = sum[val.risk]\n                                    ? Math.max(sum[val.risk], limit)\n                                    : limit;\n                            });\n                    });\n                    // проходимся по каждому отдельному риску и добавляем его в список, если уже существует, то ставим коэф 1\n                    notPackages.forEach(risk => {\n                        sum[risk] = 1;\n                    });\n                    return sum;\n                }\n            } else if (this.multi.template.length > 0) {\n                //пакеты\n                let obj = this.makePackage();\n                let array = obj.array;\n                this.multi.multies.push(new _proto_js__WEBPACK_IMPORTED_MODULE_0__[\"Multi\"](array, obj.packName, obj.template));\n                this.choosePark(array);\n                const times = packageTimes.call(this, obj.packName);\n                if (times) {\n                    this.setAlimitAsTimes(times);\n                }\n                /**\n                 * Функция нахождения параметра \"кол-во раз\" в пакете\n                 * @param {string} name - название пакета\n                 * @returns {number} кол-во раз, если undefined значит такого параметра нет\n                 */\n                function packageTimes(name) {\n                    const searchedPack = this.packages.find(pack => pack.name === name);\n                    return searchedPack ? searchedPack.times : false;\n                }\n            }\n            //если не мульти\n            else {\n                this.choosePark(\n                    [new _proto_js__WEBPACK_IMPORTED_MODULE_0__[\"Process\"](this.process)],\n                    undefined,\n                    undefined,\n                    mode\n                );\n            }\n            this.cleanProcess();\n        },\n        /**\n         * функция получения итоговой премии\n         */\n        getTotal: function () {\n            let sum = 0;\n            this.parks.forEach(function (park) {\n                sum += park.getTotal();\n            });\n            return sum;\n        },\n        /**\n         * функция для очистки мусора\n         * сюда поступают уже измененные массивы, то есть с добавленным или удаленным узлами\n         */\n        cleanUpProcessesInParks() {\n            let mass = [];\n            let myFactory = this;\n            // создаем новые парки из имеющихся процессов\n            this.parks.forEach(function (park, i) {\n                let arr = park.check(); //обнуляем все значения для парка(риски, базовая премия, коэфф риска)\n                arr.forEach(function (process) {\n                    delete process.park;\n                    mass.push(new _proto_js__WEBPACK_IMPORTED_MODULE_0__[\"Process\"](process));\n                });\n                if (park.processes.length > 0) park.replaceBase(); //Базовый риск ставим на первое место\n            });\n            const toSplice = [];\n            for (let i = 0; i < this.parks.length; i++) {\n                const park = this.parks[i];\n                if (park.processes.length == 0) toSplice.push(park); //выбираем для удаления пустые парки\n            }\n            toSplice.forEach(park=>myFactory.parks.splice(myFactory.parks.indexOf(park), 1)); // удаляем пустые парки\n            for (let i = 0; i < mass.length; i++) {\n                this.process = mass[i];\n                this.addNewProcess(\"replacing\");\n            }\n\n            this.parks.forEach(function (park) {\n                let mass = park.check(false);\n                park.replaceBase();\n            });\n        },\n        /**\n         * основная функция для расчета, в которую входят все остальные\n         */\n        finalCalc() {\n            this.parkTemplate = [];\n\n            //**************************при загрузке расчета из БД**************************\n            if (risks.length == 0 && this.currObj !== undefined) {\n                for (let i = 0; i < this.currObj.length; i++) {\n                    let currObj = this.currObj;\n                    for (let j = 0; j < currObj[i].values.length; j++) {\n                        if (currObj[i].values[j].type == \"risk\")\n                            risks[currObj[i].values[j].name] = currObj[i].values[j].value;\n                    }\n                }\n            }\n            //******************************************************************************\n            this.cleanUpProcessesInParks(); //обнуляем все значения, необходимые для парка:     +//смотрим есть ли повторяющиеся риски                   +\n            this.calculateParksAmount();\n            this.findMaxLimit();\n            let myFactory = this;\n            this.parks.forEach(park => {\n                park.processes.forEach(process => {\n                    delete process.showRows;\n                });\n            });\n            this.multi.multies.forEach(function (multi) {\n                if (multi.processes.length == 1) {\n                    delete multi.processes[0].multi;\n                    myFactory.multi.multies.splice(\n                        myFactory.multi.multies.indexOf(multi),\n                        1\n                    );\n                }\n            });\n            // это какой то бред который удаляет парки если они пустые, кажется вижу уже второй раз\n            this.parks.forEach(function (park, i) {\n                //\n                if (park.processes.length == 0)\n                    myFactory.parks.splice(myFactory.parks.indexOf(park), 1);\n                else park.calculate(); //считаем каждую строку парка\n            });\n            //подсчет премии с агрегатным лимитом, отличным от обычного\n            //***************** считаем Агр. лимит\n            if (\n                this.a_limit.hand &&\n                ((this.a_limit.type == \"Агр. лимит\" &&\n                    this.a_limit.value > this.a_limit.max_limit) ||\n                    this.a_limit.type == \"Кол-во случаев\")\n            ) {\n                this.parks.forEach(function (park) {\n                    park.applyKoef(LimKoef);\n                });\n            } else {\n                this.a_limit.hand = false;\n                this.a_limit.value = this.a_limit.max_limit;\n                this.a_limit.type = \"Агр. лимит\";\n            }\n            this.totalPrice = this.getTotal();\n            //****************\n            if (isNaN(this.totalPrice)) return;\n            //****************считаем этапы платежей\n            if (this.payment.mode == \"ON\") {\n                if (!this.payment.hand) {\n                    let a = this.totalPrice / 30000;\n                    a -= a % 1;\n                    if (a == 0) a = 1;\n                    else if (a > 12) a = 12;\n                    else {\n                        while (a != 1 && a != 2 && a != 4 && a != 6 && a != 12) {\n                            a--;\n                        }\n                    }\n                    this.payment.val = a;\n                }\n                let spline = Object(_calculation_js__WEBPACK_IMPORTED_MODULE_1__[\"Spline\"])(this.totalPrice, Points.payment, 3);\n                spline /= 100 * (12 - 1);\n                spline = spline * this.payment.val - spline;\n                this.payment.koef = 1 + spline;\n                this.parks.forEach(function (park) {\n                    park.applyKoef(1 + spline);\n                });\n                this.totalPriceWithoutPayments = this.totalPrice;\n                this.totalPrice = this.getTotal();\n            }\n            //****************\n            //****************Агентские\n            if (this.agents.val != 0) {\n                let agentKoef = this.agents.getKoef(this.totalPrice);\n                this.parks.forEach(function (park) {\n                    park.applyKoef(agentKoef);\n                });\n            }\n            //****************\n            //****************Для одного тягача\n            this.totalPrice = this.getTotal();\n            if (this.amountType == \"Тягачей\") {\n                this.totalAmountForSingle = 24;\n            } else {\n                this.totalAmountForSingle = 1;\n            }\n            this.totalPriceForSingle =\n                this.totalPrice / (this.totalAmount / this.totalAmountForSingle);\n            //****************\n            //****************Фактическая премия\n            if (this.practicalPrice.val != 0 && this.practicalPrice.val != \"\") {\n                this.parks.forEach(function (park) {\n                    park.applyPracticalPriceKoef();\n                });\n                let val = this.getTotal();\n                //SKLV 19.06.2018: changed round of val instead of val-(val%1)\n                this.practicalPrice.val = Math.round(val);\n                if (this.bottom.singleAmount)\n                    this.practicalPrice.val /=\n                        this.totalAmount / this.totalAmountForSingle;\n            }\n            //****************\n            this.multi.multies.forEach(function (multi) {\n                multi.calculatePrice();\n            });\n            this.parks.forEach(function (park) {\n                park.getValues();\n            });\n            this.fixHeight();\n        },\n        fixHeight() {\n            //andSKLV: 13.06.2018\n            // this method made to auto change Calc matrix max-height so it can fit in one screen\n            const windowHeight = document.documentElement.clientHeight;\n            const matrix = document.querySelector(\".calc\");\n            const top = matrix ? matrix.offsetTop : 233; //there is the problem with script working before render and matrix=null, 233 is a common offsetTop value\n            const bottomMatrix = document.querySelector(\".bottom\");\n            //check if bottomMAtrix exist. without chech will be error throw at start\n            const bottomMatrixHeight = bottomMatrix ? bottomMatrix.offsetHeight : 80;\n            let maxHeight = windowHeight - (top + bottomMatrixHeight + 8);\n            if (matrix) {\n                matrix.style.maxHeight = `${maxHeight}px`;\n            }\n        },\n        removeCellSelection(matrix = \"matrix_table\", withoutAlready) {\n            const selectedCell = document.querySelector(`.${matrix} .mi_selected`);\n            if (selectedCell !== null) selectedCell.classList.toggle(\"mi_selected\");\n            if (withoutAlready) return true;\n            const alreadySelectedCells = document.querySelectorAll(\n                `.${matrix} .alreadySelected`\n            );\n            alreadySelectedCells.forEach(cell =>\n                cell.classList.toggle(\"alreadySelected\")\n            );\n        },\n        /**\n         * Функция удаления проца, удаляет из парка и из мульти-узла с учетом наследственности мульти-узла\n         * @param {Object} process - проц, который надо удалить\n         */\n        deleteProcess(process) {\n            if (process.multi) {\n                if (process.multi.multi) {\n                    process.multi.multi.processes.splice(\n                        process.multi.multi.processes.indexOf(process.multi),\n                        1\n                    );\n                }\n                process.multi.processes.splice(\n                    process.multi.processes.indexOf(process),\n                    1\n                );\n                if (process.multi.processes.length < 2) {\n                    let newMulti;\n                    if (process.multi.prevMulti) newMulti = process.multi.prevMulti;\n                    else if (process.multi.multi) newMulti = process.multi.multi;\n                    if (newMulti) {\n                        // если в мульти узле остался только один проц\n                        // то удаляем этот мульти, а оставшемуся процу присваиваем предыдущим мульти узел\n                        process.multi.processes[0].multi = newMulti;\n                        if (!newMulti.processes) {\n                            throw new Error(\n                                \"Верхний мульти с другой структурой. Нет .processes\"\n                            );\n                            debugger;\n                        }\n                        newMulti.processes.push(process.multi.processes[0]);\n                    }\n                    this.multi.multies.splice(\n                        this.multi.multies.indexOf(process.multi),\n                        1\n                    );\n                }\n            }\n            if (process.park.processes.length > 1) {\n                //удаляем процесс из парка\n                process.park.processes.splice(\n                    process.park.processes.indexOf(process),\n                    1\n                );\n            }\n            // если процесс единственный в парке, удаляем парк\n            else this.parks.splice(this.parks.indexOf(process.park), 1);\n        },\n        /**\n         * Функция очистки фактори от всех следов вычислений. обнуление\n         */\n        cleanCalculations() {\n            debugger;\n            this.calculationName = \"\";\n            const lim = this.a_limit;\n            lim.max_limit = 0;\n            lim.value = 0;\n            lim.type = \"Агр. лимит\";\n            lim.hand = false;\n            this.agents.mode = \"%\";\n            this.agents.val = \"\";\n            this.amountType = \"Тягачей\";\n            this.bottom.priceMode = \"price\";\n            this.bottom.singleAmount = false;\n            this.matrixType = \"HIP\";\n            this.multi.arrays.risk = [];\n            this.multi.arrays.wrapping = [];\n            this.multi.count = 0;\n            this.multi.mode = false;\n            this.multi.multies = [];\n            this.multi.template = [];\n            this.parkTemplate = [];\n            this.parks = [];\n            this.payment.hand = false;\n            this.payment.mode = \"ON\";\n            this.payment.val = 0;\n            this.practicalPrice.koef = 1;\n            this.practicalPrice.val = \"\";\n            this.cleanProcess();\n            delete this.totalAmount;\n            delete this.totalAmountForSingle;\n            delete this.totalPrice;\n            delete this.totalPriceForSingle;\n            delete this.totalPriceWithoutPayments;\n        },\n        /**\n         * Запрос на получение данных из БД calculation_link\n         * @param {string} type - тип по которому искать в БД: 'calc_id','company_id' ...\n         * @param {string} id - id по которому искать в формате строки\n         */\n        async loadLinks(type, id) {\n            // проверка запроса\n            if (typeof id === \"number\") id = `${id}`;\n            if (\n                type !== \"calc_id\" &&\n                type !== \"company_id\" &&\n                type !== \"agent_id\" &&\n                type !== \"contact_id\" &&\n                type !== \"id\"\n            ) {\n                console.error(\n                    `Параметры функции неверны: ${type} должен быть calc_id, company_id ...`\n                );\n                return undefined;\n            }\n            // формирование запроса\n            const fd = new FormData();\n            fd.append(\"type\", type);\n            fd.append(\"id\", id);\n            const req = new Request(\"php/get_link.php\", { method: \"POST\", body: fd });\n            return fetch(req).then(\n                async resp => {\n                    return (resp = await resp.json());\n                },\n                err => {\n                    console.error(\"Ошибка поиска привязки расчета\");\n                }\n            );\n        }\n    };\n});\n\n\n//# sourceURL=webpack:///./js/app.js?");

/***/ }),

/***/ "./js/calculation.js":
/*!***************************!*\
  !*** ./js/calculation.js ***!
  \***************************/
/*! exports provided: loadRisks, SplineKoeff, Spline, Franchise, BubbleSort, Limit, isNumeric, addSpaces, intFromStr, delay, parseDate, getPathName */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"loadRisks\", function() { return loadRisks; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SplineKoeff\", function() { return SplineKoeff; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Spline\", function() { return Spline; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Franchise\", function() { return Franchise; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BubbleSort\", function() { return BubbleSort; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Limit\", function() { return Limit; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isNumeric\", function() { return isNumeric; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"addSpaces\", function() { return addSpaces; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"intFromStr\", function() { return intFromStr; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"delay\", function() { return delay; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"parseDate\", function() { return parseDate; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getPathName\", function() { return getPathName; });\n\nwindow.Points={\n    cost:[],\n    amount:[],\n    risk:[],\n    payment: []\n};\nwindow.MB= [[],[]];\nwindow.MC= [[],[]];\nwindow.MD= [[],[]];\nwindow.risks=[];\nwindow.koef_pow = null;\nwindow.BASENAME = 'CMR/TTH пакет';\nwindow.OLDBASENAMES = ['Базовые риски'];\n\ninit();\n// SKLV: функция для асинхронной загрузки БД\n// Сначала загружаем БД, после ответа парсим данные и считаем коэффициенты\nasync function init() {\n    let response = await loadDB();\n    initDB(response);\n    //Функция загрузки рисков из json и создания массива risks\n    loadRisks();\n}\n\n/**\n * загружаем точки из БД\n */\nasync function loadDB () {\n    try{\n        let resp = await fetch('php/loadPoints.php');\n        resp = await resp.json();\n        return resp;\n    } catch (e){\n        alert ('Проблемы с загрузкой базы данных. Работа в тестовом режиме. Обратитесь к разработчику');\n        console.error(e);\n        let resp = await fetch ('./src/fakeResponse.json');\n        resp = await resp.json();\n        return resp;\n    }\n}\nfunction initDB(resp) {\n    let ar = resp;\n        for(let i=0;i<ar.length;i++){\n        if(ar[i]['number']*1==1) Points.amount.push([ar[i]['x']*1,ar[i]['y']*1]);\n        else if(ar[i]['number']*1==2) Points.cost.push([ar[i]['x']*1,ar[i]['y']*1]);\n        else if(ar[i]['number']*1==3) Points.risk.push([ar[i]['x']*1,ar[i]['y']*1]);\n        else if(ar[i]['number']*1==4) Points.payment.push([ar[i]['x']*1,ar[i]['y']*1]);\n        else if(ar[i]['number']*1==999) koef_pow=ar[i]['x']*1;\n    }\n    SplineKoeff(0, Points.amount);\n    SplineKoeff(1, Points.cost); //интерполируем как жОские пацаны\n    SplineKoeff(2, Points.risk); //продолжаем интерполировать как жОские пацаны\n    SplineKoeff(3, Points.payment);\n};\n/**\n * Функция создания массива риск - коэф. из файла конфигурации\n * @param {string} param - название файла конфигурации каретки\n */\nasync function loadRisks (param = 'HIP.json') {\n    try {\n        let currObj=[];\n        const resp = await fetch(`./src/${param}`);\n        try {\n            let data = await resp.json();\n            currObj=data;\n            if(risks.length==0){\n                for(let i=0;i<currObj.length; i++){\n                    for(let j=0; j<currObj[i].values.length;j++){\n                        if(currObj[i].values[j].type==\"risk\") risks[currObj[i].values[j].name]=currObj[i].values[j].value;\n                    }\n                }\n            }\n        } catch (error) {\n            console.error(`Parsing risks json failed: ${error}`);\n        }   \n    } catch (error){\n        console.error(`Risks loading failed: ${error}`);\n    }\n}\n/**\n * функция получения массива значений для возможности обращения к ним через график\n * @param {number} index \n * @param {array} mass \n */\nfunction SplineKoeff(index, mass)\n{\n\n    let C=[];\n    let B=[];\n    let D=[];\n    let num=mass.length;\n    let n=num-1;\n    let NM1=n-1;\n\n    if(num<2) return false;\n    if(num<3){\n        B[0]=(mass[1][1]-mass[0][1])/(mass[1][0]-mass[0][0]);\n        C[0] = 0;\n        D[0] = 0;\n        B[1] = B[0];\n        C[1] = 0;\n        D[1] = 0;\n        MB[index] = B;\n        MC[index] = C;\n        MD[index] = D;\n        return;\n    }\n    else\n    {\n        D[0]=mass[1][0]-mass[0][0];\n        C[1] = (mass[1][1] - mass[0][1]) / D[0];\n        for (let i = 1; i < NM1+1; i++) {\n            D[i] = mass[i + 1][0] - mass[i][0]; \n            B[i]=2*(D[i-1]+D[i]);\n            C[i + 1] = (mass[i + 1][1] - mass[i][1]) / D[i];\n            C[i] = C[i + 1] - C[i];\n        };\n        B[0] = -D[0];\n        B[n] = -D[n - 1];\n        C[0] = 0;\n        C[n] = 0;\n        if(num==3){\n            for (let i = 1; i < n+1; i++) {\n                let T = D[i-1] / B[i-1];\n                B[i] = B[i] - T * D[i-1];\n                C[i] = C[i] - T * C[i-1];\n            };\n            C[n] = C[n] / B[n];\n            for (let IB = 1; IB < n+1; i++) {\n                let i = n - IB;\n                C[i] = (C[i] - D[i] * C[i + 1]) / B[i];\n            };\n\n            B[n] = (mass[n][1] - mass[NM1][1]) / D[NM1] + D[NM1] * (C[NM1] + 2 * C[n]);\n            for (let i = 0; i < NM1+1; i++) {\n                B[i] = (mass[i + 1][1] - mass[i][1]) / D[i] - D[i] * (C[i + 1] + 2 * C[i]);\n                D[i] = (C[i + 1] - C[i]) / D[i];\n                C[i] = 3 * C[i];\n            };\n\n            C[n] = 3 * C[n];\n            D[n] = D[n - 1];\n            MB[index] = B;\n            MC[index] = C;\n            MD[index] = D;\n        }\n        else{\n            C[0] = C[2] / (mass[3][0] - mass[1][0]) - C[1] / (mass[2][0] - mass[0][0]);\n\n\n            C[n] = C[n - 1] / (mass[n][0] - mass[n - 2][0]) - C[n - 2] / (mass[n - 1][0] - mass[n - 3][0]);\n            C[0] = C[0] * Math.pow(D[0], 2) / (mass[3][0] - mass[0][0]);\n            C[n] = -C[n] * Math.pow(D[n-1], 2) / (mass[n][0] - mass[n - 3][0]);\n            for (let i = 1; i < n+1; i++) {\n\n                let T = D[i-1] / B[i-1];\n                B[i] = B[i] - T * D[i-1];\n                C[i] = C[i] - T * C[i-1];\n            };\n            C[n] = C[n] / B[n];\n            for (let IB = 1; IB < n+1; IB++) {\n                let i = n - IB;\n                C[i] = (C[i] - D[i] * C[i + 1]) / B[i];\n            };\n            B[n] = (mass[n][1] - mass[NM1][1]) / D[NM1] + D[NM1] * (C[NM1] + 2 * C[n]);\n            for (let i = 0; i < NM1+1; i++) {\n                B[i] = (mass[i + 1][1] - mass[i][1]) / D[i] - D[i] * (C[i + 1] + 2 * C[i]);\n                D[i] = (C[i + 1] - C[i]) / D[i];\n\n                C[i] = 3 * C[i];\n            };\n            C[n] = 3 * C[n];\n            D[n] = D[n - 1];\n            MB[index] = B;\n            MC[index] = C;\n            MD[index] = D;\n        }\n\n    }\n}\n/**\n * функция получение значения из графика\n * @param {number} U значение\n * @param {array} mass массив с точкаии\n * @param {number} index к какому из массивов обращаемся\n */\nfunction Spline(U, mass, index){\n    if (isNaN(U) || U===undefined){\n        console.error(\"Ошибка в вычислениях, необходимо обратиться к разработчику\");\n        return 1;\n    }\n    if (U>mass[mass.length-1][0]) {\n        // если значением стоимости или лимита превышает наибольшее в массиве, то коэф не высчитываем, а передаем от последней точки\n        alert ('Стоимость превышает максимальное значение графика. Значение коэффициента взято с последней точки');\n        return mass[mass.length-1][1];\n    }\n    let n=mass.length-1;\n    let i=0;\n    if(i>=n+1){\n        i=0;\n    }\n\n    if(mass[i][0]>U){\n        i=0;\n        let J = n+1;//24\n        let k;\n        do{\n            k=Math.round((i+J)/2);\n\n            if(U<mass[k][0]){\n                J=k;\n            }\n            if(U>=mass[k][0]){\n                i=k;\n            };\n        }while(J>i+1);\n        let dx=U-mass[i][0];\n        let Spline1=mass[i][1]+dx*(MB[index][i]+dx*(MC[index][i]+dx*MD[index][i]));\n        return Spline1;\n    }\n\n    if(U<=mass[i+1][0])\n    {\n        let dx=U-mass[i][0];\n        let Spline1=mass[i][1]+dx*(MB[index][i]+dx*(MC[index][i]+dx*MD[index][i]));\n        return Spline1;\n    }\n    else{\n        i=0;\n        let J = n+1;//24\n        let k;\n        do{\n            k=Math.round((i+J)/2);//12\n            if(U<mass[k][0]){\n                J=k;\n            }\n            if(U>=mass[k][0]){\n                i=k;\n            };\n            let g=i+1;\n\n        }while(J>i+1);\n        let dx=U-mass[i][0];\n        let Spline1=mass[i][1]+dx*(MB[index][i]+dx*(MC[index][i]+dx*MD[index][i]));\n        if (!checkSpline(Spline1,i)) {\n            // если по каким то причинам сплайн выдал значение, которое не лежит между двумя точками, \n            // то берем просто пропорциональное значение между ними\n            const diff = mass[i + 1][1] - mass[i][1];\n            const ratio = (U - mass[i][0]) / (mass[i + 1][0] - mass[i][0]);\n            Spline1 = (ratio*diff) + mass[i][1];\n        }\n        return Spline1;\n        /**\n         * Функция проверки того, находится ли значение между границами интервала\n         * @param {number} spline - посчитанное значение сплайна\n         * @param {number} ind - нижняя граница интервала, которому пренадлежит эта точка\n         * @returns {boolean} true - если лежит в интервале\n         */\n        function checkSpline (spline, ind) {\n            let bottomEdge = mass[ind][1];\n            let topEdge = mass[ind+1][1];\n            if (bottomEdge>topEdge) [bottomEdge,topEdge] = [topEdge, bottomEdge];\n            return (spline>bottomEdge && spline<topEdge);\n        }\n    }\n\n}\n/**\n * функция получения франшизы, единица минус корень квадратный из франшизы деленной на стоимость\n * @param {number} cost \n * @param {number} franchise \n */\nfunction Franchise(cost, franchise){\n    if(franchise<cost){\n\n        return 1-Math.pow(franchise/cost, 0.5);\n    }\n    else if(franchise>=cost) return 0;\n}\n\nfunction BubbleSort(mass)       // A - массив, который нужно\n{\n    let A=[];\n    for(let key in mass){\n        A.push(mass[key]);\n    }\n\n                   // отсортировать по возрастанию.\n    let n = A.length;\n    for (let i = 0; i < n-1; i++){\n        for (let j = 0; j < n-1-i; j++){\n            if (A[j+1][0] < A[j][0]){\n                let t = A[j+1]; A[j+1] = A[j]; A[j] = t;\n            }\n        }\n    }\n    return A;    // На выходе сортированный по возрастанию массив A.\n}\nfunction Limit(cost, limit){\n    return Math.pow(limit/cost, 1/koef_pow)\n};\nfunction isNumeric(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction addSpaces(nStr) {\n    nStr += '';\n    let x = nStr.split('.');\n    let x1 = x[0];\n    let x2 = x.length > 1 ? '.' + x[1] : '';\n    let rgx = /(\\d+)(\\d{3})/;\n    while (rgx.test(x1)) {\n        x1 = x1.replace(rgx, '$1' + ' ' + '$2');\n    }\n    return x1 + x2;\n}\nfunction intFromStr (str) {\n    return parseInt(str.split(' ').join(''));\n}\nfunction delay (ms=100) {\n    return new Promise ((resolve,reject)=>{\n        setTimeout (resolve,ms);\n    })\n}\nfunction parseDate(date) {\n    let day = date.getDate();\n    let month = date.getMonth() + 1;\n    let year = date.getFullYear();\n    if (day < 10) day = `0${day}`;\n    if (month < 10) month = `0${month}`;\n    return `${day}.${month}.${year}`;\n}\n/**\n * Функция возвращает название поля пути, напр. profile -> Карта компании\n * @param {string} path - строка из $location.$$path\n */\nfunction getPathName (path) {\n    let name;\n    switch (path) {\n        case '/profile':\n            name = 'Карту компании';\n            break;\n        case '/calculation':\n            name = 'Расчет';\n            break;\n        case '/':\n            name = 'Основное меню';\n            break;\n        case '/polis':\n            name = 'Проект документа';\n            break;\n        case '/company':\n            name = 'Редактор карты клиента';\n            break;\n        default:\n            console.error(`Неописанный случай, $location.path = ${path}`);\n            name = 'прошлую вкладку';\n            break;\n    }\n    return name;\n}\n\n\n\n//# sourceURL=webpack:///./js/calculation.js?");

/***/ }),

/***/ "./js/controllers/HIP.js":
/*!*******************************!*\
  !*** ./js/controllers/HIP.js ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/**\n * Created by RoGGeR on 17.07.17.\n */\n\napp.controller(\"HIP\", function ($http, myFactory, $rootScope, $scope) {\n    $rootScope.cacheTemplate={};\n\n    this.myFactory=myFactory;\n    this.delete=function(process){\n        if(process.multi) {\n            if (process.multi.multi) {\n                process.multi.multi.processes.splice(process.multi.multi.processes.indexOf(process.multi),1);\n            }\n            process.multi.processes.splice(process.multi.processes.indexOf(process),1); \n            if (process.multi.processes.length<2) {\n                let newMulti;\n                if (process.multi.prevMulti) newMulti = process.multi.prevMulti;\n                else if (process.multi.multi) newMulti = process.multi.multi;\n                if (newMulti) {\n                    // если в мульти узле остался только один проц\n                    // то удаляем этот мульти, а оставшемуся процу присваиваем предыдущим мульти узел\n                    process.multi.processes[0].multi = newMulti;\n                    if (!newMulti.processes) {\n                        throw new Error('Верхний мульти с другой структурой. Нет .processes');\n                        debugger;\n                    }\n                    newMulti.processes.push(process.multi.processes[0]);\n                }\n                myFactory.multi.multies.splice(myFactory.multi.multies.indexOf(process.multi),1);\n            }\n        }\n        if(process.park.processes.length>1) {\n            //удаляем процесс из парка\n            process.park.processes.splice(process.park.processes.indexOf(process),1);\n        }\n        // если процесс единственный в парке, удаляем парк\n        else myFactory.parks.splice(myFactory.parks.indexOf(process.park), 1);\n        myFactory.finalCalc();\n    };\n    this.copy=function(process){\n        let proc=new Process(process);\n        // если копируем внутри мульти узла, то новый проц перемещаем в конец парка, чтобы он не мешался в мульти узле\n        process.park.processes.splice(process.park.processes.indexOf(process)+1,0,proc);\n        for(let key in proc){\n            if(transportProp.indexOf(key)==-1 && key!=\"park\" && key!=\"totalPrice\") delete proc[key];\n        }\n        myFactory.fixHeight();\n        return proc;\n    };\n    if (this.myFactory.currObj) {\n        for(let i=0;i<this.myFactory.currObj.length; i++){\n            let currObj=myFactory.currObj;\n            for(let j=0; j<currObj[i].values.length;j++){\n                if(currObj[i].values[j].type==\"risk\") risks[currObj[i].values[j].name]=currObj[i].values[j].value;\n            }\n        }\n    }\n    $scope.$on('$destroy', function() {\n        myFactory.cleanProcess();\n        $rootScope.mode=\"\";\n    });\n    this.consolelog=function (val) {\n        console.log(val);\n    };\n\n    $rootScope.mode=\"calc\";\n    let scope=this;\n\n});\n\n\n//# sourceURL=webpack:///./js/controllers/HIP.js?");

/***/ }),

/***/ "./js/controllers/calculationCtrl.js":
/*!*******************************************!*\
  !*** ./js/controllers/calculationCtrl.js ***!
  \*******************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _protos_calc_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../protos/calc.js */ \"./js/protos/calc.js\");\n/* harmony import */ var _protos_loading_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../protos/loading.js */ \"./js/protos/loading.js\");\n/* harmony import */ var _calculation_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../calculation.js */ \"./js/calculation.js\");\n\n\n\n\napp.controller('calculationCtrl',function($rootScope,$http,$cookies, myFactory, $filter, $timeout, $location, $scope){\n    this.span=1;\n    this.karetkaDepth = 1;\n    this.myFactory=myFactory;\n    let scope=this;\n    this.search_params=[];\n    this.isArray = angular.isArray;\n    this.config=\"HIP.json\";\n    this.myFactory.matrixType = 'HIP';\n    if (this.myFactory.HIPname===undefined) this.myFactory.HIPname = 'Перевозчики';\n    this.myFactory.scop = this;\n    if (!this.myFactory.calcObj.isInited) this.myFactory.calcObj = new _protos_calc_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this.myFactory);\n\n    this.loadMatrix = async function () {\n        /**\n         * Инициализация каретки\n         */\n        const param = this.myFactory.karetkaTypes[this.myFactory.HIPname];\n        await $http.post(`./src/${param}`).then(function success (response) {\n            if (myFactory.isLoading) {\n                const loading = new _protos_loading_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"] (true);\n                myFactory.isLoading = loading;\n            }\n            scope.currObj = [];\n            let data = replaceSingleDepth(response.data);\n            data = putDepth(data);\n            scope.currObj = data;\n            scope.myFactory.currObj = data;\n            let pack=scope.currObj.filter(function (param) {\n                return param.url==\"Пакеты\";\n            });\n            pack=pack[0];\n            scope.myFactory.packages=pack.values;\n            if ($location.$$path==='/calculation') scope.myFactory.removeCellSelection('dashboard_container');\n            scope.selectParam(0);\n            if(myFactory.parks.length===0) {\n                scope.karetka.mode=\"making new process\";\n            }\n            scope.myFactory.keyCodes.qwerty.length=scope.currObj.filter(function (obj) {\n                return obj[\"name\"]!=undefined;\n            }).length;\n            scope.navStyle=\"width:\" + 100 / scope.currObj.length + \"%;\";\n            scope.config=\"HIP.json\";\n            scope.myFactory.matrixType=\"HIP\";\n\n            if(myFactory.loadProcess!==undefined){\n                scope.matrix.loadProcess(scope.myFactory.loadProcess.process, scope.myFactory.loadProcess.key);\n                delete scope.myFactory.loadProcess;\n            }\n            /**\n             * Функция для того, чтобы убрать лишнее заглубление, если поле содержит в себе только одно поле, то родителя не нужен\n             * @param {Object} data\n             */\n            function replaceSingleDepth  (data) {\n                const toChangeUpper = {}; // для верхнего уровня типа risk & wrapping\n                const toChangeLower = {}; //  для нижнего уровня типа url\n                const changingData = [...data];\n                // выбираем ячейки в которых количество детей ===1\n                data.forEach((field,ind)=>{\n                    if (field.name && field.values.length===1) toChangeUpper[ind] = field.values[0].name;\n                    if (field.url && field.values.length===1&&field.url!=='Пакеты') toChangeLower[field.url] = field.values[0];\n                })\n                for (let key in toChangeUpper) {\n                    const toPaste = data.find(field=>field.url===toChangeUpper[key]);\n                    changingData[+key].name = toPaste.url;\n                    changingData[+key].values = toPaste.values;\n                    console.warn(`${toPaste.url} был заменен, так как в нем был только один параметр`);\n                }\n                for (let key in toChangeLower) {\n                        const type = toChangeLower[key].type;\n                        const parent = changingData.find(field=>field.name&&field.model===type).values;\n                        // заменяем параметры родителя с одни ребенком на параметры ребенка\n                        let ind;\n                        parent.forEach((val,i)=> {if (val.name===key) ind = i});\n                        parent.splice(ind,1,toChangeLower[key]);\n                    \n                        // удаляем ребенка из общего списка, чтобы не дублировать\n                        changingData.forEach((val,i)=> {if (val.url===key) ind = i});\n                        changingData.splice(ind,1);\n                }\n                return changingData;\n            }\n            /**\n             * Функция для расставления глубины вложенности и родителя\n             * @param {object} data - объект каретки \n             */\n            function putDepth (data) {\n                let changingData = [...data];\n                // присваиваем уровень родителю и его непосредственному ребенку\n                changingData.forEach(el=>{\n                    // всем родителям присваиваем вложенность = 1\n                    if (el.name&&!el.url) {\n                        el.depth = 1;\n                        for (let i=0;i<el.values.length;i++){\n                            const val = el.values[i];\n                            if (val.urlTo) {\n                                const name = val.urlTo;\n                                const obj = data.find(child=>child.url===name);\n                                obj.depth = 2;\n                                obj.parent = el;\n                            }\n                        }\n                    }\n                })\n                putDepthForChilds();\n                /**\n                 * Функция расстановки глубины для следующего уровня вроженности\n                 * если был проставлен хоть один раз уровень, то функция повторяется\n                 */\n                function putDepthForChilds () {\n                    let wasChange = false;\n                    for (let el of changingData) {\n                        if (el.url&&!el.depth) {\n                            const parent = findParent (el);\n                            el.parent = parent;\n                            el.depth = parent.depth + 1;\n                            wasChange = true;\n                        }\n                    }\n                    if (wasChange) putDepthForChilds();\n                }\n                /**\n                 * Функция поиска родителя этого элемента\n                 * @param {*} el \n                 */\n                function findParent (el) {\n                    const mayBeParents = changingData.filter(val=>val.url&&el.model===val.model&&el.url!==val.url);\n                    const parent = mayBeParents.find(val=>{\n                        //  находим имена детей у всех потенциальных родителей\n                        const names = val.values.map(v=>v.name);\n                        // если имя ребенка совпало с искомым, значит это наш родитель\n                        return (names.includes(el.url));\n                    })\n                    return parent;\n                }\n                return changingData;\n            }\n        },function error (response){\n                console.error(response);\n            }\n        );\n    }\n    /**\n     * меняем в парке значение для всех строк\n     * @param {any} value значение, либо string либо number на которое нужно поменять\n     * @param {string} key параметр, который нужно поменять\n     * @param {park} park в каком парке нужно поменять\n     */\n    this.setParamToAllProcess=function(value,key,process){\n        if (typeof value === 'string' && value.includes('-')) return false;\n        const park = process.park;\n        const index = park.processes.indexOf(process);\n        let processes;\n        const multies = [];\n        chooseCase.call (this);\n        myFactory.finalCalc();\n\n        function chooseCase () {\n            const caseWrap = () => {\n                // сортируем на процесы и мульти узлы\n                processes = park.processes.filter((proc, i) => {\n                    // если проц не мульти +\n                    // отсекаем процы в этом мульти узле\n                    if (i>index&&(!proc.multi||(proc.multi!==process.multi||process.multi.show===true))) {\n                        // проверяем есть ли еще процы с таким мульти, если есть, то это не проц, а мульти\n                        if (!proc.multi||(!(proc.multi.show===false&&park.processes.filter(pr=>pr.multi===proc.multi).length>1))) return true;\n                    }\n                    if (i>index&&proc.multi&&!multies.includes(proc.multi)&&(proc.multi!==process.multi||proc.multi.show===true)) {\n                        multies.push(proc.multi);\n                        return false;\n                    }\n\n                    return false;\n                });\n\n                // выбираем подрежим\n                if (Array.isArray(value)) {\n                    if (value.length===1) copySingleWrapParam.call(this);\n                    else copyMultiWrapParams.call(this);\n                }\n                else copySingleWrapParam.call(this);\n            }\n            const caseNonWrap = () => {\n                processes = park.processes.filter((proc, i) => i>index);\n                copySingleParam.call(this);\n            }\n            // выбираем режим\n            (key===\"wrapping\") ? caseWrap() : caseNonWrap();\n        }\n        function copySingleParam () {\n            // меняем процы\n\n            processes.forEach(process => {\n                process[key]=value;\n                if(key===\"limit\" && process.package!==undefined){\n                    delete process.multi.packName;\n                    delete process.multi.template;\n                    let mass=process.multi.processes.filter(proc=>proc.package==process.package);\n                    mass.forEach(proc=>delete proc.package);\n                }\n            });\n        }\n        function copySingleWrapParam() {\n            value = (Array.isArray(value)) ? value[0] : value;\n            // запоминаем состояния для дальнейшего изменения\n            const karetkaState = this.karetka.mode;\n            const multiModeState = myFactory.multi.mode;\n            // меняем процы\n            processes.forEach(process => {\n                process[key]=value;\n                if(key===\"limit\" && process.package!==undefined){\n                    delete process.multi.packName;\n                    delete process.multi.template;\n                    let mass=process.multi.processes.filter(proc=>proc.package==process.package);\n                    mass.forEach(proc=>delete proc.package);\n                }\n            });\n            multies.forEach(multi=>{\n                const excessValues =  [];\n                let isValueExist = false;\n                // выбираем лишние параметры, которые надо отжать, а также проверяем, есть ли в мульти узле копируемый параметр\n                multi.wrapping.forEach(wrap=>{\n                    if (wrap!==value) excessValues.push(wrap);\n                    else isValueExist=true;\n                })\n                // если копируемого проца еще нет, то сначала нажиамем на него, чтобы добавить\n                if (!isValueExist) excessValues.unshift(value);\n                // генерация искуственных оберток\n                const param = {model:\"wrapping\"};\n                myFactory.process = multi;\n                myFactory.multi.mode = true;\n                excessValues.forEach(val=>{\n                    const pseudoValue = {\n                        name: val,\n                        type:\"risk\",\n                        value: risks[val],\n                        selected : true\n                    }\n                    this.karetka.mode = \"changing process\";\n                    this.karetka.clicked(param,pseudoValue);\n                })\n            })\n            this.karetka.mode = karetkaState;\n            myFactory.multi.mode = multiModeState;\n        }\n        function copyMultiWrapParams () {\n            // запоминаем состояния для дальнейшего изменения\n            const karetkaState = this.karetka.mode;\n            const multiModeState = myFactory.multi.mode;\n            const param = {model:\"wrapping\"};\n            myFactory.multi.mode = true;\n            this.karetka.mode = \"changing process\";\n            \n            // изменяем процы на +1 параметр, делая их теперь мульти узлами\n            processes.forEach(proc=>{\n                // переназначаем изменяемый объект\n                myFactory.process = proc;\n                const clickValues = [];\n                // проверяем какие параметры нужно нажать\n                value.forEach(val => {\n                    if (val!==proc.wrapping) clickValues.push(val);\n                })\n                // генерация искуственной обертки\n                const pseudoValue = {\n                    name: clickValues[0],\n                    type:\"risk\",\n                    value: risks[clickValues[0]],\n                    selected : true\n                }\n                this.karetka.clicked(param,pseudoValue);\n                // находим измененный проц в измененном парке\n                const changedProc = proc.park.processes.find(newProc=>(newProc.wrapping===proc.wrapping)&&(newProc.risk===proc.risk));\n                // теперь он стал мульти узлом, поэтому добавлем его в коллектор мультиузлов\n                multies.push(changedProc.multi);\n            })\n            // изменяем мульти узлы\n            multies.forEach(multi=>{\n                // переназначаем изменяемый объект\n                const clickValues = [];\n                // проверяем какие параметры нужно нажать\n                value.forEach(val => {\n                    if (!multi.wrapping.includes(val)) clickValues.push(val);\n                })\n                // проверяем какие параметры нужно отжать\n                multi.wrapping.forEach(val=>{\n                    if (!value.includes(val)) clickValues.push(val);\n                })\n                // нажимаем на нужные параметры\n                clickValues.forEach(val=>{\n                    myFactory.process = multi;\n                    const pseudoValue = {\n                        name: val,\n                        type:\"risk\",\n                        value: risks[val],\n                        selected : true\n                    }\n                    this.karetka.clicked(param,pseudoValue);\n                })\n            })\n            this.karetka.mode = karetkaState;\n            myFactory.multi.mode = multiModeState;\n        }\n    };\n    /**\n     * это вспомогательная функция для angularJS\n     * @param {*} obj ez\n     * @param {*} key ez\n     */\n    this.deleteProperty=function(obj, key){\n        delete obj[key];\n    };\n    /**\n     * функция генерации уникального id для поля процесса в матрице\n     * @param {process} process \n     * @param {number} index \n     */\n    this.getUniqueId = (process, index) =>{\n        return myFactory.parks.indexOf(process.park).toString()+process.park.processes.indexOf(process)+index;\n    }\n    /**\n     * handler при нажатии на верхнюю часть каретки\n     * @param {*} value \n     * @param {*} param \n     */\n    this.clickedOnTopOfDashboard=(value, param)=>{\n        const type=value.type;\n        switch(type){\n            case \"relocate_here\":\n                this.relocateHere(value.urlTo);\n                break;\n            case \"relocatePage\":\n                this.relocatePage(value.urlTo);\n                break;\n            case \"reloadDashboard\":\n                this.reloadDashboard(value.json,value.matrix);\n                break;\n            case \"text\":\n                this.karetka.clicked(param, value);\n                break;\n            case \"currency\":\n                this.karetka.clicked(param, value);\n                break;\n            case \"amount\":\n                this.karetka.clicked(param, value);\n                break;\n            case \"risk\":\n                this.karetka.clicked(param, value);\n                break;\n            case \"amountType\":\n                this.myFactory.changeAmountType();\n                break;\n            case \"currencyValue\":\n                //меняем валюту\n                break;\n            case \"saveCalc\":\n                this.saveCalculation();\n                break;\n            case \"resaveCalc\":\n                if (!this.myFactory.calcObj.isSaved) break;\n                this.saveCalculation({resave:true});\n                break;\n            case \"polisProject\":\n                this.makePolisProject();\n                break;\n        }\n    };\n    this.keyHandler = (e) => {\n        const saveCalc = (e) => {\n            if (!(e.code==='Enter'|| e.code===13||e.key==='Enter'|| e.key===13)) return false;\n            const value = e.currentTarget.value.trim();\n            if (value===''||!value||value===' ') return false;\n            //если расчет еще не сохранен то просто сохранить\n            if (!this.myFactory.calcObj.isSaved) {\n                this.saveCalculation()\n            }\n            //если расчет сохранен, то либо пересохраняем, если имя в инпуте то же, либо сохраняем под новым\n            else {\n                if (this.myFactory.calcObj.name===value) this.saveCalculation({resave:true}); // пересохраняем старый\n                else this.saveCalculation();//сохраняем как новый\n            }\n        }\n        const input = e.currentTarget.id;\n        if (!input) return false;\n        switch (input){\n            case 'inputSaveCalc':\n                saveCalc(e);\n                break;\n        }  \n    }\n    /**\n     * для вывода подсказок\n     */\n    this.tooltip={\n        title:\"\",\n        style: \"\",\n\n        fadeIn(title,isMulti){\n\n            let isTitle=false;\n            if(typeof title === \"object\"){\n                // DONE SKLV: no more ['...'] if it is array\n                title=title.join(`; `);\n                isTitle=true;\n            }\n            else if (risks[title]!==undefined){\n                scope.currObj.forEach(obj=>{\n                    obj.values.forEach(value=>{\n                        if(value.name==title && value.title!==undefined){\n                            isTitle=true;\n                            title=value.title;\n                        }\n                    })\n                })\n            }\n            if(isTitle){\n                this.title=title;\n                scope.oldConfig=scope.config;\n                scope.config='tooltip';\n                if (isMulti) this.style = 'tooltip_span--multi';\n                else this.style = '';\n            }\n\n\n        },\n        fadeOut(){\n            this.title='';\n            scope.config=scope.oldConfig;\n            delete scope.oldConfig;\n        }\n    };\n    /**\n     * функция для отображения \"ёлочкой\" или \"лесинкой\", чтобы повторяющиеся значения были полупрозначными\n     * @param {object} process \n     * @param {string} key \n     */\n    this.isRepeated=function(process,key){\n        let park=process.park;\n        if(myFactory.parks.length==1 && park.processes.length==1 || park.processes.indexOf(process)==0) return false;\n        let prevProcess;\n        if(park.processes.indexOf(process)!==0){//если объект не первый в парке\n            prevProcess=park.processes[park.processes.indexOf(process)-1];\n\n        }\n        else if(myFactory.parks.indexOf(park)!==0){//если мы сравниваем первый объект в парке с последним объектом предыдущего парка\n            let prevPark=myFactory.parks[myFactory.parks.indexOf(park)-1];\n            prevProcess=prevPark.processes[prevPark.processes.length-1];\n        }\n        return prevProcess[key]===process[key];\n\n    };\n    /**\n     * если в режиме мульти ткнули на верхнюю часть каретки\n     */\n    this.multiClicked=function(){\n\n        if(this.karetka.mode==\"making new process\"){\n            myFactory.multiChangeMode();\n            if(!myFactory.multi.mode && scope.selectNextParam()){//здесь мы имеем уже заполненный процесс, остается только добавить его в массив процессов и посчитать\n                myFactory.addNewProcess();\n                myFactory.finalCalc();\n                scope.clean();\n            }\n        }\n        else if(this.karetka.mode==\"changing process\"){\n            let process=myFactory.process;\n            if(!myFactory.multi.mode){\n                if(transportProp[myFactory.document.currParam]==\"risk\" || transportProp[myFactory.document.currParam]==\"wrapping\") myFactory.multiChangeMode();\n                else if(this.currObj[myFactory.document.currParam].url!==undefined){\n                    let url=this.currObj[myFactory.document.currParam].url;\n                    let obj;\n                    this.currObj.forEach(objects=>{\n                        objects.values.forEach(val=>{\n                            if(val.urlTo===url) obj=objects;\n                        })\n                    });\n                    let index=this.currObj.indexOf(obj);\n                    if(transportProp[index]==\"risk\" || transportProp[index]==\"wrapping\") myFactory.multiChangeMode();\n                }\n            }\n            else{\n                if(process.constructor.name==\"Multi\" && process[transportProp[myFactory.document.currParam]].length>1){\n                    this.clean();\n                }\n                else myFactory.multiChangeMode();\n            }\n        }\n    };\n    //*************//*************//*************\n    let timer;\n    this.Confirm=function(){\n        if(myFactory.makingPolis){\n            myFactory.makingPolis=\"Расчет\";\n            $location.path(`/polis`);\n        }\n        this.karetka.mode=\"confirm refresh\";\n\n        timer=$timeout(function () {\n            scope.karetka.mode=\"listener\"\n        },4000);\n\n    };\n    //**************\n\n    this.alert=function(str){\n      alert(str);\n    };\n    this.console=console;\n    this.isNaN=function(val){\n        return isNaN(val);\n    };\n    this.clean=function(flag=false){//очищаем каретку и возвращаем ее в исходное состояние\n        if (flag&&this.myFactory.parks.length===0) {\n            this.relocatePage('dashboard');\n            return true;\n        }\n        this.tooltip.fadeOut();\n        for(let i=0;i<scope.currObj.length;i++){\n            delete scope.currObj[i].selected;//убираем подсвечивание нижней части\n            for(let j=0;j<scope.currObj[i].values.length;j++){\n                delete scope.currObj[i].values[j].selected;//убираем подсвечивание верхней части\n                if(scope.currObj[i].values[j].oldValue!==undefined){\n                    scope.currObj[i].values[j].name=scope.currObj[i].values[j].oldValue;\n                    delete scope.currObj[i].values[j].oldValue;\n                }\n                if(scope.currObj[i].values[j].temporarily){\n                    scope.currObj[i].values.splice(j,1);\n                    j--;\n                }\n            }\n        }\n        myFactory.parkTemplate=[];\n        myFactory.multi.multies.forEach(function (multi) {\n                delete multi.changing;\n                delete multi.showRows;\n                delete multi.unselectable;\n        });\n        myFactory.parks.forEach(function (park) {\n            delete park.changing;\n            delete park.showRows;\n            delete park.unselectable;\n            park.processes.forEach(function (process) {\n                delete process.changing;\n                delete process.showRows;\n                delete process.unselectable;\n            })\n        });\n        this.myFactory.document.clean();\n        this.myFactory.cleanProcess();\n        this.myFactory.multi.clean();\n        this.karetka.mode=\"listener\";\n        myFactory.finalCalc();\n    };\n    this.isValue=function(ctx){//что то для контактов, при создании мульти выбора нужно изменить\n        let val = ctx.phone;\n        return val!=\"\" && val!=undefined && val!=null && !isNaN(val) && !angular.equals(\"\", val)\n    };\n    this.isMulti=function(row){//это тоже изменить\n        return row.contact.length>1;\n    };\n    this.multiHeight=function(contacts){//и это изменить\n        let height=100/contacts.length;\n        height=\"{height:\"+height+\"%;}\";\n        return height;\n    };\n    this.reloadDashboard=function(string, type){\n        if(string===\"Компания\"){\n            string=\"HIP.json\", type=\"HIP\";\n        }\n        $timeout.cancel(timer);\n        this.saveRes=12345;\n        const url = `./src/${string}`;\n        this.karetka.mode=\"listener\";\n        scope.myFactory.removeCellSelection('dashboard_container');\n        $http.post(url).then(function success (response) {\n            scope.myFactory.removeCellSelection();\n            scope.currObj=[];\n            scope.currObj=response.data;\n            scope.myFactory.currObj=response.data;\n            if(string!=\"HIP.json\")scope.selectParam(0);\n            else{\n                let pack=scope.currObj.filter(function (param) {\n                    return param.url==\"Пакеты\";\n                });\n                pack=pack[0];\n                scope.myFactory.packages=pack.values;\n                if(myFactory.parks.length!=0) scope.selectParam(0);\n                else{\n                    scope.selectParam(0);\n                    scope.karetka.mode=\"making new process\";\n                }\n            }\n            // scope.myFactory.keyCodes.qwerty.length=scope.currObj.filter(function (obj) {\n            //     return obj[\"name\"]!=undefined;\n            // }).length;\n            scope.config=string;\n            if(typeof type !=\"undefined\") scope.myFactory.matrixType=type;\n            // если в меню сохранения расчета и расчет сохранен то заполняем импут его именем \n            if (scope.myFactory.matrixType==='calculationActions' && scope.myFactory.document.currParam ===0 && scope.myFactory.document.selectedParam===0) {\n                setTimeout(()=>putNameInInput(scope.myFactory),0);\n            }\n        },function error (response){\n            console.error(response);\n        }\n        );\n    };\n    this.relocatePage=function(value){//переход на другую страницу(как в случае с калькулятором который не написан)\n        this.myFactory.cameFrom = {\n            name: Object(_calculation_js__WEBPACK_IMPORTED_MODULE_2__[\"getPathName\"])($location.$$path),\n            path: $location.$$path,\n        };\n        value = (value===\"dashboard\") ? \"\" : value;\n        if (value[0]==='/') value = value.slice(1);\n        $location.path(`/${value}`);\n    };\n    this.relocateHere=function(url){//переход в углубление вверху каретки\n        for(let i=0; i<scope.currObj.length;i++){\n\n            if(scope.currObj[i]['url']===url){\n                scope.selectParam(scope.currObj.indexOf(scope.currObj[i]));\n            }\n        }\n    };\n    this.currentUl=function(index){//функция проверки для анимации и переключения между ul\n        if(index===scope.myFactory.document.currParam) return true;\n    };\n    this.setCurrentUl=function(key){\n        return transportProp.indexOf(key);\n    };\n    this.currentProcess={};\n    this.selectParam=function (index, flag = true) { // нажатии на nav\n        if(myFactory.parkTemplate.length>0) myFactory.parkTemplate=[];\n        if(this.currObj[index] && this.currObj[index].name===undefined){\n            const url=this.currObj[index].url;\n            const prevParam = this.currObj[this.myFactory.document.currParam];\n            if (flag&&!isChild (this.currObj,prevParam,url)) {\n                this.currObj.forEach(function (params, i) {\n                    params.values.forEach(function (value) {\n                        if(value.urlTo==url) myFactory.document.selectedParam=i;\n                    })\n                })\n            }\n            this.karetkaDepth = this.currObj[index].depth;\n            /**\n             * Функция проверки на то, является ли выбранный элементом вложенностью в родителя\n             * @param {object} currObj - коллектор всех объектов\n             * @param {object} parent - объект родителя в котором будем проверять наличие ребенка\n             * @param {string} child - название ребенка которого будем проверять\n             */\n            function isChild(currObj,parent,child) {\n                let flag = parent.values.some(val=>val.name===url);\n                if (flag) return flag;\n                const pseudoParents = [];\n                // собираем детей у родителей, чтобы проверить третий уровень вложенности\n                parent.values.forEach(val=>{if (val.urlTo) {\n                    const name = val.name;\n                    const el = currObj.find(val=>val.url===name);\n                    pseudoParents.push(el);\n                }})\n                // рекурсивно проверяем всех детей и их детей. если кто то окажется предком, то вернется true\n                const flags = pseudoParents.map(el=>isChild(currObj,el,child));\n                flag = flags.some(bool=>bool);\n                return flag;\n            }\n        }\n        else {\n            myFactory.document.selectedParam=index;\n            this.karetkaDepth = 1;\n        }\n        this.myFactory.document.currParam=index;\n        if(index!==\"\"){\n            this.myFactory.keyCodes.number.length=this.currObj[this.myFactory.document.currParam].values.length+1;\n            if(this.karetka.mode==\"listener\") this.karetka.mode=\"making new process\";\n        }\n        if (this.myFactory.matrixType==='Компания'||this.myFactory.matrixType==='calculationActions') $rootScope.search_result=[];\n        // если в меню сохранения расчета и расчет сохранен то заполняем импут его именем \n        if (this.myFactory.matrixType==='calculationActions' && this.myFactory.document.currParam ===0 && myFactory.document.selectedParam===0) {\n            putNameInInput(this.myFactory);\n        }\n    };\n    function putNameInInput (mf) {\n        if (mf.calcObj.isSaved && mf.calcObj.name &&mf.calcObj.name.length>1) {\n            const name = mf.calcObj.name;\n            document.querySelector('#inputSaveCalc').value = name;\n        }\n    }\n    $scope.putFullName = () => {\n        putFullNameInInput (this.myFactory);\n    }\n    function putFullNameInInput (mf) {\n        if (mf.calcObj.isSaved && mf.calcObj.name &&mf.calcObj.name.length>1) {\n            const date = new Date();\n            let hh = date.getHours();\n            hh = (hh<10) ? `0${hh}` : `${hh}`;\n            let min = date.getMinutes();\n            min = (min<10) ? `0${min}` : `${min}`;\n            let name = mf.calcObj.name;\n            const dateExist = name.match(/ \\d\\d:\\d\\d/);\n            if (dateExist) {\n                name = name.slice(0,dateExist.index);\n            }\n            const fullName = `${name} ${hh}:${min}`\n            mf.scop.nameOfCalculation = fullName;\n            document.querySelector('#inputSaveCalc').value = fullName;\n        }\n    }\n    /**\n     * Функция перехода выше по каретке в параметр родителя\n     * @param {number} index \n     */\n    this.selectParentParam = function () {\n        const childInd = this.myFactory.document.currParam;\n        const parent = this.currObj[childInd].parent;\n        const name = parent.name || parent.url;\n        const index = this.currObj.findIndex(val=>(val.name===name)||(val.url===name));\n        this.selectParam(index,false);\n    }\n    this.depthSymbol = function (x) {\n        const symbols = { 1: 'I', 2: 'II', 3: 'III', 4: 'IV', 5: 'V', 6: 'VI' }\n        return symbols[x];\n    }\n    this.selectNextParam=function(){\n        let i=0;\n        for(let key in myFactory.process){\n            if(myFactory.process[key]===\"\"){\n                scope.selectParam(i);\n                return false;\n            }\n            i++;\n        }\n        return true;\n    };\n    this.checkTransportProp=function (key) {\n        return transportProp.indexOf(key);\n    };\n    this.configuration=function(value){\n        if(value===1){\n            return scope.config==='navigation';\n        }\n    };\n    function get_value(text){// функция получения из \"100 500 рублей\" значения \"100500\"\n        text=text.split(' ');\n        let result=\"\";\n        for (let i = 0; i < text.length; i++) {\n            if(!isNaN(text[i])) result+=text[i];\n        }\n        return result*1;\n    }\n    this.applyFilter = function(value, key, group){\n        if(group!==undefined){\n            if(!Object(_calculation_js__WEBPACK_IMPORTED_MODULE_2__[\"isNumeric\"])(value) && value.indexOf(\"-\")!=-1){\n                value=value.split(\"-\");\n                if(key==\"cost\" || key ==\"limit\" || key==\"franchise\") return $filter(\"currency\")(value[0], '', 0) + \" Р\"+\" - \"+$filter(\"currency\")(value[1], '', 0) + \" Р\";\n                else if(key==\"amount\"){\n                    if(this.myFactory.amountType==\"Тягачей\") {\n                        return $filter(\"currency\")(value[0]/TRACTOR, '', 0)+\" \"+chooseEnd(value[0]/TRACTOR,myFactory.amountType)+\" - \"+$filter(\"currency\")(value[1]/TRACTOR, '', 0)+\" \"+chooseEnd(value[1]/TRACTOR,myFactory.amountType);\n                    }\n                    else if(this.myFactory.amountType==\"Рейсов\") {\n                        return $filter(\"currency\")(value[0], '', 0)+\" \"+chooseEnd(value[0],myFactory.amountType)+\" - \"+$filter(\"currency\")(value[1], '', 0)+\" \"+chooseEnd(value[1],myFactory.amountType);\n                    }\n                }\n            }\n            else{\n                if(key==\"cost\" || key ==\"limit\" || key==\"franchise\") return $filter(\"currency\")(value, '', 0) + \" Р\";\n                else if(key==\"amount\"){\n                    if(this.myFactory.amountType==\"Тягачей\") return $filter(\"currency\")(value/TRACTOR, '', 0)+\" \"+chooseEnd(value/TRACTOR,myFactory.amountType);\n                    else if(this.myFactory.amountType==\"Рейсов\") return $filter(\"currency\")(value, '', 0)+\" \"+chooseEnd(value,myFactory.amountType);\n                }\n                return value;\n            }\n        }\n        else if(typeof key == \"undefined\"){\n            if(value.type==\"currency\") return $filter(value.type)(value.name, '', 0);\n            else if(value.type==\"amount\"){\n                if(this.myFactory.amountType==\"Тягачей\") return $filter(\"currency\")(value.name/TRACTOR, '', 0);\n                else if(this.myFactory.amountType==\"Рейсов\") return $filter(\"currency\")(value.name, '', 0);\n            }\n            else return value.name;\n        }\n        else{\n            if(key==\"cost\" || key ==\"limit\" || key==\"franchise\") return $filter(\"currency\")(value, '', 0) + \" Р\";\n            else if(key==\"amount\"){\n                if(this.myFactory.amountType==\"Тягачей\") return $filter(\"currency\")(value/TRACTOR, '', 0)+\" \"+chooseEnd(value/TRACTOR,myFactory.amountType);\n                else if(this.myFactory.amountType==\"Рейсов\") return $filter(\"currency\")(value, '', 0)+\" \"+chooseEnd(value,myFactory.amountType);\n            }\n            // это вообще что такое???\n            else if(key==\"badAssAmount\") {\n                if(this.myFactory.amountType==\"Тягачей\")return $filter(\"currency\")(value, '', 0)+\" \"+chooseEnd(value,myFactory.amountType);\n                else if(this.myFactory.amountType==\"Рейсов\") return $filter(\"currency\")(value, '', 0)+\" \"+chooseEnd(value,myFactory.amountType);\n            }\n            else if(Array.isArray(value)&&value.length===1) return value[0]; \n            else return value;\n        }\n        // склоняем существительные\n        function chooseEnd(value,type) {\n            value= +value;\n            const typeN = (type===\"Тягачей\") ? 0 : 1;\n            const endings = [[\"Тягач\",\"Тягача\"],[\"Рейс\",\"Рейса\"]];\n            if (value===1 || (value>20 && value%10===1)) return endings[typeN][0];\n            else if ((2<=value&&value<=4) || (value>20 && 2<=value%10&& value%10<=4)) return endings[typeN][1];\n            else return type;\n        }\n    };\n\n    this.alreadySelected = function(model){\n        if($rootScope.mode==\"calc\") return !(myFactory.process[model]===\"\");\n        else return false;\n    };\n    this.addPropertyToProcess=function(param, value){//меняем обычный процесс который у нас в фабрике\n        myFactory.process[param.model]=value;//заполняем соответствующее свойство создаваемого процесса\n\n\n        //*****************Заносим выбранное значение в нижнюю часть каретки\n        if(!param.name){\n            scope.currObj.forEach(function(newParam){\n                if(newParam.name && newParam.model==param.model) param=newParam\n            })\n        }\n        if(param.model=='amount' && scope.myFactory.amountType==\"Тягачей\"){\n            param.selected=value/TRACTOR;\n        }\n        else param.selected=value;\n        //*****************\n\n    };\n\n    this.clickedSelectAll=function(param, value){\n        // SKLV 01.06.18:  кнопка вызова функции удалена из интерфейса\n        scope.myFactory.multiChangeMode(true);\n\n        let flag=true;\n        let multi=scope.myFactory.multi;\n        param.values.forEach(function(val){\n            if(val!=value){\n                scope.myFactory.multi.mode=true; //включаем режим мульти\n\n                if(multi.arrays[param.model].indexOf(val.name)==-1){//если такой элемент не был выбран\n                    val.selected=true;\n                    multi.arrays[param.model].push(val.name);\n                    flag=false;\n                }\n\n            }\n        });\n        if(flag){\n            param.values.forEach(val=>{\n                delete val.selected;\n                multi.arrays[param.model].splice(multi.arrays[param.model].indexOf(val.name),1);\n            })\n        }\n        console.log(scope.myFactory.multi);\n        //this.addPropertyToProcess(param, \"multi\");\n    };\n\n    this.clickedOnMulti=function(param, value){//при нажатии на верх каретки в мульти параметры при режиме мульти\n    // изменение открытого мульти узла\n        if (scope.karetka.mode==\"changing process\" && myFactory.process.constructor.name==\"Process\" && myFactory.multi.mode) {\n            let newMulti;\n            let multi = myFactory.process.multi;\n            let process=multi.processes[multi.processes.indexOf(myFactory.process)];\n            const park = process.park;\n            // сохраняем индекс чтобы потом поставить поц на нужное место\n            let indexProcInPark = process.park.processes.indexOf(process);\n            const indexProcInMulti = multi.processes.indexOf(process);\n            // проверка на наличие в парке такого проца\n            const isContaining = parkContain();\n            // если того что мы хотим добавить еще нет в нашем мульти\n            if(multi[param.model].indexOf(value.name)==-1 ||  multi[param.model].length>1) {\n                if (isContaining) {\n                    // если такой проц уже есть в парке,то создаем новый парк\n                    myFactory.process = Object.assign({},process);\n                    myFactory.multi.arrays.risk = [process.risk];\n                    myFactory.multi.arrays.wrapping = [process.wrapping];\n                    myFactory.multi.arrays[param.model].push(value.name);\n                    myFactory.addNewProcess();\n                    // новый парк всегда помещается в начало, значит берем из него ссылку на мульти\n                    newMulti = myFactory.parks[0].processes[0].multi;\n                }\n                else {\n                    myFactory.process = process;\n                    // добавляем новые данные в учет в коллектор \"мульти\"\n                    myFactory.multi.arrays.risk = [process.risk];\n                    myFactory.multi.arrays.wrapping = [process.wrapping];\n                    myFactory.multi.arrays[param.model].push(value.name);\n                    const array = myFactory.makeMulti();\n                    park.processes.splice(indexProcInPark,1);\n                    // меняем проц на мульти узел\n                    myFactory.addNewProcess(\"changing\",null,indexProcInPark);\n                    // переопределяем индекс проца в парке, так как он может сползти\n                    let newProc = park.processes.find(pr=>(pr.risk===process.risk)&&(pr.wrapping===process.wrapping));\n                    indexProcInPark = park.processes.indexOf(newProc);\n                    multi.processes[indexProcInMulti] = park.processes[indexProcInPark].multi;\n                    newMulti = multi.processes[indexProcInMulti];\n                    // запоминаем прошлый мульти\n                    newMulti.prevMulti = multi;\n                    // назначаем родителя\n                    if (multi.parent) {\n                        if (multi.parent.processes) multi.parent.processes.push(newMulti);\n                        else multi.parent.push(newMulti);\n                        newMulti.parent = multi.parent;\n                    }\n                    else {\n                        newMulti.parent = multi;\n                        newMulti.multi = multi;\n                    }\n                }\n                value.selected=true;\n                myFactory.removeCellSelection();\n                myFactory.finalCalc();\n                // выдедилть ту ячейку которую сейчас изменяем\n                scope.matrix.loadMulti(newMulti.processes[0],param.model);\n                return;\n            }\n            /**\n             * Проверка на то, содержит ли парк такой проц\n             */\n            function parkContain () {\n                const procForCheck = Object.assign({},process);\n                procForCheck[param.model]=value.name;\n                return park.contains([procForCheck]);\n            }\n        }\n    // изменение закрытого мульти узла\n        if(scope.karetka.mode==\"changing process\" && (myFactory.process.constructor.name==\"Multi\")){\n            let mode;\n            // мульти-узел на котором кликнули\n            let multi = myFactory.process;\n            // первый проц из этого мультиузла\n            let process=multi.processes[0];\n            // если он мульти, то берем из него первый проц. ...интересно, а если там 3 уровня?\n            if(process.constructor.name==\"Multi\") process=process.processes[0];\n            // если того что мы хотим добавить еще нет в нашем мульти\n            if(multi[param.model].indexOf(value.name)==-1 ||  multi[param.model].length>1) {\n                myFactory.process = process;\n                // добавляем новые данные в учет в коллектор \"мульти\"\n                myFactory.multi.arrays.risk = multi.risk;\n                myFactory.multi.arrays.wrapping = multi.wrapping;\n\n                //если мы отжимаем(т.е. такой процесс уже есть)\n                if (myFactory.multi.arrays[param.model].indexOf(value.name) != -1) {\n                    myFactory.multi.arrays[param.model].splice(myFactory.multi.arrays[param.model].indexOf(value.name), 1);\n                    mode = 'unclick';\n                    // myFactory.removeCellSelection();\n                    delete value.selected;\n                }\n                //если такого процесса нету\n                else{\n                    console.log(param, value);\n                    // если нажали \"выбрать все\"\n                    if(value.action==\"selectAll\"){\n                        if(multi.packName===undefined) this.clickedSelectAll(param, value);\n                        else{\n                            let mass=[];\n                            multi.template.forEach(obj=>mass.push(obj.risk));\n                            let flag=true;\n                            param.values.forEach(val=>{\n                                if(val.name!=value.name && mass.indexOf(val.name)===-1 && myFactory.multi.arrays[param.model].indexOf(val.name)===-1){\n                                    val.selected=true;\n                                    flag=false;\n                                    myFactory.multi.arrays[param.model].push(val.name);\n                                }\n                            });\n                            if(flag){\n                                myFactory.process=multi;\n                                return false;\n                            }\n                        }\n                    }\n                    \n                    else{\n                        // если выбрали пакеты\n                        if(value.action==\"package\"){\n                            multi.template=value.values;\n                            if(multi.packName!==undefined){\n\n                                myFactory.multi.arrays[param.model].splice(myFactory.multi.arrays[param.model].indexOf(multi.packName))\n                            }\n                            multi.removePackage();\n                            multi.prepareForPackage();\n                            let riskMass=myFactory.multi.arrays[param.model];\n                            if(riskMass.indexOf(BASENAME)!=-1) riskMass.splice(riskMass.indexOf(BASENAME),1);\n                            let mass=[];\n                            multi.template.forEach(obj=>mass.push(obj.risk));\n                            mass.forEach(risk=>{\n                                if(riskMass.indexOf(risk)!=-1) riskMass.splice(riskMass.indexOf(risk),1);\n                            })\n\n                        }\n                        if(multi.packName!==undefined){\n                            param.values.forEach(val=>{\n                                if(val.name==multi.packName) delete val.selected;\n                            });\n                            let mass=[];\n                            multi.template.forEach(obj=>mass.push(obj.risk));\n                            if(mass.indexOf(value.name)!==-1){\n                                console.log(\"такой риск есть в пакете\");\n                                myFactory.process=multi;\n                                return false;\n                            }\n                        }\n                        // добавляем новый параметр в учет в коллектор мульти\n                        myFactory.multi.arrays[param.model].push(value.name);\n                        value.selected=true;\n                    }\n                }\n                // проходим по массиву объекта мульти на котором нажали\n                // если вложенные процы тоже мульти то...\n                multi.processes.forEach(function (multik) {\n                    if(multik.constructor.name==\"Multi\"){\n                        myFactory.multi.multies.splice(myFactory.multi.multies.indexOf(multik), 1);\n                    }\n                });\n                if(multi.risk.length==1 && multi.risk[0]==multi.packName) myFactory.process.risk=multi.risk[0];\n                const isNotMulti = () => {\n                    // если в параметрах мульти коллектора теперь осталось по одному аргументу =\n                    return Object.values(myFactory.multi.arrays).every(el => el.length===1)\n                };\n                //  проверяем не был ли мульти узел изменен на пакет. в этом случае это все еще мульти-узел\n\n                const isNotPack = () => {\n                    const mf = myFactory;\n                    return mf.packages.every(pack=>pack.name!==mf.multi.arrays.risk[0]); \n                }\n                // если произошло отжатие предпоследнего аргумента в мульти, то мульти должен превратиться в проц\n                if (isNotMulti()&&isNotPack()) {\n                    myFactory.removeCellSelection();\n                    const key = (param.model===\"risk\") ? \"wrapping\" : \"risk\";\n                    // определяем проц, который надо удалить\n                    const deletingProc = process.park.processes.find(proc=>{\n                        return (proc[param.model]===value.name)&&(proc[key]===process[key]);\n                    });\n                    deleteProcFromMulti(deletingProc);\n                    myFactory.finalCalc();\n                    // блок удаления этого проца\n                    function deleteProcFromMulti(deletingProc) {\n                        if(deletingProc.multi) {\n                            //удаляем процесс из мульти\n                            deletingProc.multi.processes.splice(deletingProc.multi.processes.indexOf(deletingProc),1);\n                            if (deletingProc.multi.parent) {\n                                let parentMulti = deletingProc.multi.parent;\n                                //  структура родителя может быть разная, поэтому в зависимости от случая меняем путь к его детям\n                                const pathToChild = (parentMulti.processes) ? parentMulti.processes : parentMulti;\n                                // если есть родитель, убираем у родителя ребенка\n                                pathToChild.splice (pathToChild.indexOf(deletingProc.multi),1);\n                            }\n                            if (deletingProc.multi.processes.length<2) {\n                                // если это теперь не мульти узел, то у оставшегося проца убираем ссылку на мульти узел\n                                let newMulti;\n                                // выбираем куда вставить оставшийся проц\n                                // если был записан предыдущий мульти, то туда\n                                if (deletingProc.multi.prevMulti) newMulti = deletingProc.multi.prevMulti;\n                                // если его не было, то в мульти уровнем выше\n                                else if (deletingProc.multi.multi) newMulti = deletingProc.multi.multi;\n                                if (newMulti) {\n                                    deletingProc.multi.processes[0].multi = newMulti;\n                                    // на всякий случай пост\n                                    if (!newMulti.processes) {\n                                        throw new Error('Верхний мульти с другой структурой. Нет .processes');\n                                        debugger;\n                                    }\n                                    newMulti.processes.push(deletingProc.multi.processes[0]);\n                                }\n                                else if (deletingProc.multi.parent) deletingProc.multi.processes[0].multi = deletingProc.multi.parent;\n                                else delete deletingProc.multi.processes[0].multi;\n                                 // из коллектора мульти-узлов убираем этот мульти узел\n                                myFactory.multi.multies.splice(myFactory.multi.multies.indexOf(deletingProc.multi),1);\n                            }\n                        }\n                        \n                        if(deletingProc.park.processes.length>1) {\n                            //удаляем процесс из парка\n                            deletingProc.park.processes.splice(deletingProc.park.processes.indexOf(deletingProc),1);\n                        }\n                        // если процесс единственный в парке, удаляем парк\n                        else myFactory.parks.splice(myFactory.parks.indexOf(deletingProc.park), 1);\n                        scope.clean();\n                    }\n                }\n                else{\n                    if (checkContains()) {\n                        // если такой про уже был в парке, создаем новый парк\n                        myFactory.process=Object.assign({},multi.processes[0]);\n                        myFactory.multi.arrays.risk = multi.risk;\n                        myFactory.multi.arrays.wrapping = multi.wrapping;\n                        myFactory.addNewProcess();\n                        // так как новый парк встает на первое место, то определяем новый рабочий проц\n                        myFactory.process=myFactory.parks[0].processes[0].multi;\n                        myFactory.finalCalc();\n                        // делаем активным новый мульти, который создали\n                        scope.matrix.loadMulti(myFactory.process.processes[0],param.model);\n                    }\n                    else {\n                        // если такого проца нет, то можем менять старый\n                        myFactory.addNewProcess(\"changing\", multi);\n                        myFactory.finalCalc();\n                        myFactory.process=multi;\n                        // если выделили последний элемент, то процесс выбора окончен\n                        if (myFactory.multi.arrays[param.model].length===1) scope.clean();\n                    }\n                    // проверяем, есть ли такой проц уже в парке\n                    function checkContains() {\n                        if (mode==='unclick') return false;\n                        const procForCheck = Object.assign({},myFactory.process);\n                        procForCheck[param.model] = value.name;\n                        return procForCheck.park.contains([procForCheck]);\n                    }\n                }\n\n            }\n            return;\n        }\n        let multi=scope.myFactory.multi;\n    // выбрать все\n        if(value.action==\"selectAll\"){\n            scope.myFactory.multiChangeMode(true);\n            param.values.forEach(function(val){\n                if(val!=value){\n                    val.selected=true;\n                    scope.myFactory.multi.mode=true; //включаем режим мульти\n                    let multi=scope.myFactory.multi;\n                    if(multi.arrays[param.model].indexOf(val.name)==-1){//если такой элемент не был выбран\n                        val.selected=true;\n                        multi.arrays[param.model].push(val.name);\n                    }\n\n                }\n            });\n            console.log(scope.myFactory.multi);\n        }\n        else if(multi.arrays[param.model].indexOf(value.name)==-1){//если такой элемент не был выбран\n            value.selected=true;\n            multi.arrays[param.model].push(value.name);\n        }\n        // если отжали в мульти \n        else if (multi.arrays[param.model].length===1) {\n            delete value.selected;\n            return false;\n        }\n        else {\n            delete value.selected;\n            multi.arrays[param.model].splice(multi.arrays[param.model].indexOf(value.name),1);\n        }\n\n        //здесь должно быть перестроение шаблона\n\n\n        //работа с нижней частью каретки и непосредственно с создаваемым объектом\n        if(multi.arrays[param.model].length>1){\n            scope.addPropertyToProcess(param, \"multi\");\n        }\n        else if(multi.arrays[param.model].length==1){\n            scope.addPropertyToProcess(param, multi.arrays[param.model][0]);\n        }\n        else{\n            delete value.selected;\n            delete param.selected;\n            myFactory.process[param.model]=\"\";\n        }\n        //*********\n    };\n    this.pipeAmount= function(value){\n        if(isNaN(value)) return value;\n        if(value%TRACTOR!==0) return value+\" рейсов\";\n        else return value/24+\" тягачей\";\n    };\n    this.matrix={\n        /**\n         * копируем мультиузел\n         * @param {multi} multi мульти который надо скопировать\n         */\n        copyMulti(multi) {\n            scope.clean();\n            console.log(multi);\n            let array=[];\n            //создаем массив с копиями объектов процессов \n            multi.processes.forEach(function (process) {\n                let newProcess=new Process(process);\n                array.push(newProcess);\n            });\n            //создаем копию объекта мульти\n            let newMulti=new Multi(array);\n            myFactory.multi.multies.push(newMulti);\n            //проверить этот бред, вроде как не нужен\n            for(let key in multi){\n                if(key!=\"processes\") newMulti[key]=multi[key];\n            }\n            const thisPark = multi.processes[0].park; \n            if (isMultiRisk(multi)) {\n                copyMultiRisk();\n            }\n            else copyMultiWrap();\n            function isMultiRisk(multi){\n                let flag = true;\n                if (multi.risk.length===1 && multi.wrapping.length > 1) flag = false;\n                // если это пакет, то тоже копируем в новый парк\n                if (multi.packName) flag=true;\n                return flag;\n            }\n            function copyMultiRisk(){\n                let newPark=new Park(array);\n                    //добавляется новый парк\n                myFactory.parks.splice(myFactory.parks.indexOf(thisPark)+1, 0, newPark);\n            }\n            function copyMultiWrap(){\n                array.forEach((proc)=>{\n                    thisPark.processes.push(proc);\n                })\n            }\n                // переводим каретку в режим выбора рисков для скопированного мульти узла\n            this.loadMulti(array[0],\"risk\");\n            myFactory.finalCalc();\n\n        },\n       \n        /**\n         * удаляем мультиузел\n         * @param {multi} multi \n         */\n        deleteMulti(multi){\n            myFactory.removeCellSelection();\n            let park=multi.processes[0].park;\n            let multiLength = multi.processes.length;\n            deleteProcesses();\n            function deleteProcesses () {\n                // бывают случаи когда узел мульти связан с парком и удаление из парка изменяет объект мульти\n                // таким образом forEach итерируется не по всему объекту\n                // для этого введена рекурсивная функция \n                // если из мульти узла не удаляются элементы вместе с парком, то функция выполнится один раз\n                // если удаляется, то функция будет повторяться пока multi.length не будет равна 0\n                multi.processes.forEach(function (process) {\n                    if(process.package){\n                        park.processes.forEach(proc=>{\n                            delete proc.package;\n                        });\n                    }\n                    // удаляем процессы, которые были в нашем мульти из парка\n                    park.processes.splice(park.processes.indexOf(process), 1);\n                });\n                if (multiLength!==multi.processes.length) {\n                    multiLength = multi.processes.length;\n                    deleteProcesses();\n                }\n            }\n            if(park.processes.length==0) {\n                // удаляем парк если больше нет строк\n                myFactory.parks.splice(myFactory.parks.indexOf(park), 1);\n            }\n            // удаляем мульти у родителя, если у него есть родитель\n            if(multi.parent) this.deleteMultiFromParent(multi);\n            myFactory.multi.multies.splice(myFactory.multi.multies.indexOf(multi), 1);\n            scope.clean();\n            console.log(myFactory.parks, myFactory.multi.multies);\n        },\n        // удаление мульти из всех родителей и их родителей, проверка всех родителей на наличие детей\n        deleteMultiFromParent (multi) {\n            // если есть родительский мульти узел то...\n            let parentMulti=multi.parent;\n            // ... удаляем у родителя его ребенка\n            parentMulti.processes.splice(parentMulti.processes.indexOf(multi),1);\n            // удаляем проц у родителя родителя \n            if (parentMulti.parent) {\n                parentMulti.parent.forEach(child=>{\n                    if (child.processes.includes(multi)) child.processes.splice(child.processes.indexOf(multi),1);\n                })\n            }\n            // ...если в родительском мульти узле остался один ребенок, то удаляем родительский узел\n            if (multi.parent.processes.length<2){\n                parentMulti.processes.forEach(multik => {\n                    if (multik.parent===multik.prevMulti) delete multik.prevMulti;\n                    if (multik.parent===multik.multi) delete multik.multi;\n                    delete multik.parent\n                });\n                myFactory.multi.multies.splice(myFactory.multi.multies.indexOf(parentMulti), 1);\n            }\n            if (multi.multi && multi.multi.length<2){\n                delete multi.multi;\n            }\n        },\n        /**\n         * функция копирования парка\n         * @param {park} oldPark  старый парк, который будем копировать\n         */\n        copyPark(oldPark) {\n            scope.clean();\n            let obj=oldPark.copyPark();\n            let {mass, park}=obj;\n            myFactory.parks.push(park);\n            myFactory.choosePark(mass, park, 0);\n            let array=mass.filter(process=>process.multi===\"create\");\n            if(array.length>0) myFactory.multi.multies.push(new Multi(array));\n            mass.forEach(process=>{\n                if(process.package){\n                    let multi=myFactory.multi.multies[myFactory.multi.multies.length-1];\n                    multi.packName=process.package;\n                    let packages=myFactory.packages.filter(pack=>pack.name==process.package);\n                    multi.template=packages[0].values;\n                    myFactory.finalCalc();\n                    return false;\n                }\n            });\n            myFactory.finalCalc();\n        },\n        /**\n         * удаляем парк\n         * @param {park} park \n         */\n        deletePark(park) {\n            scope.clean();\n            park.processes.forEach(process=>{\n                if(process.multi && process.multi!=\"deleted\") deepRemoveMulti(process.multi);\n            });\n            myFactory.parks.splice(myFactory.parks.indexOf(park),1);\n            myFactory.finalCalc();\n        },\n        /**\n         * функция загрузки процесса из матрицы в каретку\n         * @param {process} process новый процесс, который был создан при копировании\n         * @param {string} prop значение процесса\n         */\n        loadProcess(process, prop) {\n            myFactory.multi.multies.forEach(function (multi) {\n                delete multi.changing;\n            });\n            myFactory.parks.forEach(function (park) {\n                delete park.changing;\n                park.processes.forEach(function (process) {\n                    delete process.changing;\n                })\n            });\n            process.changing=true;//для выделения строки которую меняем\n            scope.karetka.mode=\"changing process\";\n            // делаем все прошлые выделенные ячейки невыделенными, т.е. убираем выделения\n            for(let i=0;i<scope.currObj.length;i++) {\n                for(let j=0;j<scope.currObj[i].values.length;j++) delete scope.currObj[i].values[j].selected;//selected параметр позволяет подсветить то значение, которое выбрано в процессе\n            }\n            scope.myFactory.document.currParam = transportProp.indexOf(prop);\n            scope.myFactory.document.selectedParam = transportProp.indexOf(prop);\n            // заменяем проц с которым работаем\n            myFactory.process=process;\n            // проходим по всем параметрам в проце\n            for(let key in process){\n                // если параметр входит в транспортные пропсы, а не является чем то вспомогательным для расчетов типа multi, baseRate и тд\n                if(transportProp.indexOf(key)!=-1){\n                    if(key=='cost'|| key=='amount'||key=='limit'||key=='franchise'){\n                        // если это один из перечисленных, то выбираем выбираем его в скоупе\n                        const karetkaParam=scope.currObj.find(obj => obj['model']==key);\n                        // перебираем все возможные значения каретки, чтобы выделить подходящее\n                        for(let i=0;i<karetkaParam.values.length;i++){\n                            // если это инпут у количества груза и еще и тягачи, то пересчитываем рейсы в тягачи\n                            if(karetkaParam.values[i].name==\"input\"){\n                                if(key=='amount' && scope.myFactory.amountType==\"Тягачей\"){\n                                    karetkaParam.selected=process[key] / TRACTOR;\n                                }\n                                // а если цена или рейсы, то просто вставляем цену проца\n                                else karetkaParam.selected=process[key];\n                            }\n                            // если значение скоупа соответсвует значению в проце, то выбираем его\n                            if(karetkaParam.values[i].name==process[key]){\n                                karetkaParam.values[i].selected=true;\n                                break;\n                            }\n\n                        }\n                    }\n                    else{\n                        for(let i=0;i<scope.currObj.length;i++){\n                            for(let j=0;j<scope.currObj[i].values.length;j++){\n                                if(scope.currObj[i].values[j].name==process[key]){\n                                    scope.currObj[i].selected=process[key];\n                                    scope.currObj[i].values[j].selected=true;\n                                    if(key==prop) scope.selectParam(i);\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            // если это поле с инпутами и инпут был нестандартный, то при загрузке проца курсор сразу в инпут\n            if (prop=='cost'|| prop=='amount'||prop=='limit'||prop=='franchise') {\n                const clickedParam = scope.currObj.find(obj => obj['model']==prop);\n                // является ли стандартным значением\n                const isCommon = clickedParam.values.some(val=>val.name===process[prop]);\n                // ставим фокус на конкретный инпут\n                const name = `#inputForCurrency-${prop}`;\n                // таймаут для того чтобы успела пройти анимация\n                if (!isCommon) setTimeout(()=> document.querySelector(name).focus(),700);\n            }\n        },\n        /**\n         * функция загрузки мультиузла в каретку\n         * @param {process} process сам мультиузел\n         * @param {string} key параметр мультиузла который мы загружаем\n         */\n        loadMulti(process, key){\n            scope.selectParam(transportProp.indexOf(key));\n            let multi=process.multi;\n\n            if( !Object(_calculation_js__WEBPACK_IMPORTED_MODULE_2__[\"isNumeric\"])(multi[key]) && multi[key].indexOf(\"-\")!=-1 ){\n                return;\n            }\n            else{\n                scope.clean();\n                multi.changing=true;\n                scope.karetka.mode=\"changing process\";\n                if( (key==\"wrapping\" || key==\"risk\") && multi[key].length>1 ){\n                    myFactory.multi.mode=true;\n                    scope.selectParam(transportProp.indexOf(key));\n                    myFactory.process=multi;\n                    for(let i=0;i<scope.currObj.length;i++){\n                        for(let j=0;j<scope.currObj[i].values.length;j++){\n                            if( multi[key].indexOf(scope.currObj[i].values[j].name)!=-1 ){\n                                scope.currObj[i].values[j].selected=true;\n\n                                //для того чтобы подсвечивать вложенности\n                                if(scope.currObj[i].url){\n                                    let url=scope.currObj[i].url;\n                                    for(let a=0;a<scope.currObj.length; a++){\n                                        for(let b=0; b<scope.currObj[a].values.length; b++){\n                                            if(scope.currObj[a].values[b].urlTo==url) scope.currObj[a].values[b].selected=true;\n                                        }\n                                    }\n                                }\n                                //*********\n                            }\n                        }\n                    }\n                    return;\n                }\n                this.loadProcess(multi, key);\n            }\n\n\n        },\n        /**\n         * загружаем свернутый парк в каретку\n         * @param {*} park \n         * @param {*} key \n         */\n        loadPark(park, key) {\n            console.log(scope.currObj);\n            scope.clean();\n            scope.selectParam(transportProp.indexOf(key));\n            scope.karetka.mode=\"changing process\";\n            park.changing=true;\n            myFactory.process=park;\n            if(Array.isArray(park[key])){\n                for(let i=0;i<scope.currObj.length;i++){\n                    for(let j=0;j<scope.currObj[i].values.length;j++){\n                        if( park[key].indexOf(scope.currObj[i].values[j].name)!=-1 ){\n                            scope.currObj[i].values[j].selected=true;\n\n                            //для того чтобы подсвечивать вложенности\n                            if(scope.currObj[i].url){\n                                let url=scope.currObj[i].url;\n                                for(let a=0;a<scope.currObj.length; a++){\n                                    for(let b=0; b<scope.currObj[a].values.length; b++){\n                                        if(scope.currObj[a].values[b].urlTo==url) scope.currObj[a].values[b].selected=true;\n                                    }\n                                }\n                            }\n                            //*********\n                        }\n                    }\n                }\n            }\n            else if(!Object(_calculation_js__WEBPACK_IMPORTED_MODULE_2__[\"isNumeric\"])(park[key]) && park[key].indexOf(\"-\")!=-1){\n                let mass=[];\n                park.processes.forEach(function (process) {\n                    if(!process.package || process.package && process.risk==BASENAME) mass.push(process[key]);\n                });\n                if(mass.length>10) return false;\n\n\n                let currObj=scope.currObj.filter(function (obj) {\n                    return obj.model==key;\n                });\n                currObj=currObj[0];\n                for(let i=0;i<mass.length;i++){\n                    currObj.values.forEach(function (obj) {\n                        if(obj.name==mass[i]){\n                            obj.selected=true;\n                            mass.splice(i,1);\n                            i--;\n                        }\n                    });\n                }\n                mass.forEach(function (elem) {\n                    let difference=null;\n                    let match=null;\n                    currObj.values.forEach(function (obj) {\n                        if(Object(_calculation_js__WEBPACK_IMPORTED_MODULE_2__[\"isNumeric\"])(obj.name)){\n                            if(difference===null){\n                                difference=Math.abs(obj.name-elem);\n                                match=obj;\n                            }\n                            else if(difference!==null && difference>Math.abs(obj.name-elem)){\n                                difference=Math.abs(obj.name-elem);\n                                match=obj;\n                            }\n                        }\n                    });\n                    if(match.oldVal===undefined && match.selected===undefined){\n                        match.oldVal=match.name;\n                        match.name=elem;\n                        match.selected=true;\n                    }\n                    else{\n                        let obj={};\n                        obj.name=elem;\n                        if(key==\"amount\") obj.type=\"amount\";\n                        else obj.type=\"currency\";\n                        obj.temporarily=true;\n                        obj.selected=true;\n                        if(match.name>elem) currObj.values.splice(currObj.values.indexOf(match),0, obj);\n                        else currObj.values.splice(currObj.values.indexOf(match)+1,0, obj);\n                    }\n                });\n\n            }\n            else{\n                this.loadProcess(park, key);\n            }\n\n        }\n    };\n    this.karetka={\n        mode:\"listener\",\n        multiClicked: function (param) {\n            console.log(param);\n        },\n        clicked: function(param, value){\n            if(this.mode==\"listener\") this.mode=\"making new process\";\n\n\n            if(this.mode==\"making new process\"){\n                //если мы выбираем не мульти значения или режим не мульти\n                if(!scope.myFactory.multi.mode || (scope.myFactory.multi.mode && param.model!=\"wrapping\" && param.model!=\"risk\" ) ){\n                    scope.addPropertyToProcess(param,value.name);\n                    value.selected=true;\n                    //выбрать все - отключение надо доделать\n                    if(value.action==\"selectAll\"){\n                        scope.clickedSelectAll(param, value);\n                    }\n\n                    //если выбран пакет\n                    else if(value.action==\"package\"){\n                        let multi=scope.myFactory.multi;\n                        multi.template=value.values;\n                    }\n\n                    if(scope.selectNextParam()){//здесь мы имеем уже заполненный процесс, остается только добавить его в массив процессов и посчитать\n                        myFactory.addNewProcess();\n                        myFactory.finalCalc();\n                        scope.clean();\n                    }\n                }\n                else{\n                    scope.clickedOnMulti(param, value);\n                }\n\n            }\n            if(this.mode==\"changing process\"){\n                if(myFactory.process.constructor.name==\"Park\"){\n                    let park=myFactory.process;\n                    if(Array.isArray(park[param.model]) || !Object(_calculation_js__WEBPACK_IMPORTED_MODULE_2__[\"isNumeric\"])(park[param.model]) && park[param.model].indexOf(\"-\")!=-1){\n                        console.log(param, value);\n                        if(value.selected){\n                            let mass=[];\n                            park.processes.forEach(function (process) {\n                                if(process[param.model]==value.name){\n                                    if(mass.indexOf(process)==-1) mass.push(process);\n                                }\n                            });\n                            myFactory.parkTemplate=mass;\n                            myFactory.parkTemplateChangingValue=value.name;\n                        }\n                        else if(myFactory.parkTemplate.length>0){\n                            value.selected=true;\n                            //убрали старое подсвечивание\n                            for(let i=0;i<scope.currObj.length;i++) {\n                                for (let j = 0; j < scope.currObj[i].values.length; j++) {\n                                    if (myFactory.parkTemplateChangingValue == scope.currObj[i].values[j].name) {\n                                        delete scope.currObj[i].values[j].selected;\n                                        if (scope.currObj[i].url) {\n                                            let flag=false;\n                                            scope.currObj[i].values.forEach(function (otherValue) {\n                                                if(otherValue.selected) flag=true;\n                                            });\n                                            if(!flag){\n                                                let url = scope.currObj[i].url;\n                                                for (let a = 0; a < scope.currObj.length; a++) {\n                                                    for (let b = 0; b < scope.currObj[a].values.length; b++) {\n                                                        if (scope.currObj[a].values[b].urlTo == url) delete scope.currObj[a].values[b].selected;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            //*********\n                            park.changeProperty(param.model, value.name, myFactory.parkTemplate);\n                            myFactory.finalCalc();\n                        }\n                    }\n                    else{\n                        park.changeProperty(param.model, value.name);\n                        myFactory.finalCalc();\n                        scope.clean();\n                    }\n                }\n                \n                else if(myFactory.process.constructor.name==\"Multi\"||(myFactory.process.multi&&myFactory.multi.mode)){\n                    myFactory.finalCalc();\n                    let multi=myFactory.process;\n                    //если включен режим мульти\n                    if(myFactory.multi.mode){\n                        scope.clickedOnMulti(param, value);\n                    }\n\n                    //если режим мульти не включени мы выбираем либо числовые значения, либо меняем пакет\n                    else if( Object(_calculation_js__WEBPACK_IMPORTED_MODULE_2__[\"isNumeric\"])(multi[param.model]) || multi[param.model].length==1){\n                        //param=param.model;\n                        if(value.action==\"package\" || value.action==\"selectAll\"){\n                            if(param.model==\"risk\"){\n                                myFactory.multi.arrays.wrapping=multi.wrapping;\n                                myFactory.process=multi.processes[0];\n                                myFactory.process.risk=value.name;\n                                if(value.action==\"package\"){\n                                    myFactory.multi.arrays[param.model].push(value.name);\n                                    if(multi.processes[0].package){\n                                        multi.processes.forEach(function(proc, i){\n                                            if(proc.package && i!=0){\n                                                proc.park.processes.splice(proc.park.processes.indexOf(proc), 1);\n                                            }\n                                        })\n                                    }\n                                }\n                                else if(value.action==\"selectAll\"){\n                                    let key=param.model;\n                                    param.values.forEach(function (param) {\n                                        if(param.name!=value.name && myFactory.multi.arrays[key].indexOf(param.name)==-1) {\n                                            myFactory.multi.arrays[key].push(param.name);\n                                            param.selected=true;\n                                        }\n                                    })\n                                }\n                                myFactory.addNewProcess(\"changing\", multi);\n                                delete scope.myFactory.process.changing;//убираем выделение строки которую меняли\n                                if(value.action==\"package\") {\n                                    if (value.times) {\n                                        myFactory.setAlimitAsTimes(value.times);\n                                        myFactory.finalCalc();\n                                    }\n                                    else {\n                                        // FIXME: добавить изменение на агр лимит при смене с кол-во раз\n                                    }\n                                }\n                                scope.clean();\n                                console.log(myFactory.parks);\n                            }\n                        }\n                        else if(multi[param.model][0]==multi.packName && param.model==\"risk\"){//если меняется риск с пакетом в мультистроке\n                            let process=multi.processes[0];\n                            if(multi.wrapping.length>1){//если кроме пакета есть еще узлы в этом комплексе\n                                myFactory.multi.arrays.wrapping=multi.wrapping;\n                                process[param.model]=value.name;\n                                myFactory.process=process;\n                                myFactory.addNewProcess(\"changing\", multi);\n                            }\n                            else{//если мы просто делаем обычную строку\n\n                                delete process.multi;\n                                multi.processes.forEach(function (process, i) {\n                                    if(i!=0){\n                                        let park=process.park;\n                                        park.processes.splice(park.processes.indexOf(process), 1);\n                                    }\n                                });\n                                multi.processes=[];\n                                myFactory.multi.multies.splice(myFactory.multi.multies.indexOf(multi), 1);\n                                myFactory.process=process;\n                                if(myFactory.process.package!==undefined) delete myFactory.process.package;\n                                scope.addPropertyToProcess(param, value.name);\n                                delete scope.myFactory.process.changing;//убираем выделение строки которую меняли\n                            }\n                            console.log(myFactory.parks, myFactory.multi.multies);\n                            myFactory.removeCellSelection();\n                            scope.clean();\n                            console.log(myFactory.parks, myFactory.multi.multies);\n\n                        }\n                        else{//если числовое значение       здесь нужно прикрутить изменение пакета\n                            // создаем копию мульти узла с новыми параметрами для проверки\n                            const multiWithNewParams = Object.assign({},multi);\n                            multiWithNewParams.processes.map(pr=>{\n                                pr[param.model] = value.name;\n                            })\n                            // проверяем, есть ли такие процы в парке\n                            const parkContains = multi.processes[0].park.contains(multiWithNewParams.processes);\n                            if (parkContains) {\n                                // если какой то проц из мульти узла уже ест ьв этом парке, то нужно создать новый парка\n                                myFactory.multi.arrays.risk = [value.name];\n                                // в данном случае предусмотрено копирование мульти узлом только с мульти-отсеком\n                                // поэтому параметром возможно задать только риск\n                                myFactory.multi.arrays.wrapping = multi.wrapping;\n                                if (param.model===\"wrapping\") console.error(\"Ожидалось изменение риска, пришел тип отсека. Необходимо поменять логику\");\n                                myFactory.process = Object.assign({},multi.processes[0]);\n                                // удаляем старый мульти из коллектора мульти узлов\n                                myFactory.multi.multies.splice(myFactory.multi.multies.indexOf(multi),1);\n                                const oldPark = multi.processes[0].park;\n                                // удаляем старые процы из его парка\n                                multi.processes.forEach(pr=>{\n                                    oldPark.processes.splice(oldPark.processes.indexOf(pr),1);\n                                })\n                                // делаем новые процы в новом парке\n                                myFactory.addNewProcess();\n                            }\n                            else multi.changeProperty(param.model, value.name);\n                            delete scope.myFactory.process.changing;//убираем выделение строки которую меняли\n                            scope.clean();\n                        }\n                    }\n\n\n\n                }\n                else if(!scope.myFactory.multi.mode) {\n                    if(value.action==\"selectAll\"){\n                        scope.clickedSelectAll(param, value);\n                        let process=myFactory.process;\n                        if(myFactory.process.wrapping!=\"\" && myFactory.process.wrapping!=\"multi\" && myFactory.multi.arrays.wrapping.indexOf(myFactory.process.wrapping)) myFactory.multi.arrays.wrapping.push(myFactory.process.wrapping);\n                        if(myFactory.process.risk!=\"\" && myFactory.process.risk!=\"multi\" && myFactory.multi.arrays.risk.indexOf(myFactory.process.risk)) myFactory.multi.arrays.risk.push(myFactory.process.risk);\n                        myFactory.addNewProcess(\"changing\");\n                        scope.clean();\n                        process=myFactory.multi.multies[myFactory.multi.multies.length-1].processes[0];\n                        scope.matrix.loadMulti(process, param.model);\n                    }\n\n                    //если выбран пакет\n                    else if(value.action==\"package\"){\n                        // если выбран пакет, то автоматически переносим его в новый парк\n                        let multi=scope.myFactory.multi;\n                        myFactory.deleteProcess(myFactory.process);\n                        multi.template=value.values;\n                        myFactory.process[param.model]=value.name;\n                        // myFactory.addNewProcess(\"changing\");\n                        myFactory.addNewProcess();\n                        delete scope.myFactory.process.changing;//убираем выделение строки которую меняли\n                        myFactory.removeCellSelection();\n                        if (value.times) {\n                            myFactory.setAlimitAsTimes(value.times);\n                        }\n                        scope.clean();\n                    }\n                    else{\n                        scope.addPropertyToProcess(param, value.name);\n                        let myVar=myFactory.process[param.model];\n                        let myEl = angular.element(document.querySelector('td.mi_selected'));\n                        // myFactory.removeCellSelection();\n                        myEl.addClass('alreadySelected');\n\n                        if(myFactory.process.package && myFactory.process.multi && myFactory.process.multi!=\"deleted\"){\n                            delete myFactory.process.multi.template;\n                            delete myFactory.process.multi.packName;\n                            let pack=myFactory.process.package;\n                            myFactory.process.multi.processes.forEach(function (process) {\n                                if(process.package && process.package==pack) delete process.package;\n                            });\n                            delete myFactory.process.package;\n                            console.log(myFactory.process.multi);\n                        }\n                        // проверяем есть ли такой проц в парке, эта проблема встречается внутри мульти-узлов\n                        if (myFactory.process.multi && myFactory.process.multi.show) {\n                            const parkContains = myFactory.process.park.contains([myFactory.process]);\n                            if (parkContains) {\n                                // если такой уже есть, то удаляем старый и создаем такой же в новом парке\n                                myFactory.deleteProcess(myFactory.process);\n                                myFactory.addNewProcess();\n                            }\n                        }\n                        delete scope.myFactory.process.changing;//убираем выделение строки которую меняли\n                        scope.clean();\n                    }\n                }\n                else{\n                    //  меняем проц на мульти\n                    if (param.selected===value.name) return;\n                    myFactory.removeCellSelection();\n                    let process=myFactory.process;\n                    // формируем myFactory.multi.arrays\n                    mulriArrayFormation();\n                    if (isContaining()) {\n                        myFactory.process = Object.assign({},process);\n                        myFactory.addNewProcess();\n                    }\n                    else {\n                        myFactory.addNewProcess(\"changing\");\n                    }\n                    scope.clean();\n                    process=myFactory.multi.multies[myFactory.multi.multies.length-1].processes[0];\n                    scope.matrix.loadMulti(process, param.model);\n                    function mulriArrayFormation () {\n                        myFactory.multi.arrays.wrapping=[process.wrapping];\n                        myFactory.multi.arrays.risk=[process.risk];\n                        if(myFactory.multi.arrays[param.model].indexOf(value.name)==-1) myFactory.multi.arrays[param.model].push(value.name);\n                    }\n                    function isContaining () {\n                        const procForCheck = Object.assign({},process);\n                        procForCheck[param.model] = value.name;\n                        return procForCheck.park.contains([procForCheck]);\n                    }\n                }\n            }\n        },\n    };\n    /**\n     * Функция смены каретки\n     * @param {string} param - перевозчики, экспедиторы\n     */\n    this.setHIP = async function (param) {\n        const HIP_name = this.myFactory.karetkaTypes[param];\n        if (this.HIPname===param) {\n            // если выбран тот же параметр, то просто закрываем меню\n            // toogleMenu ведет себя неадекватно с ангуляром, поэтому сделано так\n            document.querySelector('.select_HIP div').classList.remove('select--hidden');\n            return true;\n        }\n        //  удаляем выделение ячеек, чтобы анимация не прыгала\n        myFactory.removeCellSelection('dashboard_container');\n        // обновляем массив риск - коэф.\n        await Object(_calculation_js__WEBPACK_IMPORTED_MODULE_2__[\"loadRisks\"])(HIP_name);\n        // переключаем типа каретки\n        this.myFactory.HIPname = param;      \n        // перезагружаем матрицу\n        this.loadMatrix();\n    }\n    /**\n     * Скрытие/раскрытие меню выбора вида каретки\n     */\n    this.toogleMenu = function () {\n        const menu = document.querySelector('.select_HIP .select_container');\n        menu.classList.toggle('select--hidden');\n    }\n    this.cleanCalcObj = () => {\n        this.myFactory.calcObj = new _protos_calc_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] (this.myFactory);\n    }\n    /**\n     * сохраняем расчет в БД\n     */\n    this.saveCalculation=function ({withoutNotify,withoutName,resave}={}) {\n        if(this.nameOfCalculation==\"\" || this.nameOfCalculation===undefined) {\n            if (!withoutName&&!resave) return false;\n        }\n        let parks=[];\n        myFactory.parks.forEach(function (park) {\n            let newPark = {};\n            for (let key in park) {\n                if (key != \"processes\"&&key!='carGroup') newPark[key] = park[key];\n                else if (key==='carGroup' && park[key]) newPark[key] = park[key].id\n                else {\n                    newPark[key] = [];\n                    park.processes.forEach(function (process) {\n                        let newProcess = {};\n                        for (let prop in process) {\n                            switch (prop) {\n                                case 'multi':\n                                    newProcess[prop] = myFactory.multi.multies.indexOf(process.multi);\n                                    break;\n                                case 'park':\n                                    break;\n                                case 'cars':\n                                    //TODO:сохранение групп авто\n                                    break;\n                                default:\n                                    newProcess[prop] = process[prop];\n                                    break;\n                            }\n                        }\n                        newPark[key].push(newProcess);\n                    })\n                }\n            }\n            parks.push(newPark);\n        });\n        let multies = [];\n        if (myFactory.multi.multies.length > 0) {\n            myFactory.multi.multies.forEach(function (multi) {\n                let newMulti = {};\n                for (let key in multi) {\n                    if (key != \"processes\") newMulti[key] = multi[key];\n                }\n                multies.push(newMulti);\n            })\n        }\n        let save = {};\n        this.myFactory.calculationName = this.nameOfCalculation;\n        try {\n            save.parks = JSON.stringify(parks);\n        }\n        catch {\n            let CircularJSON = window.CircularJSON;\n            save.parks = CircularJSON.stringify(parks);\n        }\n        try {\n            save.mass = JSON.stringify(multies);\n        }\n        catch {\n            let CircularJSON = window.CircularJSON;\n            save.mass = CircularJSON.stringify(multies);\n        }\n        save.payment = myFactory.payment.val;\n        save.agents = myFactory.agents.val + \";\" + myFactory.agents.mode;\n        save.practicalPrice = myFactory.practicalPrice.val + \";\" + myFactory.practicalPrice.koef;\n        save.a_limit = myFactory.a_limit.value;\n        save.a_limitType = myFactory.a_limit.type;\n        save.totalAmount = myFactory.totalAmount;\n        save.totalPrice = myFactory.totalPrice;\n        save.HIPname = myFactory.HIPname;\n        if (resave) {\n            save.type = \"update_calc\";\n            save.name = myFactory.calcObj.name;\n            save.id = myFactory.calcObj.id;\n        }\n        else {\n            save.type = \"save_calc\";\n            save.name = this.nameOfCalculation;\n        }\n        return $http.post(\"php/save.php\", save).then(function success(response) {\n            if (isNaN(Number(response.data))) {\n                alert('Ошибка при сохранении расчета. Пожалуйста, по возможности не закрывайте окно и обратитесь к разработчику');\n                console.error(response.data);\n                return false;\n            }\n            if (resave) alert('Успешно пересохранено');\n            else {\n                if (!withoutNotify) alert(\"Успешно сохранено\");\n                myFactory.calcObj.id = response.data;\n                myFactory.calcObj.isSaved = true;\n                myFactory.calcObj.name = myFactory.calculationName;\n            }\n\n        }, function error(response) {\n            console.log(response);\n        }\n        );\n    };\n    /**\n     * Функция осуществления привязки расчета, доавблению этого объекта и перехода в Проект документа\n     * @param {*} id - id компании к которой привязываем\n     */\n    this.linkToCompany = async (id,FNloadCompany) => {\n        try{\n            await this.linkTo({'company_id':id});\n            await FNloadCompany(id,true);\n        }\n        catch (err) {\n            console.error(err);\n        }\n    }\n    /**\n     * Функция привязки текущего расчета к компании\n     * @param {object} - {type:id} пара к чему привязываем и айдишник\n     */\n    this.linkTo = async (params) => {\n        const calcObj = this.myFactory.calcObj;\n        let alreadySaved = false;\n        if (!calcObj.isSaved) {\n            await this.saveCalculation({withoutNotify:true,withoutName:true});\n            alreadySaved = true;\n        }\n        if (!calcObj.isSaved) {\n            alert ('Ошибка привязки расчета. Пожалуйста, по возможности не закрывайте это окно и братитесь к разработчику');\n            console.error('При привязке не удалось сохранить расчет');\n            return false;\n        }\n        if (calcObj.isSaved && !alreadySaved) await this.saveCalculation({resave:true});\n        const saveObj = {};\n        saveObj.calc_id = calcObj.id;\n        saveObj.company_id = '';\n        saveObj.contact_id = '';\n        saveObj.agent_id = '';\n        for (let toLink in params) {\n            saveObj[toLink] = params[toLink];\n        }\n        saveObj.type = 'link_calc';\n        return $http.post('php/save.php',saveObj).then(async (resp)=>{\n            if (isNaN(Number(resp.data))) {\n                alert('Ошибка привязки расчета. Пожалуйста, по возможности не закрывайте это окно и братитесь к разработчику'); \n                console.error(resp.data);\n            } \n            else {\n                alert('Расчет привязан');\n                await calcObj.loadLink();\n            }\n        },(err)=>{\n            console.error('Ошибка привязки расчета');\n        })\n\n    }\n    /**\n     * Функция сохранения расчета, если в меню сохранения было введено название, но сохранение не вызвано явно, а осущствлен переход в другую область\n     */\n    this.unexpectedSave = async () => {\n        if (this.myFactory.matrixType!=='calculationActions') return false;\n        const inp = document.querySelector('#inputSaveCalc');\n        if (!inp) return false;\n        if (inp.value===''|| inp.value===' ') return false;\n        if (this.myFactory.calcObj.isSaved) {\n            if (this.myFactory.calcObj.name!==inp.value) await this.saveCalculation();\n        }\n        else {\n            await this.saveCalculation();\n        }\n    }\n    this.blurHandler = ev => {\n        const inp = ev.currentTarget;\n        if (inp.value===\"\") putNameInInput(this.myFactory);\n    }\n    function deepRemoveMulti(multi) {\n        multi.processes.forEach(process => {\n            if (process.constructor.name === \"Process\") delete process.multi;\n        });\n        if (multi.parent) deepRemoveMulti(multi.parent);\n        myFactory.multi.multies.splice(myFactory.multi.multies.indexOf(multi), 1);\n    }\n\n    if ($location.$$path==='/calculation') this.loadMatrix('HIP.json');\n\n});\n\n\n//# sourceURL=webpack:///./js/controllers/calculationCtrl.js?");

/***/ }),

/***/ "./js/controllers/companyCtrl.js":
/*!***************************************!*\
  !*** ./js/controllers/companyCtrl.js ***!
  \***************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _protos_company_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../protos/company.js */ \"./js/protos/company.js\");\n/* harmony import */ var _calculation_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../calculation.js */ \"./js/calculation.js\");\n\n\n\napp.controller(\"companyCtrl\", function (myFactory, $scope, $http, $location, $timeout) {\n    //******    Инициализация   *******\n    if ($location.$$path!=='/company') return false; //если вызывается контроллер в профайле, так не должно быть\n    const scope = this;\n    $scope.myFactory = myFactory;\n    $scope.clientCard = {};\n    Object.assign($scope.clientCard, $scope.myFactory.newClientCard);\n    myFactory.document.selectedParam = \"\";\n    myFactory.document.currParam = \"\";\n    myFactory.config = \"new_company.json\";\n    $scope.actions = false;\n    $scope.cardNotEmpty = false;\n    init();\n\n    $scope.$on('$destroy', function () {\n        let flag = false;\n        for (let key in $scope.clientCard) {\n            if ($scope.isntEmpty($scope.clientCard[key])) flag = true;\n        }\n        if (flag) {\n            $scope.myFactory.newClientCard = {};\n            Object.assign($scope.myFactory.newClientCard, $scope.clientCard);\n        }\n    });\n    function init () {\n        if (!myFactory.loadCompany) {\n            $http.post(\"./src/new_company.json\").then(async function success(response) {\n                const obj = response.data;\n                // загрузка в каретку данных из карты клиента\n                for (const key in obj) {\n                    if (obj[key].name != \"Контакты\" && obj[key].name != \"Связи\" && !$scope.isntEmpty($scope.clientCard[obj[key].name])) {\n                        $scope.clientCard[obj[key].name] = {};\n                        for (const prop in obj[key].values) {\n                            $scope.clientCard[obj[key].name][obj[key].values[prop].name] = \"\";\n                        }\n                    }\n                    else if (obj[key].name == \"Контакты\") {\n                        for (const prop in obj[key].values) {\n                            $scope.contact[obj[key].values[prop].name] = \"\";\n                        }\n                    }\n                }\n                // удаляем ИД из отображения в матрице\n                delete $scope.clientCard.ID;\n                $scope.currObj = [];\n                $scope.setEmptyCardParam();\n                // делаем верхнюю каретку как образец из json\n                $scope.currObj = response.data;\n                await Object(_calculation_js__WEBPACK_IMPORTED_MODULE_1__[\"delay\"])(50);\n                if (myFactory.loadClient !== undefined) {\n                    $scope.loadToDashboard(myFactory.loadClient);\n                    delete myFactory.loadClient;\n                } else {\n                    $scope.newDashboard.setCurrentPage(0);\n                }\n            }, function error(response) {\n                console.log(response);\n                \n            });\n        }\n    }\n    //******    Инициализация   *****//\n    $scope.newDashboard = {\n        currentPage: 0,\n        previousPage: -1,\n        toLeft(index) {\n            return this.previousPage < this.currentPage && this.previousPage == index;\n        },\n        toRight(index) {\n            return this.previousPage > this.currentPage && this.previousPage == index;\n        },\n        fromLeft(index) {\n            return this.previousPage > this.currentPage && this.currentPage == index;\n        },\n        fromRight(index) {\n            return this.previousPage < this.currentPage && this.currentPage == index;\n        },\n        checkCurrentPage(index) {\n            return index === this.currentPage;\n        },\n        setCurrentPage(index) {\n            this.previousPage = this.currentPage;\n            this.currentPage = index;\n            $scope.loadToDashboard($scope.currObj[index].values[0].name);\n        },\n        getIndex(param) {\n            this.setCurrentPage($scope.clientCard.indexOf(param));\n        }\n    }\n    $scope.keydownHandler = (event, param, val, cb) => {\n        if ((event.keyCode === 'Enter' || event.keyCode === 9 || event.keyCode === 13 && param.name !== \"Контакты\")) {\n            event.preventDefault();\n            const sc = $scope.currObj;\n            // ищем \n            let parentInd = sc.findIndex(v => v.name === param.name)\n            let childInd = param.values.findIndex(v => v.name === val.name);\n            if (childInd === param.values.length - 1) {\n                parentInd++;\n                childInd = 0;\n            }\n            else childInd++;\n            if (parentInd > sc.length - 1) return;\n            const clicking = sc[parentInd].values[childInd].name;\n            $scope.loadToDashboard(clicking);\n            $scope.setEmptyCardParam();\n        }\n    };\n\n    //******    tooltip   *******\n    $scope.returnMode = \"changing\";\n    $scope.tooltip = \"\";\n    $scope.clean = () => {\n        myFactory.document.selectedParam = '';\n        myFactory.document.currParam = '';\n        $scope.returnMode = \"listener\";\n    };\n    $scope.confirm = () => {\n        $scope.returnMode = \"confirmRefresh\";\n        $timeout(() => {\n            $scope.returnMode = \"listener\";\n        }, 2000);\n    };\n    let previousReturnMode = \"\";\n    $scope.appendTooltip = (key, id) => {\n        previousReturnMode = $scope.returnMode;\n        $scope.returnMode = \"tooltip\";\n        $scope.tooltip = key;\n    };\n    $scope.removeTooltip = (id) => {\n        $scope.tooltip = \"\";\n        $scope.returnMode = previousReturnMode;\n        previousReturnMode = \"\";\n    };\n    //******    tooltip   *******//\n\n\n\n    //******    Contacts   **********\n    \n    $scope.contacts = [];\n    $scope.contact = {\n        clean() {\n            for (const key in $scope.contact) {\n                $scope.contact[key] = \"\";\n            }\n        },\n        isFull() {\n            for (const key in $scope.contact) {\n                if ($scope.contact[key] == \"\") return false;\n            }\n            return true;\n        }\n\n    };\n    $scope.chooseContactFromSearchResult = (contact) => {\n        if (contact.FirstName) $scope.contact[\"Имя\"] = contact.FirstName;\n        if (contact.LastName) $scope.contact[\"Фамилия\"] = contact.LastName;\n        if (contact.PatronicName) $scope.contact[\"Отчество\"] = contact.PatronicName;\n        if (contact.email) $scope.contact[\"Почта\"] = contact.email;\n        if (contact.phones) $scope.contact[\"Телефон\"] = contact.phones;\n        $scope.searchResults = undefined;\n    };\n    //******    Contacts   *******//\n\n\n\n    $scope.loadToDashboard = (key) => {//обратный переход для карточки клиента\n        $scope.currObj.forEach((param, i) => {\n            param.values.forEach(({ name }, j) => {\n                if (name == key) {\n                    if ($scope.newDashboard.currentPage != i) $scope.newDashboard.setCurrentPage(i);\n                    Array.from(document.querySelectorAll(\".company_dashboard_inputs\")).forEach(item => {\n                        item.classList.remove(\"selected\");\n                    });\n                    Array.from(document.querySelectorAll(\"div.clientCard td\")).forEach(node => {\n                        node.classList.remove(\"mi_selected\");\n                        if (node.title == key) node.classList.add(\"mi_selected\");\n                    })\n                    setTimeout(() => {\n                        const elem = document.querySelector(\".ul_current\").firstElementChild.children[j].firstElementChild;\n                        elem.classList.add(\"selected\");\n                        elem.focus();\n                    }, 100);\n                }\n            })\n        })\n        $scope.setEmptyCardParam();\n    };\n    $scope.changeLocation = (path) => {\n        $scope.myFactory.cameFrom = {\n            name: Object(_calculation_js__WEBPACK_IMPORTED_MODULE_1__[\"getPathName\"])($location.$$path),\n            path: $location.$$path,\n        }\n        if (!$scope.myFactory.companyObj.id) {\n            // если расчет не сохранен, то записываем его в хранилище объекта при выходе\n            $scope.myFactory.companyObj = new _protos_company_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\n        } \n        $scope.myFactory.companyObj.card = $scope.clientCard;\n        $location.path(path);\n    };\n    $scope.inputHandler = (value) => {\n    };\n    $scope.swap = (param) => {\n        $scope.actions = param;\n    };\n    //***************    View   ************\n    $scope.isNavLightRed = (name) => {\n        const param = $scope.clientCard[name];\n\n        return $scope.isntEmpty(param) && !contact.isFull(param);\n    };\n    $scope.isntEmpty = (obj) => {\n        for (let key in obj) {\n            if (obj[key] != \"\" && obj[key] != \"Форма организации\" && obj[key] != undefined) return true;\n        }\n        return false;\n    };\n    //***************    View   ************//\n    $scope.consolelog = (val) => {\n        console.log(val);\n    };\n    $scope.checkCardIsEmpty = ()=>{\n       const filled = document.querySelectorAll('.company_matrix_header:not(.company_matrix_header--red)');\n       return !filled.length;\n    }\n    $scope.setEmptyCardParam = ()=> {\n        $scope.cardNotEmpty = !$scope.checkCardIsEmpty ();\n    }\n    $scope.reload = () => {\n        $scope.myFactory.removeCellSelection ('dashboard_container');\n        $scope.clientCard = {};\n        $scope.myFactory.companyObj = new _protos_company_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\n        delete $scope.myFactory.newClientCard;\n        init();\n    }\n    $scope.saveCompany = () => {\n        if ($scope.checkCardIsEmpty()) return false; // не сохраняем пустую карту\n        if ($scope.myFactory.companyObj&&$scope.myFactory.companyObj.isSaved) {\n            // проверка сохраненная ли это компания\n            $scope.updateCompany();\n            return false;\n        }\n        const card = $scope.clientCard;\n        if (card['Данные компании'][\"Наименование организации\"]==='') {\n            // проверка на наличие названия компании\n            alert('Перед сохранением необходимо заполнить поле \"Наименование организации\"');\n            return false;\n        }\n        const saveObj = generateSaveCompanyObj(card);\n        saveObj.type = 'save_company';\n        \n        // сохраняем компанию\n        $http.post('php/save.php',saveObj).then((resp)=>{\n            if (isNaN(Number(resp.data))) {\n                // если вернулся не id значит ошибка\n                console.error(`Problem with saving: ${resp.data}`);\n                alert('При сохранении возникли неполадки. Обратитесь пожалуйста к разработчику');\n                return undefined;\n            }\n            else {\n                console.log(`saved company id ${resp.data}`);\n                alert('Карточка компании сохранена');\n                return resp.data;\n            }\n        },(err)=>{\n            console.log(err);\n        }).then((id)=>{\n            if (id===undefined) return false;\n            // добавляем информацию в фактори\n            const compObj = new _protos_company_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\n            compObj.savedAs({'id':id,'card':card,'savedObj':saveObj});\n            $scope.myFactory.companyObj = compObj;\n            compObj.factory = $scope.myFactory;\n            $scope.addNewConnection('company_id',id);\n        })\n    }\n    /** \n     * создание новой связи в базу Connections\n     * @param {strinf} key - company_id etc\n     * @param {string} val - id\n     */\n    $scope.addNewConnection = (key,val) => {\n        const data ={\n            company_id: 0,\n            contact_id: 0,\n            status: '',\n            email: '',\n            phone: '',\n            end_date: '0000-00-00',\n        };\n        data[key] = val;\n        data.type = 'new_connection';\n        $http.post('php/save.php',data).then((resp)=>{\n            if (isNaN(Number(resp.data))) {\n                // если вернулся не id значит ошибка\n                console.error(`Problem with saving: ${resp.data}`);\n                alert('При сохранении связи возникли неполадки. Обратитесь пожалуйста к разработчику');\n                return undefined;\n            }\n            else {\n                console.log(`connection saved with id ${resp.data}`);\n                return resp.data;\n            }\n        },(err)=>{\n            console.error(err);\n        }).then((id)=>{\n            if (id===undefined) return false;\n            // добавляем информацию в фактори\n            $scope.myFactory.companyObj.connectionID = id;\n        })\n    } \n    $scope.updateCompany = async () => {\n        const updateObj = {};\n        const oldCard = Object.assign({},$scope.myFactory.companyObj.responses.card);\n        const newCard = generateSaveCompanyObj($scope.clientCard);\n        const prevValues = findChanges(oldCard,newCard);\n        const companyId = $scope.myFactory.companyObj.id;\n        const isEmpty = !Object.keys(prevValues).length;\n        if (isEmpty) {\n            alert ('В карточке нет изменений');\n        }\n        else {\n            await updateCard (Object.assign({},newCard),companyId);\n            await saveChanges (prevValues,companyId);\n        }\n        /**\n         * Updating company card in DB to the newest\n         * @param {object} card - object of new card\n         * @param {string} id  - id of company \n         */\n        function updateCard (card,id) {\n            const query = {};\n            query.type = 'update_company';\n            query.card = card;\n            query.id = id;\n            // сохраняем новую карточку в базу данных\n            return $http.post('php/save.php',query).then((resp)=>{\n                if (resp.data=='1') {\n                    alert('Изменения сохранены')\n                    console.log(`company updated; id ${resp.config.data.id}`);\n                    // сохраняем новую карточку для отслеживания изменений\n                    $scope.myFactory.companyObj.responses.card = Object.assign({},resp.config.data.card);\n                }\n                else {\n                    alert ('Проблемы с обновлением данных карточки компании. Пожалуйста, по возможности не закрывайте окно и обратитесь к разработчику');\n                    debugger;\n                    console.error(resp.data);\n                }\n            },(err)=>{\n                console.error(err);\n            })\n        }\n        function saveChanges(prev,companyId) {\n            const query = {};\n            query.type = 'save_company_changes';\n            query.company_id = companyId;\n            query.prev = prev;\n            // сохраняем изменения в базу данных\n            return $http.post('php/save.php',query).then((resp)=>{\n                if (resp.data=='1') {\n                    console.log(`changes saved; id ${resp.config.data.company_id}`);\n                }\n                else {\n                    alert ('Проблемы с обновлением данных карточки компании. Пожалуйста, по возможности не закрывайте окно и обратитесь к разработчику');\n                    console.error(resp.data);\n                }\n            },(err)=>{\n                console.error(err);\n            });\n        }\n        /**\n         * finding differences in old and new card \n         * @param {object} oldC объект старой карточки\n         * @param {object} newC объект новой карточки\n         * @returns {object} объект со старыми значениями, которые были изменены\n         */\n        function findChanges(oldC,newC) {\n            const skip = ['id','date','type','Communications','company_group','company_url'];\n            // если даты не заданы в новом и старом, то убираем их из списка сравнения\n            if ((oldC['give_date']===''||oldC['give_date']==='0000-00-00')&&(newC['give_date']===''||newC['give_date']==='0000-00-00')) skip.push('give_date');\n            if ((oldC['registration_date']===''||oldC['registration_date']==='0000-00-00')&&(newC['registration_date']===''||newC['registration_date']==='0000-00-00')) skip.push('registration_date');\n            //удаляем поля, которые не нужно сравнивать\n            skip.forEach(key=>{\n                if (oldC[key]) delete oldC[key];\n                if (newC[key]) delete newC[key];\n            })\n            const changed = {};\n            // сравниваем старые и новые значения, записываем старые\n            for (const key in oldC) {\n                if (oldC.hasOwnProperty(key)) {\n                    const oldEl = oldC[key];\n                    const newEl = newC[key];\n                    if (oldEl!=newEl) changed[key] = oldEl || '';\n                }\n            }\n            return changed;\n        }\n    }\n    function generateSaveCompanyObj(card) {\n        return {\n            Communications: \"\",\n            INN: card[\"Реквизиты компании\"][\"ИНН\"],\n            KPP: card[\"Реквизиты компании\"][\"КПП\"],\n            Legal_address: card['Доп. информация']['Юридический адрес'],\n            OGRN: card[\"Реквизиты компании\"][\"ОГРН\"],\n            OKPO: card[\"Реквизиты компании\"]['ОКПО'],\n            OKVED: card[\"Реквизиты компании\"]['ОКВЭД'],\n            OrganizationFormID: getOrgForm(card['Данные компании'][\"Форма организации\"]),\n            Real_address: card['Доп. информация']['Фактический адрес'],\n            bank: card[\"Банковские реквизиты\"][\"Банк\"],\n            bik: card[\"Банковские реквизиты\"][\"БИК\"],\n            company_group: \"\",\n            company_mail: card['Доп. информация']['Эл. почта'],\n            company_phone: card['Доп. информация']['Телефон'],\n            company_url: \"\",\n            general_director_passport: card[\"Генеральный директор\"][\"Серия и номер паспорта\"],\n            director_name:card[\"Генеральный директор\"]['ФИО директора'],\n            give_date:card[\"Генеральный директор\"]['Когда выдан'],\n            director_authority:card[\"Генеральный директор\"]['Кем выдан'],\n            director_birth_place: card['Продолжение']['Место рождения'],\n            director_address: card['Продолжение']['Адрес регистрации'],\n            id: \"\",\n            k_account: card[\"Банковские реквизиты\"][\"к/счет\"],\n            name: card['Данные компании'][\"Наименование организации\"],\n            r_account: card[\"Банковские реквизиты\"][\"р/счет\"],\n            registration_date: card['Данные компании'][\"Дата регистрации\"],\n            status: \"\",\n            who_registrate: card['Данные компании'][\"Наименование рег. органа\"],\n        }\n        function getOrgForm (data) {\n            if (data===''||data===undefined) return '';\n            const forms = {\n                \"ЗАО\": \"1\",\n                \"ООО\": \"2\",\n                \"ОАО\": \"3\",\n                \"ИП\": \"4\"\n            }\n            return Number(forms[data]);\n        }\n    }\n});\n\n//# sourceURL=webpack:///./js/controllers/companyCtrl.js?");

/***/ }),

/***/ "./js/controllers/dashboard.js":
/*!*************************************!*\
  !*** ./js/controllers/dashboard.js ***!
  \*************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _protos_company_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../protos/company.js */ \"./js/protos/company.js\");\n/* harmony import */ var _calculation_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../calculation.js */ \"./js/calculation.js\");\n\n\n\n/**\n * Created by RoGGeR on 30.05.17.\n */\n\n\"use strict\";\napp.controller('dashboardCtrl',function($rootScope,$http,$cookies, myFactory, $filter, $timeout, $location,$scope){\n    this.span=1;\n    this.myFactory=myFactory;\n    let scope=this;\n    this.search_params=[];\n    this.isArray = angular.isArray;\n    this.deleteProperty=function(obj, key){\n        delete obj[key];\n    };\n    this.clickedOnTopOfDashboard=(value, param)=>{\n        const isNew = (param.name==='Новый');\n        if (isNew) { //если нажата кнопка \"новый\", проверяем, чтобы не было уже созданного объекта, иначе он сотрется\n            switch (value.name){\n                case 'Расчет':\n                    if (this.myFactory.parks.length>0) return false; //если выбран расчет,а расчет уже есть, то ничего не делаем\n                    break;\n                case 'Полис':\n                    if (this.myFactory.makingPolis) return false; //если выбран полис, и есть старый, то ничего не делаем\n                    break;\n            }\n        }\n        if (param.name==='Найти' && value.name==='Расчет' && this.myFactory.parks.length>0) return false; // убираем возможность поиска при существующем расчете\n        if (param.name===\"Найти\") this.toggleMenu(true);// свертываем кнопку Вернуться\n        const type=value.type;\n        switch(type){\n            case \"relocate_here\":\n                this.relocateHere(value.urlTo);\n                break;\n            case \"relocatePage\":\n                if (isNew) this.clearDataFromPage(value);\n                this.relocatePage(value);\n                break;\n            case \"reloadDashboard\":\n                this.reloadDashboard(value.json,value.matrix);\n                break;\n            case \"text\":\n                this.karetka.clicked(param, value);\n                break;\n            case \"currency\":\n                this.karetka.clicked(param, value);\n                break;\n            case \"amount\":\n                this.karetka.clicked(param, value);\n                break;\n            case \"risk\":\n                this.karetka.clicked(param, value);\n                break;\n            case \"amountType\":\n                this.myFactory.changeAmountType();\n                break;\n            case \"currencyValue\":\n                //меняем валюту\n                break;\n            case \"saveCalc\":\n                this.saveCalculation();\n                break;\n            case \"polisProject\":\n                this.makePolisProject();\n                break;\n        }\n    };\n\n    this.tooltip={\n        title:\"\",\n        fadeIn(title){\n\n            let isTitle=false;\n            if(typeof title === \"object\"){\n                this.title=title;\n                isTitle=true;\n            }\n            else if(risks[title]!==undefined){\n                scope.currObj.forEach(obj=>{\n                    obj.values.forEach(value=>{\n                        if(value.name==title && value.title!==undefined){\n                            isTitle=true;\n                            title=value.title;\n                        }\n                    })\n                })\n            }\n            if(isTitle){\n                this.title=title;\n                scope.oldConfig=scope.config;\n                scope.config='tooltip';\n            }\n\n\n        },\n        fadeOut(){\n            this.title='';\n            scope.config=scope.oldConfig;\n            delete scope.oldConfig;\n        }\n    };\n    \n    \n    //*************//*************//*************\n\n    \n\n\n\n    let timer;\n    this.Confirm=function(){\n        this.karetka.mode=\"confirm refresh\";\n\n        timer=$timeout(function () {\n            scope.karetka.mode=\"listener\"\n        },4000);\n\n    };\n    //**************\n\n    this.alert=function(str){\n      alert(str);\n    };\n    this.console=console;\n    this.isNaN=function(val){\n        return isNaN(val);\n    };\n    this.clean=function(){//очищаем каретку и возвращаем ее в исходное состояние\n        this.tooltip.fadeOut();\n        for(let i=0;i<scope.currObj.length;i++){\n            delete scope.currObj[i].selected;//убираем подсвечивание нижней части\n            for(let j=0;j<scope.currObj[i].values.length;j++){\n                delete scope.currObj[i].values[j].selected;//убираем подсвечивание верхней части\n                if(scope.currObj[i].values[j].oldValue!==undefined){\n                    scope.currObj[i].values[j].name=scope.currObj[i].values[j].oldValue;\n                    delete scope.currObj[i].values[j].oldValue;\n                }\n                if(scope.currObj[i].values[j].temporarily){\n                    scope.currObj[i].values.splice(j,1);\n                    j--;\n                }\n            }\n        }\n        myFactory.parkTemplate=[];\n        myFactory.multi.multies.forEach(function (multi) {\n                delete multi.changing;\n                delete multi.showRows;\n                delete multi.unselectable;\n        });\n        myFactory.parks.forEach(function (park) {\n            delete park.changing;\n            delete park.showRows;\n            delete park.unselectable;\n            park.processes.forEach(function (process) {\n                delete process.changing;\n                delete process.showRows;\n                delete process.unselectable;\n            })\n        });\n        this.myFactory.document.clean();\n        this.myFactory.cleanProcess();\n        this.myFactory.multi.clean();\n        this.karetka.mode=\"listener\";\n        myFactory.finalCalc();\n    };\n    this.isValue=function(ctx){//что то для контактов, при создании мульти выбора нужно изменить\n        let val = ctx.phone;\n        return val!=\"\" && val!=undefined && val!=null && !isNaN(val) && !angular.equals(\"\", val)\n    };\n    this.isMulti=function(row){//это тоже изменить\n        return row.contact.length>1;\n    };\n    this.multiHeight=function(contacts){//и это изменить\n        let height=100/contacts.length;\n        height=\"{height:\"+height+\"%;}\";\n        return height;\n    };\n    this.reloadDashboard=function(string, type){\n        if(string===\"Компания\"){\n            string=\"HIP.json\", type=\"HIP\";\n        }\n        $timeout.cancel(timer);\n        this.saveRes=12345;\n        this.karetka.mode=\"listener\";\n        $http.post(string).then(function success (response) {\n            scope.currObj=[];\n            scope.currObj=response.data;\n            scope.myFactory.currObj=response.data;\n            if(string!=\"HIP.json\")scope.selectParam(0);\n            else{\n                let pack=scope.currObj.filter(function (param) {\n                    return param.url==\"Пакеты\";\n                });\n                pack=pack[0];\n                scope.myFactory.packages=pack.values;\n                if(myFactory.parks.length!=0) scope.selectParam(\"\");\n                else{\n                    scope.selectParam(0);\n                    scope.karetka.mode=\"making new process\";\n                }\n\n            }\n\n            scope.myFactory.keyCodes.qwerty.length=scope.currObj.filter(function (obj) {\n                return obj[\"name\"]!=undefined;\n            }).length;\n            scope.navStyle=\"width:\"+100/scope.currObj.length+\"%;\";\n\n            scope.config=string;\n\n            if(typeof type !=\"undefined\") scope.myFactory.matrixType=type;\n            console.log(myFactory.parks);\n            },function error (response){\n                console.log(response);\n\n            }\n        );\n\n    };\n    this.config=\"dashboard.json\";\n\n    $http.post(\"./src/dashboard.json\").then(function success (response) {//устанавливаем каретку управления и заполняем ее из файла dashboard.json\n        scope.currObj=response.data;\n        scope.myFactory.keyCodes.qwerty.length=scope.currObj.filter(function (obj) {\n            return obj[\"name\"]!=undefined;\n        }).length;\n        if($cookies.get('currentObj')){\n            scope.currObj=$cookies.get('currentObj');\n            $cookies.remove('currentObj');\n\n        }\n        scope.selectParam(0);\n    },function error (response){\n        console.log(response);\n    }\n    );\n\n\n\n    this.relocatePage=function(value){//переход на другую страницу(как в случае с калькулятором который не написан)\n        this.myFactory.cameFrom = {\n            name: Object(_calculation_js__WEBPACK_IMPORTED_MODULE_1__[\"getPathName\"])($location.$$path),\n            path: $location.$$path,\n        };\n        if (value.urlTo==='profile'&&!this.myFactory.companyObj.id) value.urlTo='company';\n        $location.path(`/${value.urlTo}`);\n    };\n    this.clearDataFromPage = function (value) {\n        if (value.urlTo===\"calculation\") this.myFactory.cleanCalculations(); // clear all old calculation info\n        if (value.urlTo===\"company\") {\n            //clear all old company info\n            delete this.myFactory.newClientCard;\n            this.myFactory.companyObj = new _protos_company_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\n        }  \n    } \n    this.relocateHere=function(url){//переход в углубление вверху каретки\n        for(let i=0; i<scope.currObj.length;i++){\n\n            if(scope.currObj[i]['url']===url){\n                scope.selectParam(scope.currObj.indexOf(scope.currObj[i]));\n            }\n        }\n    };\n\n    this.currentUl=function(index){//функция проверки для анимации и переключения между ul\n        if(index===scope.myFactory.document.currParam) return true;\n    };\n    this.setCurrentUl=function(key){\n        return transportProp.indexOf(key);\n    };\n    this.currentProcess={};\n    this.selectParam=function (index) { // нажатии на nav\n        if(myFactory.parkTemplate.length>0) myFactory.parkTemplate=[];\n\n        if(this.currObj[index] && this.currObj[index].name===undefined){\n            let url=this.currObj[index].url;\n            this.currObj.forEach(function (params, i) {\n                params.values.forEach(function (value) {\n                    if(value.urlTo==url) myFactory.document.selectedParam=i;\n                })\n            })\n        }\n        else myFactory.document.selectedParam=index;\n        this.myFactory.document.currParam=index;\n        $rootScope.search_result=[];\n        \n\n\n    };\n    this.selectNextParam=function(){\n        let i=0;\n        for(let key in myFactory.process){\n            if(myFactory.process[key]===\"\"){\n                scope.selectParam(i);\n                return false;\n            }\n            i++;\n        }\n        return true;\n    };\n    this.checkTransportProp=function (key) {\n        return transportProp.indexOf(key);\n    };\n    this.configuration=function(value){\n        if(value===1){\n            return scope.config==='navigation';\n        }\n    };\n    function get_value(text){// функция получения из \"100 500 рублей\" значения \"100500\"\n        text=text.split(' ');\n        let result=\"\";\n        for (let i = 0; i < text.length; i++) {\n            if(!isNaN(text[i])) result+=text[i];\n        }\n        return result*1;\n    }\n\n    this.alreadySelected = function(model){\n        if($rootScope.mode==\"calc\") return !(myFactory.process[model]===\"\");\n        else return false;\n    };\n    /**\n     * Функция скрывания/раскрывания/переключения кнопки \"вернуться в\" в главном меню\n     * @param {boolean} toBeClosed - свернуть ли меню? если не задан, значит поменять существующее значение на обратное\n     */\n    this.toggleMenu = function (toBeClosed) {\n        const menu = document.querySelector('.nav-back_container');\n        if (!menu) return true; //если кнопки нет на экране, то прерываем\n        if (toBeClosed===undefined) menu.classList.toggle('nav-back_container--hidden');\n        if (toBeClosed===false) menu.classList.aremovedd('nav-back_container--hidden');\n        if (toBeClosed===true) menu.classList.add('nav-back_container--hidden');\n    }\n    // this.selectParam(0);\n\n    $scope.$on('$destroy', function () {\n        myFactory.removeCellSelection ('dashboard_container',true);\n    });\n    $scope.isntEmpty = obj => {\n        for (let key in obj) {\n            if (obj[key] != \"\" && obj[key] != \"Форма организации\" && obj[key] != undefined) return true;\n        }\n        return false;\n    }\n});\n\n//# sourceURL=webpack:///./js/controllers/dashboard.js?");

/***/ }),

/***/ "./js/controllers/financeCtrl.js":
/*!***************************************!*\
  !*** ./js/controllers/financeCtrl.js ***!
  \***************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _calculation_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../calculation.js */ \"./js/calculation.js\");\n\n\napp.controller(\"financeCtrl\", function ($scope, $http, $location, myFactory) {\n    $scope.myFactory = myFactory;\n    \n    /**\n     * Инициализация, запускается каждый раз при открытии окна финансы\n     */\n    $scope.init = async () => {\n        if ($scope.myFactory.parks.length===0) $scope.returnToDashboard();\n        const priceToString = () => {\n            $scope.myFactory.payment.totalPrice = Object(_calculation_js__WEBPACK_IMPORTED_MODULE_0__[\"addSpaces\"])(\n                Math.round($scope.myFactory.payment.totalPrice).toString()\n            );\n        };\n\n        priceToString();\n        $scope.checkDebtEqual();\n        await $scope.loadDashboard();\n    };\n    /**\n     * Загрузка объекта каретки\n     */\n    $scope.loadDashboard = () => {\n        return $http.post(\"./src/finance.json\").then(\n            resp => {\n                $scope.currObj = resp.data;\n            },\n            err => { }\n        );\n    };\n    /**\n     * newDashboard нужно для отображения необходимого содержимого и анимации\n     */\n    $scope.newDashboard = {\n        mode: \"new\",\n        currentPage: ($scope.myFactory.polisObj && $scope.myFactory.polisObj.isSaved) ? 0 : 2,\n        previousPage: -1,\n        currPayment: null,\n        toLeft(index) {\n            return this.previousPage < this.currentPage && this.previousPage == index;\n        },\n        toRight(index) {\n            return this.previousPage > this.currentPage && this.previousPage == index;\n        },\n        fromLeft(index) {\n            return this.previousPage > this.currentPage && this.currentPage == index;\n        },\n        fromRight(index) {\n            return this.previousPage < this.currentPage && this.currentPage == index;\n        },\n        checkCurrentPage(index) {\n            return index === this.currentPage;\n        },\n        async setCurrentPage(index) {\n            this.previousPage = this.currentPage;\n            this.currentPage = index;\n            await Object(_calculation_js__WEBPACK_IMPORTED_MODULE_0__[\"delay\"])();\n            $scope.inputFocus(index);\n        }\n    };\n    $scope.returnToDashboard = () => {\n        $scope.myFactory.cameFrom = {\n            name: 'Редактирование финансов',\n            path: $location.$$path,\n        };\n        $location.path(\"/polis\");\n    };\n    /**\n     * функция загрузки процесса из матрицы в каретку\n     * @param {payment} payment новый процесс, который был создан при копировании\n     * @param {number} index номер таба, который переключаем\n     */\n    $scope.loadPayment = (payment, index) => {\n        // убираем все остальные строки ченджинг\n        const dsh = $scope.newDashboard;\n        const mf = $scope.myFactory;\n        const pay = mf.payment;\n        if (!mf.polisObj.isSaved && index<2) return false; // если полис еще не сохранен, то внесения не работают\n        const selectPaymentOnMatrix = () => {\n            // переназначаем выделенный объект\n            if (dsh.currPayment) dsh.currPayment.changing = false;\n            dsh.currPayment = payment;\n            payment.changing = true;\n        };\n        const inputFocus = tab => {\n\n        }\n        dsh.mode = \"change\";\n        dsh.setCurrentPage(index);\n        selectPaymentOnMatrix();\n    };\n    $scope.inputFocus = tab => {\n        let el;\n        switch (tab) {\n            case 0:\n                el = document.querySelector('#input_date');\n                break;\n            case 1:\n                el = document.querySelector('#input_price');\n                break;\n            case 2:\n                el = document.querySelector('#input_debtDate');\n                break;\n            case 3:\n                el = document.querySelector('#input_debt');\n                break;\n            default:\n                return false;\n        }\n        el.focus();\n    }\n    /**\n     * Функция пересчета оставшихся платежей, чтобы итоговая сумма не менялась\n     */\n    $scope.recalculateDebt = () => {\n        const pay = $scope.myFactory.payment;\n        const notPayed = Object(_calculation_js__WEBPACK_IMPORTED_MODULE_0__[\"intFromStr\"])(pay.leftPrice);\n        let manualPrice = 0;\n        const notPayedCounter = pay.array.filter(p => {\n            if (p.manual) manualPrice += Object(_calculation_js__WEBPACK_IMPORTED_MODULE_0__[\"intFromStr\"])(p.debt); // если сумма введена вручную, то ее нужно вычесть из общей, т к она не попадает под распределение\n            if (!p.manual && !p.payed) return true;\n        }).length; // количество платежей, которые можно пересчитать - они не должны быть заданы в ручныю либо оплачены\n        if (notPayedCounter === 0) {\n            const newVal = notPayed - manualPrice + Object(_calculation_js__WEBPACK_IMPORTED_MODULE_0__[\"intFromStr\"])($scope.newDashboard.currPayment.debt);\n            $scope.newDashboard.currPayment.debt = Object(_calculation_js__WEBPACK_IMPORTED_MODULE_0__[\"addSpaces\"])(newVal);\n            $scope.newDashboard.currPayment.manual = false;\n            return false;\n        }\n        let newDebt = Math.round((notPayed - manualPrice) / notPayedCounter); // пересчитанная часть долга\n        newDebt = Object(_calculation_js__WEBPACK_IMPORTED_MODULE_0__[\"addSpaces\"])(newDebt);\n        // вставляем пересчитанные значения\n        pay.array.forEach(p => {\n            if (!p.manual && !p.payed) {\n                p.debt = newDebt;\n            }\n        });\n        pay.calcDebt = newDebt;\n        $scope.checkDebtEqual();\n    };\n    /**\n     * проверка итоговой суммы и пересчитанной суммы. из-за округлений может не сходиться на рубль\n     * //TODO: отключена из-за некорректной работы после изменений\n     * добавляем разницу к следующему не оплаченному и не введенному в ручную\n     */\n    $scope.checkDebtEqual = () => {\n        return false;//заглушка\n        // const pay = $scope.myFactory.payment;\n        // const s = pay.array.reduce((acc, p) => {\n        //     return (acc += intFromStr(p.debt));\n        // }, 0);\n        // const total = intFromStr(pay.totalPrice);\n        // const diff = total - s;\n        // if (diff) {\n        //     const fisrtDebt = pay.array.find(p => {\n        //         return !p.manual && !p.payed;\n        //     });\n        //     const int = intFromStr(fisrtDebt.debt) + diff;\n        //     fisrtDebt.debt = addSpaces(int);\n        // }\n    };\n    /**\n     * Функция проверки изменился ли долг после ввода, если да, то меняем значение \"ручной ввод\" на true\n     * @param {obj} curr - текущий объект платежа\n     */\n    $scope.switchManual = curr => {\n        const calced = Object(_calculation_js__WEBPACK_IMPORTED_MODULE_0__[\"intFromStr\"])($scope.myFactory.payment.calcDebt);\n        const input = Object(_calculation_js__WEBPACK_IMPORTED_MODULE_0__[\"intFromStr\"])(curr.debt);\n        if (Math.abs(calced - input) > 1) curr.manual = true;\n    };\n    $scope.applyDebt = curr => {\n        if (curr.debt==='') {\n            curr.debt = 0;\n        }\n        $scope.switchManual(curr);\n        curr.debt = Object(_calculation_js__WEBPACK_IMPORTED_MODULE_0__[\"addSpaces\"])(curr.debt);\n        $scope.recalculateDebt();\n    };\n    /**\n     * Функция активируется на leave focus с inputa, применяется для обработки введенного значения и дальнейшего действия\n     * @param {obj} val - объект, который был нажат\n     * @param {String} control - название столбца: date,price,debtdate,debt \n     */\n    $scope.endChange = (val, control) => {\n        const pay = $scope.myFactory.payment;\n        const curr = $scope.newDashboard.currPayment;\n        if (!curr) return false; //выходиим если прошлого объекта нет\n        switch (control) {\n            case \"debt\":\n                $scope.applyDebt(curr);\n                break;\n            case \"price\":\n                $scope.applyPayment(curr);\n                $scope.recalculateDebt ();\n                break;\n            case \"debtDate\":\n                $scope.applyDate(curr, control);\n                break;\n            case \"date\":\n                $scope.applyDate(curr, control);\n                break;\n        }\n    };\n    /**\n     * Преобразование даты в формате ГГГГ-ММ-ДД в ДД.ММ.ГГГГ\n     * @param {object} curr - текущий изменяемый платеж \n     * @param {String} control - название столбца: date/debtdate\n     */\n    $scope.applyDate = (curr, control) => {\n        const changing = curr[control];\n        if (changing === '') return false;\n        if (/\\d{2}.\\d{2}.\\d{4}/.test(changing)) return false;\n        if (/\\d{4}-\\d{2}-\\d{2}/.test(changing)) {\n            const newDate = changing.replace(/(\\d{4})-(\\d{2})-(\\d{2})/, `$3.$2.$1`);\n            curr[control] = newDate;\n        }\n    };\n    $scope.applyPayment = curr => {\n        if (curr.price==='') {\n            return false;\n        }\n        if (curr.price === \"0\" && curr.debt!== '0' && !curr.payed) return false;\n        const pays = $scope.myFactory.payment;\n        const expected = Object(_calculation_js__WEBPACK_IMPORTED_MODULE_0__[\"intFromStr\"])(curr.debt);\n        const payed = Object(_calculation_js__WEBPACK_IMPORTED_MODULE_0__[\"intFromStr\"])(curr.price);\n        const diff = expected - payed;\n        if (curr.payed) {\n            curr.debt = '0';\n            $scope.recalculateLeft();\n            return true;\n        }\n        curr.debt = '0';\n        curr.payed = true;\n        if (diff<0) {\n            pays.array.find(p => {\n                if (!p.payed && !p.manul) {\n                    let debt = Object(_calculation_js__WEBPACK_IMPORTED_MODULE_0__[\"intFromStr\"])(p.debt);\n                    debt += diff;\n                    debt = Object(_calculation_js__WEBPACK_IMPORTED_MODULE_0__[\"addSpaces\"])(debt);\n                    p.debt = debt;\n                    return true;\n                }\n            });\n        }\n        else if (diff>0) {\n            const diffStr = Object(_calculation_js__WEBPACK_IMPORTED_MODULE_0__[\"addSpaces\"])(diff);\n            const newPayment = {\n                price: '0',\n                date: '',\n                debt: diffStr,\n                debtDate: curr.debtDate,\n                manual: true,\n            };\n            const i = pays.array.indexOf(curr);\n            pays.array.splice(i+1,0,newPayment);\n        }\n        $scope.recalculateLeft();\n    };\n    /**\n     * Пересчет общего долга: общая сумма - уплоченное\n     */\n    $scope.recalculateLeft = () => {\n        const pay = $scope.myFactory.payment;\n        const payedSum = pay.array.reduce((acc, p) => {\n            return (acc += Object(_calculation_js__WEBPACK_IMPORTED_MODULE_0__[\"intFromStr\"])(p.price));\n        }, 0);\n        const total = pay.totalPrice;\n        let intTotal = Object(_calculation_js__WEBPACK_IMPORTED_MODULE_0__[\"intFromStr\"])(total);\n        intLeft = intTotal - payedSum;\n        pay.leftPrice = Object(_calculation_js__WEBPACK_IMPORTED_MODULE_0__[\"addSpaces\"])(intLeft);\n        pay.payed = Object(_calculation_js__WEBPACK_IMPORTED_MODULE_0__[\"addSpaces\"])(payedSum);\n    };\n    /**\n     * Устанаваливает значение платежа или даты как в долге\n     * @param {String} control - название столбца: date,price,debtdate,debt \n     */\n    $scope.setAsDebt = control => {\n        const pays = $scope.myFactory.payment;\n        const curr = $scope.newDashboard.currPayment;\n        switch (control) {\n            case \"price\":\n                curr.price = curr.debt;\n                $scope.applyPayment(curr);\n                $scope.recalculateDebt ();\n                break;\n            case \"date\":\n                curr.date = curr.debtDate;\n                $scope.applyDate(curr, control);\n                break;\n        }\n    };\n\n    $scope.init();\n});\n\n\n//# sourceURL=webpack:///./js/controllers/financeCtrl.js?");

/***/ }),

/***/ "./js/controllers/loginCtrl.js":
/*!*************************************!*\
  !*** ./js/controllers/loginCtrl.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * Created by RoGGeR on 30.05.17.\n */\napp.controller('loginCtrl', function($scope, $location, $rootScope, $http, $cookies){\n    $scope.username = '';\n    $scope.password = '';\n    $rootScope.loggedIn=false;\n    //////////initialization\n    const cookies=$cookies.getAll();\n    const authorization=(login,pwd)=>{\n        if($rootScope.loggedIn==false){\n            let data={};\n            data.login=$scope.username;\n            data.pwd=$scope.password;\n            if(login && pwd){\n                data.login=login;\n                data.pwd=pwd;\n            }\n            $http.post(\"php/authorization.php\", data).then(function success (response) {\n                    if (response.data['loggin'] === true) {\n                        $rootScope.loggedIn = true;\n                        $location.path('/dashboard');\n                        $rootScope.name = response.data['name'];\n                        $cookies.put('loggedIn', response.data['loggin']);\n                        $cookies.put('username', response.data['name']);\n                        $cookies.put('login', response.data['login']);\n                        $cookies.put('pwd', response.data['pwd']);\n                        console.log($cookies);\n                    }\n                    else {\n                        $scope.username = '';\n                        $scope.password = '';\n                    }\n                },function error (response){\n                    console.log(response);\n                }\n            );\n        }\n    };\n    if(cookies.hasOwnProperty(\"login\") && cookies.hasOwnProperty(\"pwd\")) authorization(cookies.login,cookies.pwd);\n    $scope.enter=function(){\n        if ($scope.username!=\"\" && ($scope.password==\"\" || $scope.password==undefined)) document.getElementById(\"password\").focus();\n        else if($scope.password!=\"\" && ($scope.username==\"\" || $scope.username==undefined)) document.getElementById(\"username\").focus();\n        else if($scope.password!=\"\" && $scope.username!=\"\") authorization();\n    };\n\n    $scope.submit=authorization;\n\n});\n\n\n//# sourceURL=webpack:///./js/controllers/loginCtrl.js?");

/***/ }),

/***/ "./js/controllers/matrixCtrl.js":
/*!**************************************!*\
  !*** ./js/controllers/matrixCtrl.js ***!
  \**************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _protos_calc_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../protos/calc.js */ \"./js/protos/calc.js\");\n/* harmony import */ var _protos_company_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../protos/company.js */ \"./js/protos/company.js\");\n/* harmony import */ var _protos_loading_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../protos/loading.js */ \"./js/protos/loading.js\");\n/* harmony import */ var _ServiceFunctions_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../ServiceFunctions.js */ \"./js/ServiceFunctions.js\");\n/* harmony import */ var _calculation_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../calculation.js */ \"./js/calculation.js\");\n/* harmony import */ var _proto_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../proto.js */ \"./js/proto.js\");\n\n\n\n\n\n\n\napp.controller('matrixCtrl', function($rootScope,$http, myFactory, $timeout, $location){\n    let scope=this;\n    /**\n     * удаляем расчет из БД\n     * @param {object} row строка которую надо удалить из БД\n     */\n    this.deleteCalculation=function(row){\n        let id=row.id;\n        $rootScope.search_result.splice($rootScope.search_result.indexOf(row), 1);\n        let data={};\n        data.type=\"delete_calculation\";\n        data.id=id;\n        return $http.post(\"php/save.php\", data).then(function success(response){\n           if (response.data===\"Успешно удалено\") console.log('calculation successfully deleted');\n           else console.error('problem with deleting', response);\n        },function error(response){\n            console.log(response)\n        });\n    };\n    /**\n     * Удаляем строчку из UI\n     * @param {event} ev \n     */\n    this.deleteRow = ev => {\n        let row = ev.currentTarget;\n        while (!row.classList.contains('row-flex')) {\n            row = row.parentNode;\n        }\n        row.parentNode.removeChild(row);\n    }\n    /**\n     * Удаление привязки расчета к компании. Если у расчета нет имени, значит он создавался только с привязкой к этой компании,\n     * значит при удалении связи можно удалить и сам расчет\n     * @param {obj} calc - объект с информацией о привязанном расчете\n     */\n    this.deleteLink = calc => {\n        const query = {\n            id: calc.id,\n        };\n        if (calc.name==='') {\n            this.deleteCalculation (calc);\n            query.type = 'delete_link';\n        } else {\n            query.type = 'delete_link_company';\n        }\n        myFactory.profileObj.deleteCalc(calc.id); //удаляем из локального объекта\n        return $http.post('php/save.php',query).then(resp=>{\n            if (resp.data!=='OK') console.error(resp.data);\n        },err=>{\n            console.error(err);\n        })\n    }\n    /**\n     * Загружаем расчет из БД\n     * здесь надо добавить, что расчеты загружаются по разному, в зависимости от того \n     * в какой период времени они сделаны. Происходит это из-за того что в какой-то момент\n     * времени структура сохраненных расчетов была видоизменена\n     * @param {number} id \n     */\n    this.loadCalculation=function(id){ //нажимаем на строку расчета в результате поиска\n        myFactory.calcObj = {};\n        $timeout(async function () {\n            $rootScope.cacheTemplate = {};\n            if($location. $$path!==\"/calculation\"&&$location.$$path!=='/polis'){\n                myFactory.cameFrom = {\n                    path: $location.$$path,\n                    name: Object(_calculation_js__WEBPACK_IMPORTED_MODULE_4__[\"getPathName\"])($location.$$path)\n                }\n                $location.path('/calculation');\n                await Object(_calculation_js__WEBPACK_IMPORTED_MODULE_4__[\"delay\"])(200);\n            }\n            const loading = new _protos_loading_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](true);\n            myFactory.isLoading = loading;\n            let data ={};\n            data.type=\"load_calculation\";\n            data.id=id;\n            let scope=this;\n            $http.post(\"php/search.php\", data).then(async function success(response){\n\n                myFactory.matrixType=\"HIP\";\n                myFactory.parks=[];\n                //Подмена старых Базовые риски на новое значение\n                // const \n                let mass=JSON.parse(response.data.processes);\n                if(response.data.user_name==123){\n                    mass.forEach(function (park) {\n                        let multi=[];\n                        let array=[];//создаем массив из процессов new Process\n                        park.processes.forEach(function (process) {\n                            if (OLDBASENAMES.includes(process.risk)) process.risk = BASENAME;\n                            let proc=new _proto_js__WEBPACK_IMPORTED_MODULE_5__[\"Process\"](process);\n                            for(let key in process){\n                                proc[key]=process[key];\n                            }\n                            // сохраняем загруженную цену\n                            proc.loadedPrice = proc.totalPrice;\n                            array.push(proc);\n                            if(process.multi!==undefined && multi.indexOf(process.multi)==-1) multi.push(process.multi);\n                        });\n                        let newPark=new _proto_js__WEBPACK_IMPORTED_MODULE_5__[\"Park\"](array[0]);//создаем парк с помощью первого процесса new Park\n                        \n                        // if(array.length>1) array.splice(0,1);//choosePark()\n                        if(array.length>1) newPark.processes.splice(0,1);\n                        myFactory.choosePark(array, newPark, 0); \n\n                        for(let key in park){//копируем все свойства парка в созданный парк\n                            if(key!=\"processes\") newPark[key]=park[key];\n                        }\n                        myFactory.parks.push(newPark);//засовываем новый парк в массив\n                        if(multi.length>0){\n                            for(let i=0;i<multi.length;i++){\n                                let array=newPark.processes.filter(function (process) {\n                                    return process.multi==multi[i];\n                                });\n                                myFactory.multi.multies.push(new _proto_js__WEBPACK_IMPORTED_MODULE_5__[\"Multi\"](array));\n                            }\n\n                        }\n                    });\n                    let multies=JSON.parse(response.data.mass);\n                    if(multies.length>0 && myFactory.multi.multies.length===multies.length){\n                        for(let i=0;i<multies.length;i++){\n                            let multi=multies[i];\n                            // if (myFactory.multi.multies[i]===undefined) myFactory.multi.multies.push(multi); \n                            for(let key in multi){\n                                myFactory.multi.multies[i][key]=multi[key];\n                            }\n                        }\n                    }\n                    // если сохраненный расчет был не перевозчиком\n                    if (response.data.HIPname!==''&&response.data!=='Перевозчики') {\n                        const HIP_name = myFactory.karetkaTypes[response.data.HIPname]; //достаем название файла конфигурации каретки\n                        await Object(_calculation_js__WEBPACK_IMPORTED_MODULE_4__[\"loadRisks\"])(HIP_name); //загрузка новых рисков\n                        myFactory.HIPname = response.data.HIPname;\n                        myFactory.scop.loadMatrix();// перезагружаем матрицу\n                    }\n                    myFactory.calculationName = response.data.name;\n                    myFactory.finalCalc();\n                    //проходимся по мульти\n\n                    if(response.data.a_limit!=0 && response.data.a_limit!=myFactory.a_limit.max_limit){//агрегатный лимит\n                        myFactory.a_limit.hand=true;\n                        myFactory.a_limit.value=response.data.a_limit*1;\n                        myFactory.a_limit.type=response.data.a_limitType;\n                        myFactory.applyAlimit();\n                        myFactory.finalCalc();\n                    }\n                    if(response.data.agents!=\";Р\" && response.data.agents!=\";%\"){\n                        let agents=response.data.agents.split(\";\");\n                        myFactory.agents.mode=agents[1];\n                        myFactory.agents.val=agents[0]*1;\n                        myFactory.finalCalc();\n                    }\n\n                    if(response.data.payment!=0 && response.data.payment!=myFactory.payment.val){//этапы платежей\n                        myFactory.payment.hand=true;\n                        myFactory.payment.val=response.data.payment*1;\n                        myFactory.finalCalc();\n                    }\n                    \n                    if(response.data.fact_premia!=\";Р\" && response.data.fact_premia!=\";1\"){\n                        let price=response.data.fact_premia.split(\";\");\n                        myFactory.practicalPrice.val=price[0]*1;\n                        myFactory.practicalPrice.koef=price[1]*1;\n                        myFactory.parks.forEach(function(park){\n                            park.applyPracticalPriceKoef(\"load\");\n                        });\n                        let val=myFactory.getTotal();\n                        myFactory.practicalPrice.val=val-(val%1);\n                        myFactory.bottom.priceMode=\"practicalPrice\";\n                        myFactory.finalCalc();\n                    }\n                    else if(response.data.total_price!=0 && Math.round(myFactory.totalPrice)!=response.data.total_price){\n                        myFactory.practicalPrice.val=response.data.total_price*1;\n                        myFactory.practicalPrice.koef=myFactory.practicalPrice.val/myFactory.totalPrice;\n                        myFactory.checkPracticalPriceKoef(true);\n                        myFactory.bottom.priceMode=\"practicalPrice\";\n                        myFactory.finalCalc();\n                    }\n                    //лимиты/платежи/остальное\n                }\n                else{\n                    let processes={};\n                    for(let key in mass){\n                        processes[key]=mass[key];\n                    }\n                    let parks=[];\n                    for(let key in processes){\n                        let process=processes[key];\n                        if(parks.indexOf(process.park)==-1) parks.push(process.park);\n                        process.cost=process[1].split(\" Р\");\n                        process.cost=process.cost[0]*1;\n                        delete process[1];\n                        process.amount=process[2].split(\" \");\n                        if(process.amount[1]==\"Тягачей\") process.amount=process.amount[0]*24;\n                        else process.amount=process.amount[0]*1;\n                        delete process[2];\n                        process.wrapping=process[3];\n                        delete process[3];\n                        process.risk=process[4];\n                        delete process[4];\n                        if (OLDBASENAMES.includes(process.risk)) process.risk = BASENAME;\n                        process.limit=process[5].split(\" Р\");\n                        process.limit=process.limit[0]*1;\n                        delete process[5];\n                        process.franchise=process[6].split(\" Р\");\n                        process.franchise=process.franchise[0]*1;\n                        delete process[6];\n                        if(process.koef){\n                            process.practicalPriceKoef=process.koef;\n                            delete process.koef;\n                        }\n                        delete process.stavka;\n\n                    }\n                    mass=JSON.parse(response.data.mass);\n                    let multiMass={};\n                    let packageMass=[];\n                    mass.forEach(function (multi) {\n                        if(multi.trs!=\"\"){\n                            multi.trs=multi.trs.split(\";\");\n                            for(let i=0;i<multi.trs.length; i++){\n                                if(multi.trs[i]==\"\") multi.trs.splice(multi.trs.indexOf(multi.trs[i]),1);\n                            }\n                            if(multi.multi && multiMass[multi.multi]===undefined){\n                                multiMass[multi.multi]={};\n                                multiMass[multi.multi].processes=[];\n                            }\n                            if(multi.package_name){\n                                if(multi.multi===undefined){\n                                    packageMass.push({\"processes\":[]});\n                                }\n                                multi.trs.forEach(function (tr) {\n                                    tr=tr.split(\"tr_\");\n                                    tr=tr[1];\n                                    processes[tr][\"package\"]=multi.package_name;\n                                    if(multi.multi && multiMass[multi.multi].processes.indexOf(tr)==-1){\n                                        multiMass[multi.multi].processes.push(tr);\n                                        processes[tr].multi=multi.multi;\n                                    }\n                                    else{\n                                        packageMass[packageMass.length-1][\"processes\"].push(tr);\n                                        processes[tr][\"packageNum\"]=packageMass.length-1;\n                                    }\n                                });\n                                if(multi.multi) multiMass[multi.multi].package=multi.package_name;\n                            }\n                            else{\n                                multi.trs.forEach(function (tr) {\n                                    if(tr.indexOf(\"packageRow\")==-1){\n                                        tr=tr.split(\"tr_\");\n                                        tr=tr[1];\n                                        if(multiMass[multi.multi].processes.indexOf(tr)==-1) {\n                                            multiMass[multi.multi].processes.push(tr);\n                                            processes[tr].multi=multi.multi;\n                                        }\n                                    }\n                                });\n                            }\n                        }\n\n\n                    });\n                    myFactory.parks=[];\n                    for(let i=0;i<parks.length;i++){\n                        let mass=[];\n                        for(let key in processes){\n                            let process=processes[key];\n                            if(process.park==parks[i]) mass.push(process);\n                        }\n                        let array=[];\n                        mass.forEach(function(process){\n                            let proc=new _proto_js__WEBPACK_IMPORTED_MODULE_5__[\"Process\"](process);\n                            if(process.packageNum!==undefined) proc.packageNum=process.packageNum;\n                            if(process.multi!==undefined) proc.multi=process.multi;\n                            if(process.package!==undefined) proc.package=process.package;\n                            if(process.koef!==undefined) proc.practicalPriceKoef=process.koef;\n                            array.push(proc);\n                        });\n\n                        let park=new _proto_js__WEBPACK_IMPORTED_MODULE_5__[\"Park\"](array[0]);\n                        myFactory.parks.push(park);\n                        array.splice(0,1);\n                        myFactory.choosePark(array,park, 0);\n                        console.log(myFactory.parks);\n                    }\n                    if (myFactory.packages===undefined) {\n                        let resp = await fetch('./src/HIP.json');\n                        resp = await resp.json();\n                        resp = resp.filter(r=>r.url=='Пакеты');\n                        resp = resp[0].values;\n                        myFactory.packages = resp;\n                        console.warn('myFactory.packages загружен отдельно');\n                    }\n                    myFactory.parks.forEach(function (park) {\n                        park.processes.forEach(function (process) {\n                            if(process.packageNum!==undefined){\n                                let packageNum=process.packageNum;\n                                let mass=park.processes.filter(function (proc) {\n                                    return proc.packageNum==packageNum;\n                                });\n                                let pckName=process['package'];\n                                let template=myFactory.packages.filter(function (pack) {\n                                    return pack.name==pckName;\n                                });\n                                template=template[0].values;\n                                mass.forEach(function (proc) {\n                                    delete proc.packageNum;\n                                });\n                                let multi=new _proto_js__WEBPACK_IMPORTED_MODULE_5__[\"Multi\"](mass, pckName, template);\n                                myFactory.multi.multies.push(multi);\n                            }\n                            if(process.multi!==undefined){\n                                let multik=process.multi;\n                                let mass=park.processes.filter(function (proc) {\n                                    return proc.multi==multik;\n                                });\n                                let pckName=0;\n                                mass.forEach(function (proc) {\n                                    if(proc.package) pckName=proc.package;\n                                });\n                                if(pckName){\n                                    let template=myFactory.packages.filter(function (pack) {\n                                        return pack.name==pckName;\n                                    });\n                                    template=template[0].values;\n                                    let multi=new _proto_js__WEBPACK_IMPORTED_MODULE_5__[\"Multi\"](mass, pckName, template);\n                                    myFactory.multi.multies.push(multi);\n                                }\n                                else{\n                                    let multi=new _proto_js__WEBPACK_IMPORTED_MODULE_5__[\"Multi\"](mass);\n                                    myFactory.multi.multies.push(multi);\n                                }\n                            }\n                        })\n                    });\n                    // если сохраненный расчет был не перевозчиком\n                    if (response.data.HIPname!==''&&response.data!=='Перевозчики') {\n                        const HIP_name = myFactory.karetkaTypes[response.data.HIPname]; //достаем название файла конфигурации каретки\n                        await Object(_calculation_js__WEBPACK_IMPORTED_MODULE_4__[\"loadRisks\"])(HIP_name); //загрузка новых рисков\n                        myFactory.HIPname = response.data.HIPname;\n                        myFactory.scop.loadMatrix();// перезагружаем матрицу\n                    }\n                    // сохраняем имя загруженного расчета в верхней части матрицы\n                    myFactory.calculationName = response.data.name;\n                    myFactory.finalCalc();\n\n                    if(response.data.a_limit!=0 && response.data.a_limit!=myFactory.a_limit.max_limit){//агрегатный лимит\n                        myFactory.a_limit.hand=true;\n                        myFactory.a_limit.value=response.data.a_limit*1;\n                        if(response.data.a_limit>10){\n                            myFactory.a_limit.type=\"Агр. лимит\";\n                        }\n                        else{\n                            myFactory.a_limit.type=\"Кол-во случаев\";\n                        }\n                        myFactory.applyAlimit();\n                        myFactory.finalCalc();\n                    }\n\n                    if(response.data.agents!=\"0 %\" && response.data.agents!=\"0 Р\"){\n                        let agents=response.data.agents.split(\" \");\n                        myFactory.agents.mode=agents[1];\n                        myFactory.agents.val=agents[0]*1;\n                        myFactory.finalCalc();\n                    }\n\n                    if(response.data.payment!=0 && response.data.payment!=myFactory.payment.val){//этапы платежей\n                        myFactory.payment.hand=true;\n                        myFactory.payment.val=response.data.payment*1;\n                        myFactory.finalCalc();\n                    }\n\n                    let practicalPrice=response.data.fact_premia.split(\" Р\");\n                    if(practicalPrice[0]!=\"undefined\"){//фактическая премия\n                        myFactory.practicalPrice.val=practicalPrice[0]*1;\n                        myFactory.practicalPrice.koef=myFactory.practicalPrice.val/myFactory.totalPrice;\n                        myFactory.checkPracticalPriceKoef(true);\n                        myFactory.bottom.priceMode=\"practicalPrice\";\n                        myFactory.finalCalc();\n                    }\n                    else if(response.data.total_price!=0 && myFactory.totalPrice!=response.data.total_price){\n                        myFactory.practicalPrice.val=response.data.total_price*1;\n                        myFactory.practicalPrice.koef=myFactory.practicalPrice.val/myFactory.totalPrice;\n                        myFactory.checkPracticalPriceKoef(true);\n                        myFactory.bottom.priceMode=\"practicalPrice\";\n                        myFactory.finalCalc();\n                    }\n                }\n                myFactory.document.currParam=\"\";\n                clearSearch();\n                // инициализируем calcObj и добавляем в него всю информацию\n                const calcObj = new _protos_calc_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\n                calcObj.parseFromMyFactory(myFactory);\n                calcObj.parseFromResponse(response.data);\n                calcObj.markAsLoaded();\n                await calcObj.loadLink();\n                myFactory.isLoading.hide();\n                delete myFactory.isLoading;\n            },function error(response){\n                console.log(response)\n            });\n        }, 0);\n    };\n    this.loadCompanyProfile = async function (id){\n        myFactory.cameFrom = {\n            name: Object(_calculation_js__WEBPACK_IMPORTED_MODULE_4__[\"getPathName\"])($location.$$path),\n            path: $location.$$path,\n        }\n        myFactory.companyObj.id = id;\n        $location.path('/profile');\n    }\n    /**\n     * Фукнция загрузки компании из БД в матрицу\n     * @param {number} id - id компании\n     */\n    this.loadCompany = function (id, noRelocation) {\n        const data = {};\n        data.type = 'load_company';\n        data.id=id;\n        return $http.post('php/search.php', data).then(async (resp) => {\n            const loadAddresses = () => {\n                const check = str => {\n                    return (Object(_calculation_js__WEBPACK_IMPORTED_MODULE_4__[\"isNumeric\"])(str)) ? str : '1';\n                  }\n                const query = {\n                legal_id: check(myFactory.companyObj.responses.card.Legal_address),\n                real_id: check(myFactory.companyObj.responses.card.Real_address),\n                }\n                const formatAddress = adr => {\n                  return Object.values(adr).slice(1).filter(v=>v!=='').map(v=>v.trim());\n                }\n                query.type = 'addresses';\n                if (query.legal_id==='1'&&query.real_id==='1') return false;\n                return $http.post('php/load.php',query).then(resp=>{\n                    if (!Array.isArray(resp.data)) {\n                        console.error(resp.data);\n                        return false;\n                    }\n                  const data = resp.data;\n                  myFactory.companyObj.responses.adresses = data;\n                  if (data[0].id!=='1') {\n                    if (data[0].PostalCode==='0') delete data[0].PostalCode;\n                    const legal = formatAddress(data[0]).join(', ');\n                    myFactory.newClientCard['Доп. информация']['Юридический адрес'] = legal;\n                  }\n                  if (data[1].id!=='1') {\n                    if (data[1].PostalCode==='0') delete data[1].PostalCode;\n                    const fakt = formatAddress(data[1]).join(', ');\n                    myFactory.newClientCard['Доп. информация']['Фактический адрес'] = fakt;\n                  }\n                },err=>{\n                  console.error(err);\n                })\n            }\n            const data = resp.data;\n            myFactory.newClientCard = Object(_ServiceFunctions_js__WEBPACK_IMPORTED_MODULE_3__[\"GenerateClientCard\"])(data);\n            const companyObj = new _protos_company_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\n            myFactory.companyObj = companyObj;\n            companyObj.parseFromCompaniesResponse(data) //создаем объект с  id  из ответа и сохраняем ответ внутри\n            companyObj.card = myFactory.newClientCard;\n            companyObj.markAsLoaded();\n            await loadAddresses();\n            if (!noRelocation) {\n                myFactory.loadClient = 'Форма собственности'; //какую ячейку открыть при старте\n                $location.path('/company');\n            }\n            clearSearch();\n            if ($location.$$path==='/') {\n                this.loadCompanyProfile(myFactory.companyObj.id);\n                const div = document.querySelector('.mi_selected');\n                if (div) div.click();\n            //FIXME: хот фикс, изменить\n            }\n        },function error(resp){\n            console.error(resp);\n        })\n    }\n    this.updateCalculation=function (id,name) {\n        let parks=[];\n        myFactory.parks.forEach(function (park) {\n            let newPark = {};\n            for (let key in park) {\n                if (key != \"processes\") newPark[key] = park[key];\n                else {\n                    newPark[key] = [];\n                    park.processes.forEach(function (process) {\n                        let newProcess = {};\n                        for (let prop in process) {\n                            if (prop != \"multi\" && prop != \"park\") {\n                                newProcess[prop] = process[prop];\n                            }\n                            else if (prop == \"multi\") {\n                                newProcess[prop] = myFactory.multi.multies.indexOf(process.multi);\n                            }\n                        }\n                        newPark[key].push(newProcess);\n                    })\n                }\n            }\n            parks.push(newPark);\n        });\n        const multies = [];\n        if (myFactory.multi.multies.length > 0) {\n            myFactory.multi.multies.forEach(function (multi) {\n                let newMulti = {};\n                for (let key in multi) {\n                    if (key != \"processes\") newMulti[key] = multi[key];\n                }\n                multies.push(newMulti);\n            })\n        }\n        const save = {};\n        try {\n            save.parks = JSON.stringify(parks);\n        }\n        catch {\n            let CircularJSON = window.CircularJSON;\n            save.parks = CircularJSON.stringify(parks);\n        }\n        try {\n            save.mass = JSON.stringify(multies);\n        }\n        catch {\n            let CircularJSON = window.CircularJSON;\n            save.mass = CircularJSON.stringify(multies);\n        }\n        save.payment = myFactory.payment.val;\n        save.agents = myFactory.agents.val + \";\" + myFactory.agents.mode;\n        save.practicalPrice = myFactory.practicalPrice.val + \";\" + myFactory.practicalPrice.koef;\n        save.a_limit = myFactory.a_limit.value;\n        save.a_limitType = myFactory.a_limit.type;\n        save.totalAmount = myFactory.totalAmount;\n        save.totalPrice = myFactory.totalPrice;\n        save.HIPname = myFactory.HIPname;\n        save.type = \"update_calc\";\n        save.name = name;\n        save.id = id;\n\n        return $http.post(\"php/save.php\", save).then(async function success(response) {\n            if (isNaN(Number(response.data))) {\n                alert('Ошибка при пересохранении расчета. Пожалуйста, по возможности не закрывайте окно и обратитесь к разработчику');\n                console.error(response.data);\n                return false;\n            }\n            const calcObj = new _protos_calc_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](myFactory);\n            calcObj.parseFromResponse (save);\n            calcObj.isSaved = true;\n            myFactory.calcObj = calcObj;\n            await calcObj.loadLink();\n            myFactory.calculationName = calcObj.name;\n            alert('Успешно пересохранено');\n        }, function error(response) {\n            console.log(response);\n            }\n        );\n    };\n    /**\n     * Функция вставки названия выбранного названия в новый расчет\n     * @param {string} name - название старого расчета \n     */\n    this.setCalculationNameAs= (name) => {\n        const date = new Date();\n        let hh = date.getHours();\n        hh = (hh<10) ? `0${hh}` : `${hh}`;\n        let min = date.getMinutes();\n        min = (min<10) ? `0${min}` : `${min}`;\n        document.querySelector('#inputSaveCalc').value = `${name} ${hh}:${min}`;\n    }\n    /**\n     * Deleting serach result after choosing one of the results\n     */\n    function clearSearch () {\n        try {\n            $rootScope.search_result = [];\n        }\n        catch (err) {\n            console.error (`Clear search results problem: ${err}`);\n        }\n    }\n});\n\n//# sourceURL=webpack:///./js/controllers/matrixCtrl.js?");

/***/ }),

/***/ "./js/controllers/polisCtrl.js":
/*!*************************************!*\
  !*** ./js/controllers/polisCtrl.js ***!
  \*************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _protos_polis_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../protos/polis.js */ \"./js/protos/polis.js\");\n/* harmony import */ var _protos_car_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../protos/car.js */ \"./js/protos/car.js\");\n/* harmony import */ var _calculation_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../calculation.js */ \"./js/calculation.js\");\n/* harmony import */ var _polismaker_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../polismaker.js */ \"./js/polismaker.js\");\n\n\n\n\n\napp.controller(\"polisCtrl\", function (myFactory, $http, $location, $scope, $rootScope, $timeout) {\n\n    this.myFactory = myFactory;\n    $scope.myFactory = myFactory;\n    $scope.init = async () => {\n        const makePolisObj = () => {\n            // создаем объект хранения для полиса, если не создан\n            if (!myFactory.polisObj) {\n                const polisObj = new _protos_polis_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](myFactory);\n                myFactory.polisObj = polisObj;\n            }\n        }\n        const selectNames = () => {\n            //определяем имена расчета и компании для заголовка\n            if (myFactory.calculationName !== \"\" && myFactory.calculationName !== undefined) this.calculationName = myFactory.calculationName;\n            else if (myFactory.calcObj.isLinked) this.calculationName = 'привязанный';\n            else if (!myFactory.calcObj.isInited) this.calculationName = 'не выбран';\n            if (myFactory.newClientCard) this.companyName = myFactory.newClientCard['Данные компании']['Наименование организации'];\n            myFactory.parks.forEach((park) => {\n                park.processes.forEach((process) => {\n                    process.showCars = false;\n                })\n            })\n        }\n        const switchMakingPolis = () => {\n            if (myFactory.makingPolis !== false) {\n                switch (myFactory.makingPolis) {\n                    case \"Расчет\":\n                        $scope.newDashboard.setCurrentPage(1);\n                        break;\n                    case \"Компания\":\n                        $scope.newDashboard.setCurrentPage(0);\n                        break;\n                }\n            }\n            myFactory.makingPolis = true;\n        }\n        const clearSearchResults = () => {\n            //обнуляем  search_result\n            if (!($rootScope.search_result)) $scope.newDashboard.setCurrentPage(0);\n            if ($rootScope.search_result) $rootScope.search_result = [];\n            myFactory.polisObj.isInited = true;\n        }\n        /**\n         * Загружаем из json наполнение каретки\n         */\n        const loadDashboardObj = () => {\n            myFactory.polisObj.isRequested = true;\n            return $http.post('./src/polis.json').then((resp) => {\n                if (!Array.isArray(resp.data) || resp.data.length < 1) {\n                    alert('Возникла ошибка при загрузке данных. Пожалуйста, по возможности не закрывайте окно и обратитесь к разработчику');\n                    console.error(resp);\n                }\n                else {\n                    $scope.currObj = resp.data;\n                }\n            }, (err) => {\n                console.log(err);\n            })\n        }\n        /**\n         * Выбираем какую вкладку каретки открыть\n         */\n        const openTab = () => {\n            if (!$scope.currObj) return false;\n            let tabIndex = 0;\n            if (myFactory.cameFrom.name === 'Редактор полиса') {\n                //если пришли из редактора полиса, то открываем сразу это меню\n                tabIndex = $scope.currObj.findIndex(val => val.name === 'Оговорки и условия');\n            }\n            else if (myFactory.cameFrom.name === 'Редактирование финансов') {\n                //если пришли из редактора полиса, то открываем сразу это меню\n                tabIndex = $scope.currObj.findIndex(val => val.name === 'Финансы');\n            }\n            else if (myFactory.cameFrom.name === 'Расчет') {\n                tabIndex = $scope.currObj.findIndex(val => val.name === 'Расчет');\n            }\n            else if (myFactory.cameFrom.name === 'Редактор карты клиента' || myFactory.cameFrom.name === 'Карту клиента') {\n                tabIndex = $scope.currObj.findIndex(val => val.name === 'Компания');\n            }\n            else if (!myFactory.companyObj.card) {\n                tabIndex = 0;\n            }\n            else if (!myFactory.companyObj.isFull) {\n                tabIndex = 0;\n            }\n            else {\n                // ищем первую незаполненную вкладку\n                const tabsAmount = $scope.currObj.filter((val) => val.name).length;\n                for (let i = 0; i < tabsAmount; i++) {\n                    // если вкладка пустая, то выбираем ее на открытие и завершаем перебор\n                    if (!$scope.newDashboard.alreadySelected(i)) {\n                        tabIndex = i;\n                        break;\n                    }\n                }\n            }\n            $scope.newDashboard.setCurrentPage(tabIndex);\n        }\n        const setInitialDates = () => {\n            const setDay = new Date();\n            $scope.myFactory.polisObj.dates.start = parseDate(setDay);\n            $scope.myFactory.polisObj.dates.startDate = setDay;\n            $scope.setEndByTime(setDay, $scope.myFactory.polisObj.dates.time);\n        }\n        \n        makePolisObj();\n        myFactory.polisObj.updateNames();\n        selectNames();\n        switchMakingPolis();\n        clearSearchResults();\n        const baseRiskNeeded = myFactory.parks.some(park=>{\n            return park.risks.includes(BASENAME);\n        }) \n        //по необходимости загружаем каретку и \"оговорки\"\n        if (!myFactory.polisObj || !myFactory.polisObj.isRequested || !$scope.currObj || $scope.currObj.length === 0) {\n            if (!myFactory.polisObj.conditions && myFactory.parks.length>0) {\n                const type = (myFactory.calcObj.factory) ? myFactory.calcObj.factory.HIPname : 'Перевозчики';\n                await myFactory.polisObj.loadConditions(type, baseRiskNeeded);\n                myFactory.polisObj.additionsSeen = true;\n            }\n            await loadDashboardObj();\n        };\n\n        //если уже есть расчет и его тип не совпадает с типом оговорок, то загружаем новые оговорки\n        if (myFactory.calcObj.factory && myFactory.polisObj.type !== myFactory.calcObj.factory.HIPname) {\n            if (myFactory.polisObj.conditions) delete myFactory.polisObj.conditions; // если были какие то оговорки, то их нужно удалить, так как нужно загрузить новые\n            await myFactory.polisObj.loadConditions(myFactory.calcObj.factory.HIPname, baseRiskNeeded);\n            myFactory.polisObj.type = myFactory.calcObj.factory.HIPname;\n            myFactory.polisObj.additionsSeen = true;\n        }\n        \n        // если даты не назначены, то ставим их сегодняшним днем начало\n        if (!$scope.myFactory.polisObj.dates.start && !$scope.myFactory.polisObj.dates.end) setInitialDates ();\n\n        myFactory.polisObj.updateConditionsCheck();\n        const needRefreshCalc = myFactory.cameFrom.path==='/calculation' && myFactory.parks.length>0;\n        if (needRefreshCalc) $scope.updateState();\n        // if (myFactory.parks.length>0) $scope.createCars ();\n        openTab();\n    }\n    /**\n     * Функция первоначального создания машин при загрузке \"чистого\" расчета в полис\n     */\n    $scope.createCars = () => {\n        const mf = $scope.myFactory;\n        mf.parks.forEach(park=>{\n            if (park.carGroup) return false;\n            let max = -Infinity;\n            //считаем максимальное количество машин в парке\n            park.processes.forEach(pr=>{\n                max = Math.max(max,pr.amount/24);\n            })\n            const carGroup = new _protos_car_js__WEBPACK_IMPORTED_MODULE_1__[\"CarGroup\"]();\n            carGroup.park = park;\n            park.carGroup = carGroup;\n            // создаем максимальное количество машин и добавляем в парк\n            for (let i = 0; i < max; i++) {\n                const car = new _protos_car_js__WEBPACK_IMPORTED_MODULE_1__[\"Car\"]();\n                car.park = park;\n                carGroup.add(car);\n            }\n            // назначаем каждому процессу в парке машины\n            park.processes.forEach(pr=>{\n                pr.cars = [];\n                pr.showCars = false;\n                if ((pr.amount/24)===max) pr.isFull = true;\n                for (let i = 0; i < pr.amount/24; i++) {\n                    const car = pr.park.carGroup.cars[i];\n                    pr.cars.push(car);\n                    //добавляем поле селектора, для того чтобы привязать к модели ng-change машины\n                    car.selectorAutNumber = car.data.autNumber; \n                }\n            })\n            park.processes.forEach(pr=>{\n                if (!pr.isFull) pr.carSelector = ''; //вспомогательный ничего не значащий объект, нужен чтобы поставить ng-change на выбор машины\n            })\n        })\n        mf.setCarsFromExcel = async (cars,park, parkIndex, procIndex) => {\n            park.carGroup.cars.forEach((car,index)=>{\n                const excelCar = cars[index];\n                for (let key in excelCar) {\n                    car.data[key] = excelCar[key];\n                }\n                car.selectorAutNumber = car.data.autNumber;\n            })\n            const parkUI = document.querySelectorAll('.park')[parkIndex];\n            const procUI = parkUI.querySelectorAll('li')[procIndex];\n            const inpUI = procUI.querySelector('.input_cars');\n            inpUI.focus();\n            await Object(_calculation_js__WEBPACK_IMPORTED_MODULE_2__[\"delay\"])(50);\n            inpUI.blur();\n        }\n\n    }\n    /**\n     * Функция обновления имени в селекторе\n     * необходима для того, чтобы не оставалось старых значений селектора\n     * @param {Car} car - объект машины, у которой меняли инпут \n     */\n    $scope.updateSelectorAutNumber = car => {\n        car.selectorAutNumber = car.data.autNumber;\n    }\n    /**\n     * Функция замены машины в проце по выбору в select\n     * @param {process} process - проц, в котором проходит замена\n     * @param {car} car - объект машины, которой меняем\n     * @param {array} group - массив машин этого парка\n     */\n    $scope.changeCar = (process, car, group) => {\n        if (!car.selectorAutNumber) {\n            //событие вызывается также на изменение имени в инпуте, этот случай надо отсекать\n            car.selectorAutNumber = car.data.autNumber;\n            return false; \n        }\n        const nextCar = group.find(c=>c.data.autNumber===car.selectorAutNumber);\n        const oldCarIndex = process.cars.indexOf(car);\n        car.selectorAutNumber = car.data.autNumber;\n        if (process.cars.includes(nextCar)) {\n            //если в проце уже есть эта машина, тогда меняем их местами\n            const nextCarIndex = process.cars.indexOf(nextCar);\n            [process.cars[oldCarIndex],process.cars[nextCarIndex]] = [process.cars[nextCarIndex],process.cars[oldCarIndex]];\n        }\n        else {\n            //меняем на выбранную машину\n            process.cars[oldCarIndex] = nextCar;\n        }\n    }\n    /**\n     * Функция создания массива с предварительными платежами\n     */\n    $scope.calcFinances = () => {\n        const checkDiffInDates = () => {\n            const dates = $scope.myFactory.polisObj.dates;\n            const paymentDates = $scope.myFactory.payment.datesWhenCreated;\n            let flag = false;\n            for (let key in paymentDates) {\n                if (paymentDates[key] !== dates[key]) flag = true;\n            }\n            return flag;\n        }\n\n        if (myFactory.parks.length === 0 || !(myFactory.polisObj.dates.start || myFactory.polisObj.dates.end)) return false;\n        if (!myFactory.payment.array) myFactory.payment.makeArray(myFactory.totalPrice, myFactory.polisObj.dates);\n        else {\n            let needToCreate = false;\n            const payTotal = ((typeof myFactory.payment.totalPrice) === 'string') ? myFactory.payment.totalPrice : Object(_calculation_js__WEBPACK_IMPORTED_MODULE_2__[\"addSpaces\"])(Math.round(myFactory.payment.totalPrice));\n            const calcTotal = Object(_calculation_js__WEBPACK_IMPORTED_MODULE_2__[\"addSpaces\"])(Math.round(myFactory.totalPrice));\n            if (payTotal !== calcTotal) needToCreate = true; //если сумма расчета изменилась, то нужно пересчитать финансы\n            if (checkDiffInDates()) needToCreate = true; //если изменились даты или продолжительность договора - надо пересчитать\n            if (needToCreate) myFactory.payment.makeArray(myFactory.totalPrice, myFactory.polisObj.dates);\n        }\n    }\n    $scope.returnToDashboard = () => {\n        $location.path('/');\n    };\n    $scope.clicking = (event, process) => {\n        event.stopImmediatePropagation();\n        myFactory.parks.forEach((park) => {\n            park.processes.forEach((process) => {\n                process.showCars = false;\n            })\n        })\n        process.showCars = !process.showCars;\n    }\n    $scope.console = (param) => {\n        console.dir($scope.itemsList.items1);\n    }\n    /**\n     * Функция вкл/откл отображения поп апа выбора файла экселя с парком машин\n     * @param {event} ev \n     */\n    $scope.showFilepickModal = (ev) => {\n        const excelModal = ev.currentTarget.nextElementSibling;\n        excelModal.classList.toggle('select--hidden');\n    }\n    $scope.changeLocation = (value) => {\n        $scope.myFactory.cameFrom = {\n            name: Object(_calculation_js__WEBPACK_IMPORTED_MODULE_2__[\"getPathName\"])($location.$$path),\n            path: $location.$$path,\n        };\n        switch (value) {\n            case \"Компания\":\n                $location.path(`/company`);\n                break;\n            case \"Расчет\":\n                $location.path(`/calculation`);\n                break;\n            case 'Оговорки и условия':\n                $scope.myFactory.addNewPolisProperty();\n                $timeout(() => $location.path(`/polisEditor`), 0);\n            default:\n                $location.path(value);\n                break;\n        }\n    }\n    /**\n     * Функция загрузки объекта дополнения в окно редактирования дополнений\n     * @param {obj} data - объект дополнения выгруженный из базы данных\n     */\n    $scope.loadAddition = data => {\n        const addition = data;\n        const conditions = $scope.myFactory.polisObj.conditions;\n        const val = [];\n        // формируем текстовые значения в нужную структуру\n        data.text.forEach(txt => {\n            const obj = {};\n            obj.checked = true;\n            obj.text = txt;\n            val.push(obj);\n        })\n        //добавляем новое дополнение\n        const newAddition = {\n            name: data.name,\n            values: val,\n            id: data.id,\n            isNew: false,\n        }\n        if (data.type) newAddition.type = data.type;\n        $scope.myFactory.polisCurrent = newAddition;\n        $timeout(() => $location.path(`/polisEditor`), 0);\n    }\n    $scope.newDashboard = {\n        currentPage: null,\n        previousPage: -1,\n\n        toLeft(index) {\n            return this.previousPage < this.currentPage && this.previousPage == index;\n        },\n        toRight(index) {\n            return this.previousPage > this.currentPage && this.previousPage == index;\n        },\n        fromLeft(index) {\n            return this.previousPage > this.currentPage && this.currentPage == index;\n        },\n        fromRight(index) {\n            return this.previousPage < this.currentPage && this.currentPage == index;\n        },\n        checkCurrentPage(index) {\n            return index === this.currentPage;\n        },\n        setCurrentPage(index) {\n            this.previousPage = this.currentPage;\n            this.currentPage = index;\n            if (index === 2) $scope.myFactory.polisObj.additionsSeen = true;\n            if (index === 3) $scope.myFactory.polisObj.datesSeen = true;\n            if (index === 4) $scope.calcFinances();\n            if (index === 4 && $scope.myFactory.payment.array && $scope.myFactory.payment.array.length > 0) $scope.myFactory.polisObj.financeSeen = true;\n            $rootScope.search_result = [];\n            if (!$scope.currObj) {\n                return false; // происходит из-за повторной инициализации\n            }\n            $scope.currObj.forEach(param => {\n                if (param.type == 'search/create') {\n                    param.values[0].name = \"\";\n                }\n            })\n            $scope.currObj[index].values.forEach(val=>{\n                if (val.type==='btn-switch') {\n                    val.selected = val.values[0];\n                    val.switch = () => {\n                        const i = val.values.indexOf(val.selected);\n                        const setInd = (i===val.values.length-1) ? 0 : i+1;\n                        val.selected = val.values[setInd];\n                    }\n                }\n            })\n        },\n        alreadySelected(index) {\n            switch (index) {\n                case 0:\n                    return (myFactory.companyObj.isFull);\n                    break;\n                case 1:\n                    return myFactory.parks.length > 0;\n                    break;\n                case 2:\n                    return myFactory.polisObj.additionsSeen;\n                    break;\n                case 3:\n                    return myFactory.polisObj.dates.start && myFactory.polisObj.dates.end && myFactory.polisObj.datesSeen;\n                    break;\n                case 4:\n                    return myFactory.polisObj.financeSeen && myFactory.payment.array && myFactory.payment.array.length > 0;\n                    break;\n                default:\n                    return false;\n                    break;\n            }\n        },\n        allSelected() {\n            // Компанию не проверяем, поэтому начинаем с индекса 1\n            for (let i = 1; i < 5; i++) {\n                if (!$scope.newDashboard.alreadySelected(i)) return false;\n            }\n            \n            return true;\n        }\n    }\n    $scope.loadProcess = (process, key) => {\n        myFactory.loadProcess = {\n            process,\n            key\n        }\n        myFactory.cameFrom = {\n            name: \"Проект документа\",\n            path: '/polis',\n        }\n        $location.path(`/calculation`);\n    }\n    $scope.loadClient = (key) => {\n        myFactory.loadClient = key;\n    }\n    this.makePDF = () => {\n        if (!$scope.newDashboard.allSelected()) return false;\n        /**\n         * Функция загрузки рисков. Еще раз, зачем? FIXME:\n         */\n        const getRisks = () => {\n            return new Promise((resolve, reject) => {\n                const xhr = new XMLHttpRequest();\n                xhr.addEventListener('readystatechange', () => {\n                    if (xhr.readyState == 4) {\n                        resolve(JSON.parse(xhr.responseText));\n\n                    }\n                })\n                xhr.open(\"GET\", \"./src/HIP.json\", true);\n                xhr.send();\n            })\n        };\n        getRisks().then((data) => {\n            let risks = [];\n            data.forEach(({ model, values }) => {\n                if (model == \"risk\") {\n                    values.forEach((value) => {\n                        if (value.action === undefined && value.type === \"risk\") risks.push(value);\n                    })\n                }\n            })\n            const polisMaker = new _polismaker_js__WEBPACK_IMPORTED_MODULE_3__[\"PolisMaker\"]();\n            polisMaker.makePDF(myFactory, risks);\n            return null;\n        }, function error(response) {\n            console.error(response);\n\n        })\n    }\n    $scope.multiClicked = () => {\n        const polis = $scope.myFactory.polisObj;\n        polis.multi = !polis.multi;\n    };\n    $scope.deleteAdditionFromDB = id => {\n        if (id < 3) return false;\n        const query = {};\n        query.type = 'addition_delete';\n        query.id = id;\n        $http.post('./php/save.php', query).then(resp => {\n            if (resp.data !== 'success') {\n                alert('Ошибка удаления. Пожалуйста, по возможности не закрывайте окно и обратитесь к разработчику');\n                console.error(resp.data);\n            }\n            else $rootScope.search_result = $rootScope.search_result.filter(val => val.id !== id);\n        }, err => {\n            console.error(err);\n        });\n    }\n    /**\n     * Функция запускается после ухода с инпута в дэшборде\n     * @param {string} control - control инпута, чтобы разделять какой именно изменился\n     */\n    $scope.endChange = control => {\n        const dates = $scope.myFactory.polisObj.dates;\n        const valiDate = dateStr => {\n            const reg = /(2[01][012][0-9])-(0?[1-9]|1[0-2])-(0?[1-9]|[12][0-9]|3[01])/;\n            return reg.test(dateStr);\n        }\n        const changeDateView = dateStr => {\n            const reg = /(\\d+)-(\\d+)-(\\d+)/;\n            const newDate = dateStr.replace(reg, `$3.$2.$1`);\n            return newDate;\n        }\n        const makeDateFromStr = dateStr => {\n            const dates = dateStr.match(/(\\d+).(\\d+).(\\d+)/);\n            const newDate = new Date(dates[3], Number(dates[2]) - 1, dates[1]);\n            return newDate;\n        }\n        const BTN_SWITCH_TODAY = $scope.currObj[$scope.newDashboard.currentPage].values.filter(val=>(val.type==='btn-switch'&&val.control==='today'))[0];\n        const BTN_SWITCH_TIME = $scope.currObj[$scope.newDashboard.currentPage].values.filter(val=>(val.type==='btn-switch'&&val.control==='time'))[0];\n        switch (control) {\n            case 'start':\n                if (valiDate(dates.start)) {\n                    dates.start = changeDateView(dates.start);\n                    dates.startDate = makeDateFromStr(dates.start);\n                    $scope.setEndByTime(dates.startDate, dates.time);\n                    BTN_SWITCH_TODAY.selected = ' '; //выставляем значение в ячейку btn-switch\n                }\n                else {\n                    dates.start = null;\n                    dates.startDate = null;\n                }\n                break;\n            case 'end':\n                if (valiDate(dates.end)) {\n                    dates.end = changeDateView(dates.end);\n                    dates.endDate = makeDateFromStr(dates.end);\n                    if (dates.endDate < dates.startDate) {\n                        dates.end = null;\n                        dates.endDate = null;\n                        return false;\n                    }\n                    //выставляем значение в ячейку btn-switch\n                    BTN_SWITCH_TIME.selected = ' ';\n                    BTN_SWITCH_TIME.name = 'Дата окончания: '\n                    dates.time = 'Вручную';\n                }\n                else {\n                    dates.end = null;\n                    dates.endDate = null;\n                }\n                break;\n            default:\n                return false;\n        }\n    }\n    /**\n     * установка даты окончания в зависимости от выбранного срока действия\n     * @param {Date} start \n     * @param {string} time - Год, 6 месяцев или вручную \n     */\n    $scope.setEndByTime = (start, time) => {\n        if (!start) return false;\n        const setEnd = month => {\n            const end = new Date(start.getFullYear(), start.getMonth() + month, start.getDate() - 1);\n            $scope.myFactory.polisObj.dates.endDate = end;\n            $scope.myFactory.polisObj.dates.end = parseDate(end);\n        }\n        switch (time) {\n            case 'Год':\n                setEnd(12);\n                break;\n            case '6 месяцев':\n                setEnd(6);\n                break;\n            case 'Вручную':\n                $scope.myFactory.polisObj.dates.time = 'Вручную';\n                break;\n            default:\n                console.log(time);\n                debugger;\n                break;\n        }\n    }\n    /**\n     * keyHandler на нажатие энтера в инпутах ввода даты\n     * @param {obj} event - event нажатия\n     * @param {*} param - объект dashboard , текщая вкладка\n     * @param {obj} val - объект на котором нажали\n     */\n    $scope.keyHandler = (event, param, val) => {\n        if (event.keyCode !== 13) return false;\n        if (param.type==='dates') {\n            const inputId = `#input_${val.control}`;\n            document.querySelector(inputId).blur();\n        }\n    }\n    /**\n     * Функция переключения кнопки  btn-switch\n     * @param {obj} control объект по которому кликнули\n     */\n    $scope.switchBtnClick = control => {\n        const dates = $scope.myFactory.polisObj.dates;\n        control.switch();\n        if (control.control==='today') setStartDay(control);\n        if (control.control==='time') {\n            dates.time = control.selected;\n            control.name = 'Срок: '; //на всякий случай возвращаем исходное имя, так как оно может меняться, если инпут вручную\n            $scope.setEndByTime(dates.startDate, dates.time);\n        }\n        /**\n         * Функция выставления дня начала по переключению кнопки\n         * @param {obj} control \n         */\n        function setStartDay (control) {\n            const ind = control.values.indexOf(control.selected);\n            let setDay = new Date();\n            const dd = setDay.getDate();\n            setDay.setDate(dd+ind);\n            $scope.myFactory.polisObj.dates.start = parseDate(setDay);\n            $scope.myFactory.polisObj.dates.startDate = setDay;\n            $scope.setEndByTime(setDay, $scope.myFactory.polisObj.dates.time);\n        }   \n    }\n    /**\n     * Преобразование объекта даты в строку\n     * @param {Date} date \n     * @returns {string} dd.mm.yyyy\n     */\n    function parseDate(date) {\n        let day = date.getDate();\n        let month = date.getMonth() + 1;\n        let year = date.getFullYear();\n        if (day < 10) day = `0${day}`;\n        if (month < 10) month = `0${month}`;\n        return `${day}.${month}.${year}`;\n    }\n    $scope.loadCompanyProfile = async function (id){\n        myFactory.cameFrom = {\n            name: Object(_calculation_js__WEBPACK_IMPORTED_MODULE_2__[\"getPathName\"])($location.$$path),\n            path: $location.$$path,\n        }\n        if (!myFactory.companyObj || !myFactory.companyObj.id) $scope.changeLocation('Компания');\n        else {\n            myFactory.companyObj.id = id;\n            $location.path('/profile');\n        }\n    }\n    $scope.updateState = async () => {\n        const baseRiskNeeded = myFactory.parks.some(park=>{\n            return park.risks.includes(BASENAME);\n        }) \n        // проверяем когда расчеты загрузятся\n        const calcIsLoaded = async () => {\n            function check () {\n                return myFactory.parks.length>0 && myFactory.calcObj.isInited;\n            }\n            return new Promise (resolve=>{\n                const id = setInterval(()=>{\n                    if (check()) {\n                        clearInterval(id);\n                        resolve();\n                        \n                    }\n                },100)\n            })\n        }\n        await calcIsLoaded();\n        myFactory.polisObj.conditions = []; //удаляем старые значения\n        await myFactory.polisObj.loadConditions(myFactory.calcObj.factory.HIPname, baseRiskNeeded);\n        myFactory.polisObj.type = myFactory.calcObj.factory.HIPname;\n        myFactory.polisObj.additionsSeen = true;\n        myFactory.polisObj.updateConditionsCheck();\n        if (myFactory.parks.length>0) $scope.createCars ();\n        myFactory.polisObj.datesSeen = true;\n        $scope.calcFinances();\n        myFactory.polisObj.financeSeen= true;\n        myFactory.polisObj.dates = myFactory.polisObj.dates;\n        console.log('state updated')\n        document.querySelector('.mi_selected').click(); // констыльно вызываем ререндер \n    }\n\n    $scope.init();\n})\n\n\n//# sourceURL=webpack:///./js/controllers/polisCtrl.js?");

/***/ }),

/***/ "./js/controllers/polisEditorCtrl.js":
/*!*******************************************!*\
  !*** ./js/controllers/polisEditorCtrl.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("app.controller(\"polisEditorCtrl\", function($scope, myFactory, $location,$http){\n    if(myFactory.polisCurrent===\"\" || myFactory.polisCurrent===undefined) {\n        $location.path('/dashboard');\n        return;\n    };\n    $scope.myFactory = myFactory;\n    $scope.currObj=myFactory.polisCurrent.values;\n    $scope.delete=(value)=>{\n        if(value.text===\"\") $scope.currObj.splice($scope.currObj.indexOf(value), 1);\n        else value.checked=false;\n    }\n    $scope.newValue=\"\";\n    $scope.addNewValue=(event)=>{\n        if(event.keyCode==13 && $scope.newValue!==\"\"){\n            myFactory.polisCurrent.values.push({\n                text: $scope.newValue,\n                checked: true\n            });\n            $scope.newValue=\"\";\n        } \n    }\n    $scope.inputHandler = (e,i) => {\n        if (e.keyCode===13) {\n            $scope.newDashboard.setCurrentPage($scope.newDashboard.next(i));\n        }\n    }\n    $scope.$on(\"$destroy\",()=>{\n        const mass=[];\n        $scope.currObj.forEach((val)=>{\n            if(val.text===\"\") mass.push(val);\n        })\n        if(mass.length>0){\n            mass.forEach((value)=>{\n                $scope.currObj.splice($scope.currObj.indexOf(value), 1);\n            })\n        }\n    })\n    let paramNumbers=1;\n    $scope.addNew=(value)=>{\n        $scope.currObj.splice($scope.currObj.indexOf(value)+1, 0, {\n            text: \"\",\n            checked: true,\n            name: `Доп. пункт ${paramNumbers}`\n        });\n        paramNumbers++;\n    }\n    $scope.returnToPolis = async () => {\n        const mf = $scope.myFactory;\n        const curr = mf.polisCurrent;\n        const i = mf.polisObj.conditions.findIndex(val => val.$$hashKey === curr.$$hashKey);\n        if (curr.name === \"\" || curr.values.length === 0) {\n            // если объект пуст, то удаляем его или без имени\n            if (i >= 0) mf.polisObj.conditions.splice(i, 1);\n        }\n        $scope.saveAddition(i);\n        $scope.myFactory.cameFrom = {\n            name: 'Редактор полиса',\n            path: $location.$$path,\n        };\n        $location.path('/polis');\n    };\n    $scope.saveAddition = (ind) => {\n        const pc = $scope.myFactory.polisCurrent;\n        if (!pc.isNew && pc.startName === pc.name) return false;\n        else if (pc.name === '' || pc.values.length === 0) return false;\n        // создаем строку для сохранения в базу данных с разделителем /CBL/\n        const text = pc.values.reduce((acc, val, i) => {\n            return `${acc}${val.text}/CBL/`;\n        }, '');\n        if (text.length === 0) return false;\n        $scope.saveToDB (pc,text,ind);\n    }\n    $scope.saveToDB = (pc,text,ind) => {\n        const query = {};\n        query.type = 'addition_save';\n        query.name = pc.name;\n        query.text = text;\n        pc.isNew = false;\n        $http.post('./php/save.php', query).then(resp => {\n            const id = resp.data;\n            if (Number.isNaN(Number(id)) === NaN) console.error('ошибка сохранения оговорок ' + resp.data);\n            else {\n                $scope.myFactory.polisObj.conditions[ind].id = resp.data;\n                alert('Дополнение сохранено');\n            }\n        }, err => console.error(resp))\n    }\n    $scope.newDashboard={\n        TITLE_INDEX:-1,\n        ADD_INDEX: ()=>{return $scope.currObj.length},\n        currentPage: null,\n        previousPage: -1,\n        toLeft(index){\n            return this.previousPage<this.currentPage && this.previousPage==index;\n        },\n        toRight(index){\n            return this.previousPage>this.currentPage && this.previousPage==index;\n        },\n        fromLeft(index){\n            return this.previousPage>this.currentPage && this.currentPage==index;\n        },\n        fromRight(index){\n            return this.previousPage<this.currentPage && this.currentPage==index;\n        },\n        next(ind){\n            const nextI = ind + 1;\n            if (nextI>$scope.currObj.length) return ind;\n            if (nextI===$scope.currObj.length) return this.ADD_INDEX;\n            else return nextI;\n        },\n        checkCurrentPage(index){\n            if (index === 'add') index = this.ADD_INDEX;\n            if (index === 'title') index = this.TITLE_INDEX;\n            return index===this.currentPage;\n        },\n        setCurrentPage(index){\n            if ($scope.myFactory.polisCurrent.name.trim() === '') index = 'title'; // если имя не задано, то нельзя переключиться\n            // если оговорки из загруженных, то нельзя менять их структуру, поэтому при очистке поля нельзя переключиться, пока оно не будет заполнено\n            if (!$scope.myFactory.polisCurrent.isNew &&\n                this.currentPage!==null && Number(this.currentPage)>this.TITLE_INDEX && Number(this.currentPage)<this.ADD_INDEX() &&\n                $scope.myFactory.polisCurrent.values[this.currentPage].text==='' &&\n                $scope.myFactory.polisCurrent.startName===$scope.myFactory.polisCurrent.name) index=this.currentPage; \n            if (index === 'add') index = this.ADD_INDEX;\n            if (index === 'title') index = this.TITLE_INDEX;\n            this.previousPage=this.currentPage;\n            this.currentPage=index;\n            setTimeout(()=> document.querySelector('.input_polisEditor').focus(),400);\n        },\n        alreadySelected(index) {\n            switch (index) {\n                case 0:\n                    return (myFactory.companyObj.isFull);\n                    break;\n                case 1:\n                    return myFactory.parks.length>0;\n                    break;\n                default:\n                    return false;\n                break;\n            }\n        }\n    }\n    $scope.init = () => {\n        $scope.newDashboard.setCurrentPage('title');\n        if (!$scope.myFactory.polisCurrent.isNew) $scope.myFactory.polisCurrent.startName = $scope.myFactory.polisCurrent.name;\n    }\n    $scope.getCheckedConditions = () => {\n        return $scope.currObj.filter(val=>val.checked).length;\n    }\n    /**\n     * Функция добавления данного дополнения к полису, т е его выбор \n     */\n    $scope.applyAddition = () => {\n        if (!$scope.myFactory.polisObj.conditions.every(cond=>cond.name!==$scope.myFactory.polisCurrent.name)) return false;\n        $scope.myFactory.polisObj.conditions.push($scope.myFactory.polisCurrent);\n    }\n    $scope.init();\n});\n\n//# sourceURL=webpack:///./js/controllers/polisEditorCtrl.js?");

/***/ }),

/***/ "./js/controllers/profileCtrl.js":
/*!***************************************!*\
  !*** ./js/controllers/profileCtrl.js ***!
  \***************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _protos_company_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../protos/company.js */ \"./js/protos/company.js\");\n/* harmony import */ var _protos_profile_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../protos/profile.js */ \"./js/protos/profile.js\");\n/* harmony import */ var _protos_loading_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../protos/loading.js */ \"./js/protos/loading.js\");\n/* harmony import */ var _ServiceFunctions_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../ServiceFunctions.js */ \"./js/ServiceFunctions.js\");\n/* harmony import */ var _calculation_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../calculation.js */ \"./js/calculation.js\");\n\n\n\n\n\n\napp.controller('profileCtrl', function ($scope, $rootScope, $http, $q, $location, myFactory) {\n  $scope.myFactory = myFactory;\n  const scope = this;\n\n  async function init() {\n    const id = $scope.myFactory.companyObj.id;\n    if (!id) {\n      alert('Ошибка открытия клиента. Пожалуйста обратиетсь к разработчику');\n      return false;\n    } // всплывающее окно о загрузке\n    const pr = new _protos_profile_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\n    pr.bindFactory($scope.myFactory);\n    await loadDash();\n    const modal = new _protos_loading_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]();\n    modal.show();\n    await $scope.loadCompany(id);\n    pr.store.calcLinks = await $scope.loadCalcLinks(id);\n    const calcs = await $scope.loadCalculations(pr.store.calcLinks);//загрузка расчетов\n    if (calcs) {\n      calcs.sort((a,b)=>a.date<b.date ? 1 : -1) //сортируем по дате\n      pr.store.calculations = fixPremia(calcs);\n    }\n    await $scope.loadAddresses ();\n    // TODO: линки с БД connections\n    modal.hide();\n\n    function loadDash() {\n      return $http.post('./src/profile-dashboard.json').then((resp) => {\n        $scope.currObj = resp.data;\n      }, (err) => {\n        console.error(err);\n      })\n    }\n    /**\n     * Функция изменения вида значения фактической премии, так как она может быть записана с коэфициентом\n     * @param {Array} arr - массив с расчетами из БД\n     */\n    function fixPremia(arr) {\n      if (!arr) return [];\n      const fixed = arr.map(calc => {\n        const oldVal = calc['fact_premia'];\n        let newVal = null;\n        if (!oldVal || oldVal === ';1') newVal = calc['total_price'];\n        else {\n          const ind = oldVal.search(';');\n          if (ind >= 1) newVal = oldVal.slice(0, ind);\n        }\n        calc['fact_premia'] = newVal;\n        return calc;\n      })\n      return fixed;\n    }\n  }\n  /**\n   * Функция загрузки айдишников расчетов, которые првязаны к данной компании\n   * @param {string} id компания, связки с которой загружаем\n   */\n  $scope.loadCalcLinks = function (id) {\n    const query = {};\n    query.type = 'company_calculations';\n    query.model = 'company_id';\n    query.id = id;\n    return $http.post('php/load.php', query).then(resp => {\n      if (Array.isArray(resp.data)) {\n        const was = {};\n        // выбираем только уникальные айдишники, без повторов\n        const uniq = resp.data.filter(link => {\n          if (!was[link.calc_id]) {\n            was[link.calc_id] = true;\n            return true;\n          }\n          else return false;\n        })\n        //переворачиваем для хронологического порядка\n        uniq.reverse();\n        return uniq;\n      }\n      else alert('Возникли проблемы с загрузкой привязанных расчетов. Обратитесь к разработчику');\n    }, err => {\n      console.error(err);\n    });\n  }\n  /**\n   * Загрузка из БД данных карточки клиента\n   * @param {strinf} id компании\n   */\n  $scope.loadCompany = function (id) {\n    // const myFactory = $scope.myFactory;\n    const data = {};\n    data.type = 'load_company';\n    data.id = id;\n    return $http.post('php/search.php', data).then(async (resp) => {\n      const data = resp.data;\n      myFactory.newClientCard = Object(_ServiceFunctions_js__WEBPACK_IMPORTED_MODULE_3__[\"GenerateClientCard\"])(data);\n      const companyObj = new _protos_company_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\n      myFactory.companyObj = companyObj;\n      companyObj.parseFromCompaniesResponse(data) //создаем объект с  id  из ответа и сохраняем ответ внутри\n      companyObj.card = myFactory.newClientCard;\n      companyObj.markAsLoaded();\n      clearSearch();\n    }, function error(resp) {\n      console.error(resp);\n    })\n  }\n  /**\n   * Загрузка рассчетов из ссылок на них\n   * @param {Array} links - массив с обектами пар id - data. берется из метода loadCalcLinks\n   */\n  $scope.loadCalculations = function (links) {\n    const calculations = {};\n    if (!Array.isArray(links)) {\n      console.error(`Ошибка формата:${typeof links} должкен быть array`);\n      return false;\n    }\n    if (links.length === 0) {\n      console.log('Нет расчетов');\n      return false;\n    }\n    const query = {};\n    query.type = 'load_linked_calcs';\n    query.ids = links.map(link => link['calc_id']);\n    return $http.post('php/load.php', query).then(resp => {\n      if (!Array.isArray(resp.data)) {\n        alert(`Проблема с загрузкой расчетов. Пожалуйста, по возможности не закрывайте это окно и обратитесь к разработчику`);\n        console.error(resp.data);\n        return null;\n      }\n      if (resp.data.length !== links.length) console.warn(`Размер полученных данных не совпадает с запрошенными`);\n      return resp.data;\n\n    }, err => {\n      console.error(err);\n    })\n  }\n  /**\n   * Загрузка юр и фактического адреса компании\n   * ID для запросов берутся из companyObj.responses\n   * Загруженные данные сохраняются в companyObj и newClientCard\n   */\n  $scope.loadAddresses = () => {\n    const check = str => {\n      return (Object(_calculation_js__WEBPACK_IMPORTED_MODULE_4__[\"isNumeric\"])(str)) ? str : '1';\n    }\n    const query = {\n      legal_id: check(myFactory.companyObj.responses.card.Legal_address),\n      real_id: check(myFactory.companyObj.responses.card.Real_address),\n    }\n    const formatAddress = adr => {\n      return Object.values(adr).slice(1).filter(v=>v!=='').map(v=>v.trim());\n    }\n    if (query.legal_id==='1'&&query.real_id==='1') return false;\n    query.type = 'addresses';\n    return $http.post('php/load.php',query).then(resp=>{\n      if (!Array.isArray(resp.data)) {\n        console.error(resp.data);\n        return false;\n      }\n      const data = resp.data;\n      myFactory.companyObj.responses.adresses = data;\n      if (data[0].id!=='1') {\n        if (data[0].PostalCode==='0') delete data[0].PostalCode;//если индекс 0, то удаляем его\n        const legal = formatAddress(data[0]).join(', ');\n        myFactory.newClientCard['Доп. информация']['Юридический адрес'] = legal;\n      }\n      if (data[1].id!=='1') {\n        if (data[1].PostalCode==='0') delete data[1].PostalCode;//если индекс 0, то удаляем его\n        const fakt = formatAddress(data[1]).join(', ');\n        myFactory.newClientCard['Доп. информация']['Фактический адрес'] = fakt;\n      }\n    },err=>{\n      console.error(err);\n    })\n  }\n  $scope.newDashboard = {\n    currentPage: 0,\n    previousPage: -1,\n    toLeft(index) {\n      return this.previousPage < this.currentPage && this.previousPage == index;\n    },\n    toRight(index) {\n      return this.previousPage > this.currentPage && this.previousPage == index;\n    },\n    fromLeft(index) {\n      return this.previousPage > this.currentPage && this.currentPage == index;\n    },\n    fromRight(index) {\n      return this.previousPage < this.currentPage && this.currentPage == index;\n    },\n    checkCurrentPage(index) {\n      return index === this.currentPage;\n    },\n    async setCurrentPage(index) {\n      const mf = $scope.myFactory;\n      this.previousPage = this.currentPage;\n      this.currentPage = index;\n    }\n  }\n  $scope.loadToDashboard = (key) => {//обратный переход для карточки клиента\n    $scope.currObj.forEach((param, i) => {\n      param.values.forEach(({ name }, j) => {\n        if (name == key) {\n          Array.from(document.querySelectorAll(\".company_dashboard_inputs\")).forEach(item => {\n            item.classList.remove(\"selected\");\n          });\n          Array.from(document.querySelectorAll(\"div.clientCard td\")).forEach(node => {\n            node.classList.remove(\"mi_selected\");\n            if (node.title == key) node.classList.add(\"mi_selected\");\n          })\n          if ($scope.newDashboard.currentPage != i) $scope.newDashboard.setCurrentPage(i);\n          setTimeout(() => {\n            const elem = document.querySelector(\".ul_current\").firstElementChild.children[j].firstElementChild;\n            elem.classList.add(\"selected\");\n            elem.focus();\n          }, 100);\n        }\n      })\n    })\n  };\n  $scope.isntEmpty = (obj) => {\n    for (let key in obj) {\n      if (obj[key] != \"\" && obj[key] != \"Форма организации\" && obj[key] != undefined) return true;\n    }\n    return false;\n  };\n  $scope.relocate = (path) => {\n    $scope.myFactory.cameFrom = {\n      name: Object(_calculation_js__WEBPACK_IMPORTED_MODULE_4__[\"getPathName\"])($location.$$path),\n      path: $location.$$path,\n    };\n    $location.path(path);\n  };\n  /**\n * Deleting serach result after choosing one of the results\n */\n  function clearSearch() {\n    try {\n      $rootScope.search_result = [];\n    }\n    catch (err) {\n      console.error(`Clear search results problem: ${err}`);\n    }\n  }\n  $scope.$on('$destroy', function () {\n    $scope.myFactory.removeCellSelection('dashboard_container', true);\n  });\n  /**\n   * для вывода подсказок\n   */\n  $scope.tooltip = {\n    title: \"\",\n    fadeIn(title) {\n      if (title === '') title = 'Без названия';\n      this.title = title;\n    },\n    fadeOut() {\n      this.title = '';\n    }\n  };\n\n  if (!$scope.myFactory.companyObj.id) $scope.relocate('/');\n  else init();\n});\n\n\n//# sourceURL=webpack:///./js/controllers/profileCtrl.js?");

/***/ }),

/***/ "./js/controllers/search.js":
/*!**********************************!*\
  !*** ./js/controllers/search.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("app.controller('searchCtrl', function ($rootScope, $http, $q, $location, myFactory) {\n    this.myFactory = myFactory;\n    $rootScope.cacheTemplate = {};\n    let scope = this;\n    \n    this.makeSearch = (param) => {\n        this.isEmptyQuery(param.values) ? this.isEmptyObject(this.template) ? this.search(param.values, param.url) : this.checkTemplate(param.values) ? this.searchFilter(param.values) : this.search(param.values, param.url) : this.clean();\n    }\n    this.searchForPolis = async ({ type, value }) => {\n        if (value == \"\" || value.length <= 2) this.clean();\n        if ($rootScope.search_result.length == 0) scope.template = {};\n        if (this.isEmptyObject(this.template)) {\n            await this.search(\n                [{\n                    model: \"name\",\n                    name: \"Название\",\n                    val: value\n                }]\n                , type\n            );\n        }\n        else {\n            if (this.checkTemplate([{\n                model: \"name\",\n                name: \"Название\",\n                val: value\n            }])) {\n                this.searchFilter([{\n                    model: \"name\",\n                    name: \"Название\",\n                    val: value\n                }])\n            }\n            else {\n                await this.search(\n                    [{\n                        model: \"name\",\n                        name: \"Название\",\n                        val: value\n                    }]\n                    , type\n                );\n            }\n        }\n    }\n    this.isEmptyObject = (obj) => {//функция проверки объекта на пустоту\n        for (let i in obj) {\n            if (obj.hasOwnProperty(i)) {\n                return false;\n            }\n        }\n        return true;\n    };\n    this.searchFilter = function (values) {\n        for (let i = 0; i < values.length; i++) {\n            let obj = values[i];\n            if (obj.val == \"\") $rootScope.cacheTemplate[obj.model] = undefined;\n            else if (obj.model == \"contact\") {\n                $rootScope.cacheTemplate.contact = {};\n                if (isNaN(obj.val)) $rootScope.cacheTemplate.contact[\"name\"] = obj.val;\n                else $rootScope.cacheTemplate.contact[\"phone\"] = obj.val;\n            }\n            else $rootScope.cacheTemplate[obj.model] = obj.val;\n        }\n    };\n    this.template = {};//объект шаблон, необходимый для запроса к бд и дальнейшему решению искать ли в кэше или заново обращаться к бд\n    this.checkTemplate = function (values) {//проверка шаблона\n        let obj;\n        for (let i = 0; i < values.length; i++) {\n            if (values[i].model === scope.template.model) {\n                obj = values[i];\n                i = values.length;\n            }\n        }\n        if (obj) return obj.val.search(scope.template.txt) == 0;\n        else return false;\n    };\n    this.search = function (values, type) {\n        let data = {};\n        if (type == \"Компания\") {\n            data.type = \"find_company\";\n            values[0].db = \"companies\";\n        }\n        else if (type == \"calculationActions\") data.type = \"find_calculation\";\n        else if (type == 'Оговорки и условия') data.type = 'find_addition';\n        else data.type = type;\n        if (scope.abort) {\n            scope.abort.resolve();\n        }\n        scope.abort = $q.defer();\n        let flag = this.isEmptyQuery(values);\n        data.value = flag;\n        if (!flag) return false;\n        scope.template.txt = flag.val;\n        scope.template.model = flag.model;\n        return $http.post(\"./php/search.php\", data, { timeout: scope.abort.promise }).then(function success(response) {\n            scope.myFactory.matrixType = type;\n            $rootScope.cacheTemplate = {};\n            if (Array.isArray(response.data)) {\n                //переворачиваем массив, чтобы он шел от недавно созданного к более старому\n                response.data.reverse();\n            }\n            if (type === 'Оговорки и условия') {\n                $rootScope.search_result = parseText(response.data, 'text');\n                return true;\n            }\n            $rootScope.search_result = response.data;\n            if (type !== \"Компания\" && type !== \"find_company\") {\n                $rootScope.search_result.forEach(row => {\n                    if (row.fact_premia.indexOf(\" \") !== -1) {\n                        let fact_price = row.fact_premia.split(\" \");\n                        if (fact_price[0] == \"undefined\" || fact_price[0] == 0) delete row.fact_premia;\n                        else row.fact_premia = fact_price[0];\n                    }\n                    else if (row.fact_premia.indexOf(\";\") !== -1) {\n                        let fact_price = row.fact_premia.split(\";\");\n                        if (fact_price[0] == \"\" || fact_price[0] == 0) delete row.fact_premia;\n                        else row.fact_premia = fact_price[0];\n                    }\n                });\n            }\n            /**\n             * Function of splitting text response to array by splitter\n             * @param {Array} data array with response data\n             * @param {string} fieldName name of field with text that need to be parsed \n             */\n            function parseText(data, fieldName) {\n                if (!Array.isArray(data)) {\n                    console.error('expected array ' + data);\n                    return null;\n                }\n                const _splitter = '/CBL/';\n                const result = data.map(part => {\n                    //разделяем строку по разделителям, удаляем последний пустой элемент, это связано с алгоритмом формирования строки\n                    part[fieldName] = part[fieldName].split(_splitter);\n                    part[fieldName].pop()\n                    return part;\n                })\n                return result;\n            }\n        }, function error(response) {\n            if (response.data !== null) console.log(response);\n        }\n        );\n    };\n    this.clean = function () {//очищаем все результаты поиска\n        $rootScope.search_result = [];//<==== обнуляется массив\n        scope.template = {};\n    };\n    this.isEmptyQuery = function (values) {\n        let data = {};\n        data.values = values;\n        let flag = data.values.find(function (element) {// функция проверяет введено ли хоть в одно поле поиска значение, если нет - обнуляется массив\n            return element.val != '' && element.val != undefined && element.val.length > 1\n        });\n        return flag;\n    };\n});\n\n//# sourceURL=webpack:///./js/controllers/search.js?");

/***/ }),

/***/ "./js/index.js":
/*!*********************!*\
  !*** ./js/index.js ***!
  \*********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _lib_angular_min_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/angular.min.js */ \"./js/lib/angular.min.js\");\n/* harmony import */ var _lib_angular_min_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_lib_angular_min_js__WEBPACK_IMPORTED_MODULE_0__);\n\n// require ('./lib/angular-route.js');\n// require ('./lib/angular-cookies.min.js');\n\n\n__webpack_require__ (/*! ./app.js */ \"./js/app.js\");\n__webpack_require__ (/*! ./proto.js */ \"./js/proto.js\");\n__webpack_require__ (/*! ./calculation.js */ \"./js/calculation.js\");\n__webpack_require__ (/*! ./controllers/calculationCtrl.js */ \"./js/controllers/calculationCtrl.js\");\n__webpack_require__ (/*! ./controllers/loginCtrl.js */ \"./js/controllers/loginCtrl.js\");\n__webpack_require__ (/*! ./controllers/dashboard.js */ \"./js/controllers/dashboard.js\");\n__webpack_require__ (/*! ./controllers/matrixCtrl.js */ \"./js/controllers/matrixCtrl.js\");\n__webpack_require__ (/*! ./controllers/search.js */ \"./js/controllers/search.js\");\n__webpack_require__ (/*! ./controllers/HIP.js */ \"./js/controllers/HIP.js\");\n__webpack_require__ (/*! ./controllers/companyCtrl.js */ \"./js/controllers/companyCtrl.js\");\n__webpack_require__ (/*! ./controllers/polisCtrl.js */ \"./js/controllers/polisCtrl.js\");\n__webpack_require__ (/*! ./controllers/polisEditorCtrl.js */ \"./js/controllers/polisEditorCtrl.js\");\n__webpack_require__ (/*! ./controllers/financeCtrl.js */ \"./js/controllers/financeCtrl.js\");\n__webpack_require__ (/*! ./controllers/profileCtrl.js */ \"./js/controllers/profileCtrl.js\");\n__webpack_require__ (/*! ./polismaker.js */ \"./js/polismaker.js\");\n\n\n//# sourceURL=webpack:///./js/index.js?");

/***/ }),

/***/ "./js/lib/angular.min.js":
/*!*******************************!*\
  !*** ./js/lib/angular.min.js ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * Created by RoGGeR on 30.05.17.\n */\n/*\n AngularJS v1.6.3\n (c) 2010-2017 Google, Inc. http://angularjs.org\n License: MIT\n */\n(function(w){'use strict';function M(a,b){b=b||Error;return function(){var d=arguments[0],c;c=\"[\"+(a?a+\":\":\"\")+d+\"] http://errors.angularjs.org/1.6.3/\"+(a?a+\"/\":\"\")+d;for(d=1;d<arguments.length;d++){c=c+(1==d?\"?\":\"&\")+\"p\"+(d-1)+\"=\";var e=encodeURIComponent,f;f=arguments[d];f=\"function\"==typeof f?f.toString().replace(/ \\{[\\s\\S]*$/,\"\"):\"undefined\"==typeof f?\"undefined\":\"string\"!=typeof f?JSON.stringify(f):f;c+=e(f)}return new b(c)}}function me(a){if(G(a))u(a.objectMaxDepth)&&(Fc.objectMaxDepth=Tb(a.objectMaxDepth)?\n    a.objectMaxDepth:NaN);else return Fc}function Tb(a){return ba(a)&&0<a}function ra(a){if(null==a||Wa(a))return!1;if(H(a)||D(a)||F&&a instanceof F)return!0;var b=\"length\"in Object(a)&&a.length;return ba(b)&&(0<=b&&(b-1 in a||a instanceof Array)||\"function\"===typeof a.item)}function p(a,b,d){var c,e;if(a)if(E(a))for(c in a)\"prototype\"!==c&&\"length\"!==c&&\"name\"!==c&&a.hasOwnProperty(c)&&b.call(d,a[c],c,a);else if(H(a)||ra(a)){var f=\"object\"!==typeof a;c=0;for(e=a.length;c<e;c++)(f||c in a)&&b.call(d,\n    a[c],c,a)}else if(a.forEach&&a.forEach!==p)a.forEach(b,d,a);else if(Gc(a))for(c in a)b.call(d,a[c],c,a);else if(\"function\"===typeof a.hasOwnProperty)for(c in a)a.hasOwnProperty(c)&&b.call(d,a[c],c,a);else for(c in a)ua.call(a,c)&&b.call(d,a[c],c,a);return a}function Hc(a,b,d){for(var c=Object.keys(a).sort(),e=0;e<c.length;e++)b.call(d,a[c[e]],c[e]);return c}function Ic(a){return function(b,d){a(d,b)}}function ne(){return++rb}function Ub(a,b,d){for(var c=a.$$hashKey,e=0,f=b.length;e<f;++e){var g=b[e];\n    if(G(g)||E(g))for(var h=Object.keys(g),k=0,l=h.length;k<l;k++){var m=h[k],n=g[m];d&&G(n)?ga(n)?a[m]=new Date(n.valueOf()):Xa(n)?a[m]=new RegExp(n):n.nodeName?a[m]=n.cloneNode(!0):Vb(n)?a[m]=n.clone():(G(a[m])||(a[m]=H(n)?[]:{}),Ub(a[m],[n],!0)):a[m]=n}}c?a.$$hashKey=c:delete a.$$hashKey;return a}function R(a){return Ub(a,va.call(arguments,1),!1)}function oe(a){return Ub(a,va.call(arguments,1),!0)}function Z(a){return parseInt(a,10)}function Wb(a,b){return R(Object.create(a),b)}function A(){}function Ya(a){return a}\n    function la(a){return function(){return a}}function Xb(a){return E(a.toString)&&a.toString!==ma}function x(a){return\"undefined\"===typeof a}function u(a){return\"undefined\"!==typeof a}function G(a){return null!==a&&\"object\"===typeof a}function Gc(a){return null!==a&&\"object\"===typeof a&&!Jc(a)}function D(a){return\"string\"===typeof a}function ba(a){return\"number\"===typeof a}function ga(a){return\"[object Date]\"===ma.call(a)}function E(a){return\"function\"===typeof a}function Xa(a){return\"[object RegExp]\"===\n        ma.call(a)}function Wa(a){return a&&a.window===a}function Za(a){return a&&a.$evalAsync&&a.$watch}function Ha(a){return\"boolean\"===typeof a}function pe(a){return a&&ba(a.length)&&qe.test(ma.call(a))}function Vb(a){return!(!a||!(a.nodeName||a.prop&&a.attr&&a.find))}function re(a){var b={};a=a.split(\",\");var d;for(d=0;d<a.length;d++)b[a[d]]=!0;return b}function wa(a){return P(a.nodeName||a[0]&&a[0].nodeName)}function $a(a,b){var d=a.indexOf(b);0<=d&&a.splice(d,1);return d}function sa(a,b,d){function c(a,\nb,c){c--;if(0>c)return\"...\";var d=b.$$hashKey,f;if(H(a)){f=0;for(var g=a.length;f<g;f++)b.push(e(a[f],c))}else if(Gc(a))for(f in a)b[f]=e(a[f],c);else if(a&&\"function\"===typeof a.hasOwnProperty)for(f in a)a.hasOwnProperty(f)&&(b[f]=e(a[f],c));else for(f in a)ua.call(a,f)&&(b[f]=e(a[f],c));d?b.$$hashKey=d:delete b.$$hashKey;return b}function e(a,b){if(!G(a))return a;var d=g.indexOf(a);if(-1!==d)return h[d];if(Wa(a)||Za(a))throw Fa(\"cpws\");var d=!1,e=f(a);void 0===e&&(e=H(a)?[]:Object.create(Jc(a)),\n        d=!0);g.push(a);h.push(e);return d?c(a,e,b):e}function f(a){switch(ma.call(a)){case \"[object Int8Array]\":case \"[object Int16Array]\":case \"[object Int32Array]\":case \"[object Float32Array]\":case \"[object Float64Array]\":case \"[object Uint8Array]\":case \"[object Uint8ClampedArray]\":case \"[object Uint16Array]\":case \"[object Uint32Array]\":return new a.constructor(e(a.buffer),a.byteOffset,a.length);case \"[object ArrayBuffer]\":if(!a.slice){var b=new ArrayBuffer(a.byteLength);(new Uint8Array(b)).set(new Uint8Array(a));\n        return b}return a.slice(0);case \"[object Boolean]\":case \"[object Number]\":case \"[object String]\":case \"[object Date]\":return new a.constructor(a.valueOf());case \"[object RegExp]\":return b=new RegExp(a.source,a.toString().match(/[^/]*$/)[0]),b.lastIndex=a.lastIndex,b;case \"[object Blob]\":return new a.constructor([a],{type:a.type})}if(E(a.cloneNode))return a.cloneNode(!0)}var g=[],h=[];d=Tb(d)?d:NaN;if(b){if(pe(b)||\"[object ArrayBuffer]\"===ma.call(b))throw Fa(\"cpta\");if(a===b)throw Fa(\"cpi\");H(b)?b.length=\n            0:p(b,function(a,c){\"$$hashKey\"!==c&&delete b[c]});g.push(a);h.push(b);return c(a,b,d)}return e(a,d)}function pa(a,b){if(a===b)return!0;if(null===a||null===b)return!1;if(a!==a&&b!==b)return!0;var d=typeof a,c;if(d===typeof b&&\"object\"===d)if(H(a)){if(!H(b))return!1;if((d=a.length)===b.length){for(c=0;c<d;c++)if(!pa(a[c],b[c]))return!1;return!0}}else{if(ga(a))return ga(b)?pa(a.getTime(),b.getTime()):!1;if(Xa(a))return Xa(b)?a.toString()===b.toString():!1;if(Za(a)||Za(b)||Wa(a)||Wa(b)||H(b)||ga(b)||\n        Xa(b))return!1;d=V();for(c in a)if(\"$\"!==c.charAt(0)&&!E(a[c])){if(!pa(a[c],b[c]))return!1;d[c]=!0}for(c in b)if(!(c in d)&&\"$\"!==c.charAt(0)&&u(b[c])&&!E(b[c]))return!1;return!0}return!1}function ab(a,b,d){return a.concat(va.call(b,d))}function bb(a,b){var d=2<arguments.length?va.call(arguments,2):[];return!E(b)||b instanceof RegExp?b:d.length?function(){return arguments.length?b.apply(a,ab(d,arguments,0)):b.apply(a,d)}:function(){return arguments.length?b.apply(a,arguments):b.call(a)}}function Kc(a,\nb){var d=b;\"string\"===typeof a&&\"$\"===a.charAt(0)&&\"$\"===a.charAt(1)?d=void 0:Wa(b)?d=\"$WINDOW\":b&&w.document===b?d=\"$DOCUMENT\":Za(b)&&(d=\"$SCOPE\");return d}function cb(a,b){if(!x(a))return ba(b)||(b=b?2:null),JSON.stringify(a,Kc,b)}function Lc(a){return D(a)?JSON.parse(a):a}function Mc(a,b){a=a.replace(se,\"\");var d=Date.parse(\"Jan 01, 1970 00:00:00 \"+a)/6E4;return da(d)?b:d}function Yb(a,b,d){d=d?-1:1;var c=a.getTimezoneOffset();b=Mc(b,c);d*=b-c;a=new Date(a.getTime());a.setMinutes(a.getMinutes()+\n        d);return a}function xa(a){a=F(a).clone();try{a.empty()}catch(b){}var d=F(\"<div>\").append(a).html();try{return a[0].nodeType===Ia?P(d):d.match(/^(<[^>]+>)/)[1].replace(/^<([\\w-]+)/,function(a,b){return\"<\"+P(b)})}catch(c){return P(d)}}function Nc(a){try{return decodeURIComponent(a)}catch(b){}}function Oc(a){var b={};p((a||\"\").split(\"&\"),function(a){var c,e,f;a&&(e=a=a.replace(/\\+/g,\"%20\"),c=a.indexOf(\"=\"),-1!==c&&(e=a.substring(0,c),f=a.substring(c+1)),e=Nc(e),u(e)&&(f=u(f)?Nc(f):!0,ua.call(b,e)?H(b[e])?\n            b[e].push(f):b[e]=[b[e],f]:b[e]=f))});return b}function Zb(a){var b=[];p(a,function(a,c){H(a)?p(a,function(a){b.push($(c,!0)+(!0===a?\"\":\"=\"+$(a,!0)))}):b.push($(c,!0)+(!0===a?\"\":\"=\"+$(a,!0)))});return b.length?b.join(\"&\"):\"\"}function db(a){return $(a,!0).replace(/%26/gi,\"&\").replace(/%3D/gi,\"=\").replace(/%2B/gi,\"+\")}function $(a,b){return encodeURIComponent(a).replace(/%40/gi,\"@\").replace(/%3A/gi,\":\").replace(/%24/g,\"$\").replace(/%2C/gi,\",\").replace(/%3B/gi,\";\").replace(/%20/g,b?\"%20\":\"+\")}function te(a,\nb){var d,c,e=Ja.length;for(c=0;c<e;++c)if(d=Ja[c]+b,D(d=a.getAttribute(d)))return d;return null}function ue(a,b){var d,c,e={};p(Ja,function(b){b+=\"app\";!d&&a.hasAttribute&&a.hasAttribute(b)&&(d=a,c=a.getAttribute(b))});p(Ja,function(b){b+=\"app\";var e;!d&&(e=a.querySelector(\"[\"+b.replace(\":\",\"\\\\:\")+\"]\"))&&(d=e,c=e.getAttribute(b))});d&&(ve?(e.strictDi=null!==te(d,\"strict-di\"),b(d,c?[c]:[],e)):w.console.error(\"Angular: disabling automatic bootstrap. <script> protocol indicates an extension, document.location.href does not match.\"))}\n    function Pc(a,b,d){G(d)||(d={});d=R({strictDi:!1},d);var c=function(){a=F(a);if(a.injector()){var c=a[0]===w.document?\"document\":xa(a);throw Fa(\"btstrpd\",c.replace(/</,\"&lt;\").replace(/>/,\"&gt;\"));}b=b||[];b.unshift([\"$provide\",function(b){b.value(\"$rootElement\",a)}]);d.debugInfoEnabled&&b.push([\"$compileProvider\",function(a){a.debugInfoEnabled(!0)}]);b.unshift(\"ng\");c=eb(b,d.strictDi);c.invoke([\"$rootScope\",\"$rootElement\",\"$compile\",\"$injector\",function(a,b,c,d){a.$apply(function(){b.data(\"$injector\",\n        d);c(b)(a)})}]);return c},e=/^NG_ENABLE_DEBUG_INFO!/,f=/^NG_DEFER_BOOTSTRAP!/;w&&e.test(w.name)&&(d.debugInfoEnabled=!0,w.name=w.name.replace(e,\"\"));if(w&&!f.test(w.name))return c();w.name=w.name.replace(f,\"\");ea.resumeBootstrap=function(a){p(a,function(a){b.push(a)});return c()};E(ea.resumeDeferredBootstrap)&&ea.resumeDeferredBootstrap()}function we(){w.name=\"NG_ENABLE_DEBUG_INFO!\"+w.name;w.location.reload()}function xe(a){a=ea.element(a).injector();if(!a)throw Fa(\"test\");return a.get(\"$$testability\")}\n    function Qc(a,b){b=b||\"_\";return a.replace(ye,function(a,c){return(c?b:\"\")+a.toLowerCase()})}function ze(){var a;if(!Rc){var b=sb();(na=x(b)?w.jQuery:b?w[b]:void 0)&&na.fn.on?(F=na,R(na.fn,{scope:Oa.scope,isolateScope:Oa.isolateScope,controller:Oa.controller,injector:Oa.injector,inheritedData:Oa.inheritedData}),a=na.cleanData,na.cleanData=function(b){for(var c,e=0,f;null!=(f=b[e]);e++)(c=na._data(f,\"events\"))&&c.$destroy&&na(f).triggerHandler(\"$destroy\");a(b)}):F=W;ea.element=F;Rc=!0}}function fb(a,\nb,d){if(!a)throw Fa(\"areq\",b||\"?\",d||\"required\");return a}function tb(a,b,d){d&&H(a)&&(a=a[a.length-1]);fb(E(a),b,\"not a function, got \"+(a&&\"object\"===typeof a?a.constructor.name||\"Object\":typeof a));return a}function Ka(a,b){if(\"hasOwnProperty\"===a)throw Fa(\"badname\",b);}function Sc(a,b,d){if(!b)return a;b=b.split(\".\");for(var c,e=a,f=b.length,g=0;g<f;g++)c=b[g],a&&(a=(e=a)[c]);return!d&&E(a)?bb(e,a):a}function ub(a){for(var b=a[0],d=a[a.length-1],c,e=1;b!==d&&(b=b.nextSibling);e++)if(c||a[e]!==\n        b)c||(c=F(va.call(a,0,e))),c.push(b);return c||a}function V(){return Object.create(null)}function $b(a){if(null==a)return\"\";switch(typeof a){case \"string\":break;case \"number\":a=\"\"+a;break;default:a=!Xb(a)||H(a)||ga(a)?cb(a):a.toString()}return a}function Ae(a){function b(a,b,c){return a[b]||(a[b]=c())}var d=M(\"$injector\"),c=M(\"ng\");a=b(a,\"angular\",Object);a.$$minErr=a.$$minErr||M;return b(a,\"module\",function(){var a={};return function(f,g,h){var k={};if(\"hasOwnProperty\"===f)throw c(\"badname\",\"module\");\n        g&&a.hasOwnProperty(f)&&(a[f]=null);return b(a,f,function(){function a(b,c,d,f){f||(f=e);return function(){f[d||\"push\"]([b,c,arguments]);return p}}function b(a,c,d){d||(d=e);return function(b,e){e&&E(e)&&(e.$$moduleName=f);d.push([a,c,arguments]);return p}}if(!g)throw d(\"nomod\",f);var e=[],q=[],r=[],I=a(\"$injector\",\"invoke\",\"push\",q),p={_invokeQueue:e,_configBlocks:q,_runBlocks:r,info:function(a){if(u(a)){if(!G(a))throw c(\"aobj\",\"value\");k=a;return this}return k},requires:g,name:f,provider:b(\"$provide\",\n            \"provider\"),factory:b(\"$provide\",\"factory\"),service:b(\"$provide\",\"service\"),value:a(\"$provide\",\"value\"),constant:a(\"$provide\",\"constant\",\"unshift\"),decorator:b(\"$provide\",\"decorator\",q),animation:b(\"$animateProvider\",\"register\"),filter:b(\"$filterProvider\",\"register\"),controller:b(\"$controllerProvider\",\"register\"),directive:b(\"$compileProvider\",\"directive\"),component:b(\"$compileProvider\",\"component\"),config:I,run:function(a){r.push(a);return this}};h&&I(h);return p})}})}function qa(a,b){if(H(a)){b=\n        b||[];for(var d=0,c=a.length;d<c;d++)b[d]=a[d]}else if(G(a))for(d in b=b||{},a)if(\"$\"!==d.charAt(0)||\"$\"!==d.charAt(1))b[d]=a[d];return b||a}function Be(a,b){var d=[];Tb(b)&&(a=sa(a,null,b));return JSON.stringify(a,function(a,b){b=Kc(a,b);if(G(b)){if(0<=d.indexOf(b))return\"...\";d.push(b)}return b})}function Ce(a){R(a,{errorHandlingConfig:me,bootstrap:Pc,copy:sa,extend:R,merge:oe,equals:pa,element:F,forEach:p,injector:eb,noop:A,bind:bb,toJson:cb,fromJson:Lc,identity:Ya,isUndefined:x,isDefined:u,isString:D,\n        isFunction:E,isObject:G,isNumber:ba,isElement:Vb,isArray:H,version:De,isDate:ga,lowercase:P,uppercase:vb,callbacks:{$$counter:0},getTestability:xe,reloadWithDebugInfo:we,$$minErr:M,$$csp:Ga,$$encodeUriSegment:db,$$encodeUriQuery:$,$$stringify:$b});ac=Ae(w);ac(\"ng\",[\"ngLocale\"],[\"$provide\",function(a){a.provider({$$sanitizeUri:Ee});a.provider(\"$compile\",Tc).directive({a:Fe,input:Uc,textarea:Uc,form:Ge,script:He,select:Ie,option:Je,ngBind:Ke,ngBindHtml:Le,ngBindTemplate:Me,ngClass:Ne,ngClassEven:Oe,\n        ngClassOdd:Pe,ngCloak:Qe,ngController:Re,ngForm:Se,ngHide:Te,ngIf:Ue,ngInclude:Ve,ngInit:We,ngNonBindable:Xe,ngPluralize:Ye,ngRepeat:Ze,ngShow:$e,ngStyle:af,ngSwitch:bf,ngSwitchWhen:cf,ngSwitchDefault:df,ngOptions:ef,ngTransclude:ff,ngModel:gf,ngList:hf,ngChange:jf,pattern:Vc,ngPattern:Vc,required:Wc,ngRequired:Wc,minlength:Xc,ngMinlength:Xc,maxlength:Yc,ngMaxlength:Yc,ngValue:kf,ngModelOptions:lf}).directive({ngInclude:mf}).directive(wb).directive(Zc);a.provider({$anchorScroll:nf,$animate:of,$animateCss:pf,\n        $$animateJs:qf,$$animateQueue:rf,$$AnimateRunner:sf,$$animateAsyncRun:tf,$browser:uf,$cacheFactory:vf,$controller:wf,$document:xf,$$isDocumentHidden:yf,$exceptionHandler:zf,$filter:$c,$$forceReflow:Af,$interpolate:Bf,$interval:Cf,$http:Df,$httpParamSerializer:Ef,$httpParamSerializerJQLike:Ff,$httpBackend:Gf,$xhrFactory:Hf,$jsonpCallbacks:If,$location:Jf,$log:Kf,$parse:Lf,$rootScope:Mf,$q:Nf,$$q:Of,$sce:Pf,$sceDelegate:Qf,$sniffer:Rf,$templateCache:Sf,$templateRequest:Tf,$$testability:Uf,$timeout:Vf,\n        $window:Wf,$$rAF:Xf,$$jqLite:Yf,$$Map:Zf,$$cookieReader:$f})}]).info({angularVersion:\"1.6.3\"})}function gb(a,b){return b.toUpperCase()}function xb(a){return a.replace(ag,gb)}function ad(a){a=a.nodeType;return 1===a||!a||9===a}function bd(a,b){var d,c,e=b.createDocumentFragment(),f=[];if(bc.test(a)){d=e.appendChild(b.createElement(\"div\"));c=(bg.exec(a)||[\"\",\"\"])[1].toLowerCase();c=ha[c]||ha._default;d.innerHTML=c[1]+a.replace(cg,\"<$1></$2>\")+c[2];for(c=c[0];c--;)d=d.lastChild;f=ab(f,d.childNodes);\n        d=e.firstChild;d.textContent=\"\"}else f.push(b.createTextNode(a));e.textContent=\"\";e.innerHTML=\"\";p(f,function(a){e.appendChild(a)});return e}function W(a){if(a instanceof W)return a;var b;D(a)&&(a=S(a),b=!0);if(!(this instanceof W)){if(b&&\"<\"!==a.charAt(0))throw cc(\"nosel\");return new W(a)}if(b){b=w.document;var d;a=(d=dg.exec(a))?[b.createElement(d[1])]:(d=bd(a,b))?d.childNodes:[];dc(this,a)}else E(a)?cd(a):dc(this,a)}function ec(a){return a.cloneNode(!0)}function yb(a,b){b||hb(a);if(a.querySelectorAll)for(var d=\n        a.querySelectorAll(\"*\"),c=0,e=d.length;c<e;c++)hb(d[c])}function dd(a,b,d,c){if(u(c))throw cc(\"offargs\");var e=(c=zb(a))&&c.events,f=c&&c.handle;if(f)if(b){var g=function(b){var c=e[b];u(d)&&$a(c||[],d);u(d)&&c&&0<c.length||(a.removeEventListener(b,f),delete e[b])};p(b.split(\" \"),function(a){g(a);Ab[a]&&g(Ab[a])})}else for(b in e)\"$destroy\"!==b&&a.removeEventListener(b,f),delete e[b]}function hb(a,b){var d=a.ng339,c=d&&ib[d];c&&(b?delete c.data[b]:(c.handle&&(c.events.$destroy&&c.handle({},\"$destroy\"),\n            dd(a)),delete ib[d],a.ng339=void 0))}function zb(a,b){var d=a.ng339,d=d&&ib[d];b&&!d&&(a.ng339=d=++eg,d=ib[d]={events:{},data:{},handle:void 0});return d}function fc(a,b,d){if(ad(a)){var c,e=u(d),f=!e&&b&&!G(b),g=!b;a=(a=zb(a,!f))&&a.data;if(e)a[xb(b)]=d;else{if(g)return a;if(f)return a&&a[xb(b)];for(c in b)a[xb(c)]=b[c]}}}function Bb(a,b){return a.getAttribute?-1<(\" \"+(a.getAttribute(\"class\")||\"\")+\" \").replace(/[\\n\\t]/g,\" \").indexOf(\" \"+b+\" \"):!1}function Cb(a,b){b&&a.setAttribute&&p(b.split(\" \"),\n        function(b){a.setAttribute(\"class\",S((\" \"+(a.getAttribute(\"class\")||\"\")+\" \").replace(/[\\n\\t]/g,\" \").replace(\" \"+S(b)+\" \",\" \")))})}function Db(a,b){if(b&&a.setAttribute){var d=(\" \"+(a.getAttribute(\"class\")||\"\")+\" \").replace(/[\\n\\t]/g,\" \");p(b.split(\" \"),function(a){a=S(a);-1===d.indexOf(\" \"+a+\" \")&&(d+=a+\" \")});a.setAttribute(\"class\",S(d))}}function dc(a,b){if(b)if(b.nodeType)a[a.length++]=b;else{var d=b.length;if(\"number\"===typeof d&&b.window!==b){if(d)for(var c=0;c<d;c++)a[a.length++]=b[c]}else a[a.length++]=\n        b}}function ed(a,b){return Eb(a,\"$\"+(b||\"ngController\")+\"Controller\")}function Eb(a,b,d){9===a.nodeType&&(a=a.documentElement);for(b=H(b)?b:[b];a;){for(var c=0,e=b.length;c<e;c++)if(u(d=F.data(a,b[c])))return d;a=a.parentNode||11===a.nodeType&&a.host}}function fd(a){for(yb(a,!0);a.firstChild;)a.removeChild(a.firstChild)}function Fb(a,b){b||yb(a);var d=a.parentNode;d&&d.removeChild(a)}function fg(a,b){b=b||w;if(\"complete\"===b.document.readyState)b.setTimeout(a);else F(b).on(\"load\",a)}function cd(a){function b(){w.document.removeEventListener(\"DOMContentLoaded\",\n        b);w.removeEventListener(\"load\",b);a()}\"complete\"===w.document.readyState?w.setTimeout(a):(w.document.addEventListener(\"DOMContentLoaded\",b),w.addEventListener(\"load\",b))}function gd(a,b){var d=Gb[b.toLowerCase()];return d&&hd[wa(a)]&&d}function gg(a,b){var d=function(c,d){c.isDefaultPrevented=function(){return c.defaultPrevented};var f=b[d||c.type],g=f?f.length:0;if(g){if(x(c.immediatePropagationStopped)){var h=c.stopImmediatePropagation;c.stopImmediatePropagation=function(){c.immediatePropagationStopped=\n        !0;c.stopPropagation&&c.stopPropagation();h&&h.call(c)}}c.isImmediatePropagationStopped=function(){return!0===c.immediatePropagationStopped};var k=f.specialHandlerWrapper||hg;1<g&&(f=qa(f));for(var l=0;l<g;l++)c.isImmediatePropagationStopped()||k(a,c,f[l])}};d.elem=a;return d}function hg(a,b,d){d.call(a,b)}function ig(a,b,d){var c=b.relatedTarget;c&&(c===a||jg.call(a,c))||d.call(a,b)}function Yf(){this.$get=function(){return R(W,{hasClass:function(a,b){a.attr&&(a=a[0]);return Bb(a,b)},addClass:function(a,\nb){a.attr&&(a=a[0]);return Db(a,b)},removeClass:function(a,b){a.attr&&(a=a[0]);return Cb(a,b)}})}}function Pa(a,b){var d=a&&a.$$hashKey;if(d)return\"function\"===typeof d&&(d=a.$$hashKey()),d;d=typeof a;return d=\"function\"===d||\"object\"===d&&null!==a?a.$$hashKey=d+\":\"+(b||ne)():d+\":\"+a}function id(){this._keys=[];this._values=[];this._lastKey=NaN;this._lastIndex=-1}function jd(a){a=Function.prototype.toString.call(a).replace(kg,\"\");return a.match(lg)||a.match(mg)}function ng(a){return(a=jd(a))?\"function(\"+\n        (a[1]||\"\").replace(/[\\s\\r\\n]+/,\" \")+\")\":\"fn\"}function eb(a,b){function d(a){return function(b,c){if(G(b))p(b,Ic(a));else return a(b,c)}}function c(a,b){Ka(a,\"service\");if(E(b)||H(b))b=q.instantiate(b);if(!b.$get)throw ya(\"pget\",a);return n[a+\"Provider\"]=b}function e(a,b){return function(){var c=N.invoke(b,this);if(x(c))throw ya(\"undef\",a);return c}}function f(a,b,d){return c(a,{$get:!1!==d?e(a,b):b})}function g(a){fb(x(a)||H(a),\"modulesToLoad\",\"not an array\");var b=[],c;p(a,function(a){function d(a){var b,\n        c;b=0;for(c=a.length;b<c;b++){var e=a[b],f=q.get(e[0]);f[e[1]].apply(f,e[2])}}if(!m.get(a)){m.set(a,!0);try{D(a)?(c=ac(a),N.modules[a]=c,b=b.concat(g(c.requires)).concat(c._runBlocks),d(c._invokeQueue),d(c._configBlocks)):E(a)?b.push(q.invoke(a)):H(a)?b.push(q.invoke(a)):tb(a,\"module\")}catch(e){throw H(a)&&(a=a[a.length-1]),e.message&&e.stack&&-1===e.stack.indexOf(e.message)&&(e=e.message+\"\\n\"+e.stack),ya(\"modulerr\",a,e.stack||e.message||e);}}});return b}function h(a,c){function d(b,e){if(a.hasOwnProperty(b)){if(a[b]===\n        k)throw ya(\"cdep\",b+\" <- \"+l.join(\" <- \"));return a[b]}try{return l.unshift(b),a[b]=k,a[b]=c(b,e),a[b]}catch(f){throw a[b]===k&&delete a[b],f;}finally{l.shift()}}function e(a,c,f){var g=[];a=eb.$$annotate(a,b,f);for(var k=0,h=a.length;k<h;k++){var l=a[k];if(\"string\"!==typeof l)throw ya(\"itkn\",l);g.push(c&&c.hasOwnProperty(l)?c[l]:d(l,f))}return g}return{invoke:function(a,b,c,d){\"string\"===typeof c&&(d=c,c=null);c=e(a,c,d);H(a)&&(a=a[a.length-1]);d=a;if(za||\"function\"!==typeof d)d=!1;else{var f=d.$$ngIsClass;\n        Ha(f)||(f=d.$$ngIsClass=/^(?:class\\b|constructor\\()/.test(Function.prototype.toString.call(d)));d=f}return d?(c.unshift(null),new (Function.prototype.bind.apply(a,c))):a.apply(b,c)},instantiate:function(a,b,c){var d=H(a)?a[a.length-1]:a;a=e(a,b,c);a.unshift(null);return new (Function.prototype.bind.apply(d,a))},get:d,annotate:eb.$$annotate,has:function(b){return n.hasOwnProperty(b+\"Provider\")||a.hasOwnProperty(b)}}}b=!0===b;var k={},l=[],m=new Hb,n={$provide:{provider:d(c),factory:d(f),service:d(function(a,\nb){return f(a,[\"$injector\",function(a){return a.instantiate(b)}])}),value:d(function(a,b){return f(a,la(b),!1)}),constant:d(function(a,b){Ka(a,\"constant\");n[a]=b;r[a]=b}),decorator:function(a,b){var c=q.get(a+\"Provider\"),d=c.$get;c.$get=function(){var a=N.invoke(d,c);return N.invoke(b,null,{$delegate:a})}}}},q=n.$injector=h(n,function(a,b){ea.isString(b)&&l.push(b);throw ya(\"unpr\",l.join(\" <- \"));}),r={},I=h(r,function(a,b){var c=q.get(a+\"Provider\",b);return N.invoke(c.$get,c,void 0,a)}),N=I;n.$injectorProvider=\n        {$get:la(I)};N.modules=q.modules=V();var t=g(a),N=I.get(\"$injector\");N.strictDi=b;p(t,function(a){a&&N.invoke(a)});return N}function nf(){var a=!0;this.disableAutoScrolling=function(){a=!1};this.$get=[\"$window\",\"$location\",\"$rootScope\",function(b,d,c){function e(a){var b=null;Array.prototype.some.call(a,function(a){if(\"a\"===wa(a))return b=a,!0});return b}function f(a){if(a){a.scrollIntoView();var c;c=g.yOffset;E(c)?c=c():Vb(c)?(c=c[0],c=\"fixed\"!==b.getComputedStyle(c).position?0:c.getBoundingClientRect().bottom):\n            ba(c)||(c=0);c&&(a=a.getBoundingClientRect().top,b.scrollBy(0,a-c))}else b.scrollTo(0,0)}function g(a){a=D(a)?a:ba(a)?a.toString():d.hash();var b;a?(b=h.getElementById(a))?f(b):(b=e(h.getElementsByName(a)))?f(b):\"top\"===a&&f(null):f(null)}var h=b.document;a&&c.$watch(function(){return d.hash()},function(a,b){a===b&&\"\"===a||fg(function(){c.$evalAsync(g)})});return g}]}function jb(a,b){if(!a&&!b)return\"\";if(!a)return b;if(!b)return a;H(a)&&(a=a.join(\" \"));H(b)&&(b=b.join(\" \"));return a+\" \"+b}function og(a){D(a)&&\n    (a=a.split(\" \"));var b=V();p(a,function(a){a.length&&(b[a]=!0)});return b}function ia(a){return G(a)?a:{}}function pg(a,b,d,c){function e(a){try{a.apply(null,va.call(arguments,1))}finally{if(I--,0===I)for(;N.length;)try{N.pop()()}catch(b){d.error(b)}}}function f(){La=null;h()}function g(){t=B();t=x(t)?null:t;pa(t,C)&&(t=C);K=C=t}function h(){var a=K;g();if(y!==k.url()||a!==t)y=k.url(),K=t,p(J,function(a){a(k.url(),t)})}var k=this,l=a.location,m=a.history,n=a.setTimeout,q=a.clearTimeout,r={};k.isMock=\n        !1;var I=0,N=[];k.$$completeOutstandingRequest=e;k.$$incOutstandingRequestCount=function(){I++};k.notifyWhenNoOutstandingRequests=function(a){0===I?a():N.push(a)};var t,K,y=l.href,v=b.find(\"base\"),La=null,B=c.history?function(){try{return m.state}catch(a){}}:A;g();k.url=function(b,d,e){x(e)&&(e=null);l!==a.location&&(l=a.location);m!==a.history&&(m=a.history);if(b){var f=K===e;if(y===b&&(!c.history||f))return k;var h=y&&Aa(y)===Aa(b);y=b;K=e;!c.history||h&&f?(h||(La=b),d?l.replace(b):h?(d=l,e=b.indexOf(\"#\"),\n                    e=-1===e?\"\":b.substr(e),d.hash=e):l.href=b,l.href!==b&&(La=b)):(m[d?\"replaceState\":\"pushState\"](e,\"\",b),g());La&&(La=b);return k}return La||l.href.replace(/%27/g,\"'\")};k.state=function(){return t};var J=[],L=!1,C=null;k.onUrlChange=function(b){if(!L){if(c.history)F(a).on(\"popstate\",f);F(a).on(\"hashchange\",f);L=!0}J.push(b);return b};k.$$applicationDestroyed=function(){F(a).off(\"hashchange popstate\",f)};k.$$checkUrlChange=h;k.baseHref=function(){var a=v.attr(\"href\");return a?a.replace(/^(https?:)?\\/\\/[^/]*/,\n            \"\"):\"\"};k.defer=function(a,b){var c;I++;c=n(function(){delete r[c];e(a)},b||0);r[c]=!0;return c};k.defer.cancel=function(a){return r[a]?(delete r[a],q(a),e(A),!0):!1}}function uf(){this.$get=[\"$window\",\"$log\",\"$sniffer\",\"$document\",function(a,b,d,c){return new pg(a,c,b,d)}]}function vf(){this.$get=function(){function a(a,c){function e(a){a!==n&&(q?q===a&&(q=a.n):q=a,f(a.n,a.p),f(a,n),n=a,n.n=null)}function f(a,b){a!==b&&(a&&(a.p=b),b&&(b.n=a))}if(a in b)throw M(\"$cacheFactory\")(\"iid\",a);var g=0,h=\n        R({},c,{id:a}),k=V(),l=c&&c.capacity||Number.MAX_VALUE,m=V(),n=null,q=null;return b[a]={put:function(a,b){if(!x(b)){if(l<Number.MAX_VALUE){var c=m[a]||(m[a]={key:a});e(c)}a in k||g++;k[a]=b;g>l&&this.remove(q.key);return b}},get:function(a){if(l<Number.MAX_VALUE){var b=m[a];if(!b)return;e(b)}return k[a]},remove:function(a){if(l<Number.MAX_VALUE){var b=m[a];if(!b)return;b===n&&(n=b.p);b===q&&(q=b.n);f(b.n,b.p);delete m[a]}a in k&&(delete k[a],g--)},removeAll:function(){k=V();g=0;m=V();n=q=null},destroy:function(){m=\n        h=k=null;delete b[a]},info:function(){return R({},h,{size:g})}}}var b={};a.info=function(){var a={};p(b,function(b,e){a[e]=b.info()});return a};a.get=function(a){return b[a]};return a}}function Sf(){this.$get=[\"$cacheFactory\",function(a){return a(\"templates\")}]}function Tc(a,b){function d(a,b,c){var d=/^\\s*([@&<]|=(\\*?))(\\??)\\s*([\\w$]*)\\s*$/,e=V();p(a,function(a,f){if(a in n)e[f]=n[a];else{var g=a.match(d);if(!g)throw fa(\"iscp\",b,f,a,c?\"controller bindings definition\":\"isolate scope definition\");\n        e[f]={mode:g[1][0],collection:\"*\"===g[2],optional:\"?\"===g[3],attrName:g[4]||f};g[4]&&(n[a]=e[f])}});return e}function c(a){var b=a.charAt(0);if(!b||b!==P(b))throw fa(\"baddir\",a);if(a!==a.trim())throw fa(\"baddir\",a);}function e(a){var b=a.require||a.controller&&a.name;!H(b)&&G(b)&&p(b,function(a,c){var d=a.match(l);a.substring(d[0].length)||(b[c]=d[0]+c)});return b}var f={},g=/^\\s*directive:\\s*([\\w-]+)\\s+(.*)$/,h=/(([\\w-]+)(?::([^;]+))?;?)/,k=re(\"ngSrc,ngSrcset,src,srcset\"),l=/^(?:(\\^\\^?)?(\\?)?(\\^\\^?)?)?/,\n        m=/^(on[a-z]+|formaction)$/,n=V();this.directive=function y(b,d){fb(b,\"name\");Ka(b,\"directive\");D(b)?(c(b),fb(d,\"directiveFactory\"),f.hasOwnProperty(b)||(f[b]=[],a.factory(b+\"Directive\",[\"$injector\",\"$exceptionHandler\",function(a,c){var d=[];p(f[b],function(f,g){try{var h=a.invoke(f);E(h)?h={compile:la(h)}:!h.compile&&h.link&&(h.compile=la(h.link));h.priority=h.priority||0;h.index=g;h.name=h.name||b;h.require=e(h);var k=h,l=h.restrict;if(l&&(!D(l)||!/[EACM]/.test(l)))throw fa(\"badrestrict\",l,b);k.restrict=\n            l||\"EA\";h.$$moduleName=f.$$moduleName;d.push(h)}catch(m){c(m)}});return d}])),f[b].push(d)):p(b,Ic(y));return this};this.component=function(a,b){function c(a){function e(b){return E(b)||H(b)?function(c,d){return a.invoke(b,this,{$element:c,$attrs:d})}:b}var f=b.template||b.templateUrl?b.template:\"\",g={controller:d,controllerAs:qg(b.controller)||b.controllerAs||\"$ctrl\",template:e(f),templateUrl:e(b.templateUrl),transclude:b.transclude,scope:{},bindToController:b.bindings||{},restrict:\"E\",require:b.require};\n        p(b,function(a,b){\"$\"===b.charAt(0)&&(g[b]=a)});return g}var d=b.controller||function(){};p(b,function(a,b){\"$\"===b.charAt(0)&&(c[b]=a,E(d)&&(d[b]=a))});c.$inject=[\"$injector\"];return this.directive(a,c)};this.aHrefSanitizationWhitelist=function(a){return u(a)?(b.aHrefSanitizationWhitelist(a),this):b.aHrefSanitizationWhitelist()};this.imgSrcSanitizationWhitelist=function(a){return u(a)?(b.imgSrcSanitizationWhitelist(a),this):b.imgSrcSanitizationWhitelist()};var q=!0;this.debugInfoEnabled=function(a){return u(a)?\n        (q=a,this):q};var r=!1;this.preAssignBindingsEnabled=function(a){return u(a)?(r=a,this):r};var I=10;this.onChangesTtl=function(a){return arguments.length?(I=a,this):I};var N=!0;this.commentDirectivesEnabled=function(a){return arguments.length?(N=a,this):N};var t=!0;this.cssClassDirectivesEnabled=function(a){return arguments.length?(t=a,this):t};this.$get=[\"$injector\",\"$interpolate\",\"$exceptionHandler\",\"$templateRequest\",\"$parse\",\"$controller\",\"$rootScope\",\"$sce\",\"$animate\",\"$$sanitizeUri\",function(a,\nb,c,e,n,L,C,z,O,X){function T(){try{if(!--ya)throw ia=void 0,fa(\"infchng\",I);C.$apply(function(){for(var a=[],b=0,c=ia.length;b<c;++b)try{ia[b]()}catch(d){a.push(d)}ia=void 0;if(a.length)throw a;})}finally{ya++}}function s(a,b){if(b){var c=Object.keys(b),d,e,f;d=0;for(e=c.length;d<e;d++)f=c[d],this[f]=b[f]}else this.$attr={};this.$$element=a}function Q(a,b,c){ta.innerHTML=\"<span \"+b+\">\";b=ta.firstChild.attributes;var d=b[0];b.removeNamedItem(d.name);d.value=c;a.attributes.setNamedItem(d)}function Ma(a,\nb){try{a.addClass(b)}catch(c){}}function ca(a,b,c,d,e){a instanceof F||(a=F(a));var f=Na(a,b,a,c,d,e);ca.$$addScopeClass(a);var g=null;return function(b,c,d){if(!a)throw fa(\"multilink\");fb(b,\"scope\");e&&e.needsNewScope&&(b=b.$parent.$new());d=d||{};var h=d.parentBoundTranscludeFn,k=d.transcludeControllers;d=d.futureParentElement;h&&h.$$boundTransclude&&(h=h.$$boundTransclude);g||(g=(d=d&&d[0])?\"foreignobject\"!==wa(d)&&ma.call(d).match(/SVG/)?\"svg\":\"html\":\"html\");d=\"html\"!==g?F(ha(g,F(\"<div>\").append(a).html())):\n        c?Oa.clone.call(a):a;if(k)for(var l in k)d.data(\"$\"+l+\"Controller\",k[l].instance);ca.$$addScopeInfo(d,b);c&&c(d,b);f&&f(b,d,d,h);c||(a=f=null);return d}}function Na(a,b,c,d,e,f){function g(a,c,d,e){var f,k,l,m,n,q,r;if(J)for(r=Array(c.length),m=0;m<h.length;m+=3)f=h[m],r[f]=c[f];else r=c;m=0;for(n=h.length;m<n;)k=r[h[m++]],c=h[m++],f=h[m++],c?(c.scope?(l=a.$new(),ca.$$addScopeInfo(F(k),l)):l=a,q=c.transcludeOnThisElement?ja(a,c.transclude,e):!c.templateOnThisElement&&e?e:!e&&b?ja(a,b):null,c(f,l,\n            k,d,q)):f&&f(a,k.childNodes,void 0,e)}for(var h=[],k=H(a)||a instanceof F,l,m,n,q,J,r=0;r<a.length;r++){l=new s;11===za&&M(a,r,k);m=hc(a[r],[],l,0===r?d:void 0,e);(f=m.length?W(m,a[r],l,b,c,null,[],[],f):null)&&f.scope&&ca.$$addScopeClass(l.$$element);l=f&&f.terminal||!(n=a[r].childNodes)||!n.length?null:Na(n,f?(f.transcludeOnThisElement||!f.templateOnThisElement)&&f.transclude:b);if(f||l)h.push(r,f,l),q=!0,J=J||f;f=null}return q?g:null}function M(a,b,c){var d=a[b],e=d.parentNode,f;if(d.nodeType===\n        Ia)for(;;){f=e?d.nextSibling:a[b+1];if(!f||f.nodeType!==Ia)break;d.nodeValue+=f.nodeValue;f.parentNode&&f.parentNode.removeChild(f);c&&f===a[b+1]&&a.splice(b+1,1)}}function ja(a,b,c){function d(e,f,g,h,k){e||(e=a.$new(!1,k),e.$$transcluded=!0);return b(e,f,{parentBoundTranscludeFn:c,transcludeControllers:g,futureParentElement:h})}var e=d.$$slots=V(),f;for(f in b.$$slots)e[f]=b.$$slots[f]?ja(a,b.$$slots[f],c):null;return d}function hc(a,b,c,d,e){var f=c.$attr,g;switch(a.nodeType){case 1:g=wa(a);Y(b,\n        Ba(g),\"E\",d,e);for(var k,l,m,n,q=a.attributes,J=0,r=q&&q.length;J<r;J++){var B=!1,C=!1;k=q[J];l=k.name;m=k.value;k=Ba(l);(n=Ja.test(k))&&(l=l.replace(kd,\"\").substr(8).replace(/_(.)/g,function(a,b){return b.toUpperCase()}));(k=k.match(Ka))&&Z(k[1])&&(B=l,C=l.substr(0,l.length-5)+\"end\",l=l.substr(0,l.length-6));k=Ba(l.toLowerCase());f[k]=l;if(n||!c.hasOwnProperty(k))c[k]=m,gd(a,k)&&(c[k]=!0);qa(a,b,m,k,n);Y(b,k,\"A\",d,e,B,C)}\"input\"===g&&\"hidden\"===a.getAttribute(\"type\")&&a.setAttribute(\"autocomplete\",\n        \"off\");if(!Ga)break;f=a.className;G(f)&&(f=f.animVal);if(D(f)&&\"\"!==f)for(;a=h.exec(f);)k=Ba(a[2]),Y(b,k,\"C\",d,e)&&(c[k]=S(a[3])),f=f.substr(a.index+a[0].length);break;case Ia:la(b,a.nodeValue);break;case 8:if(!Fa)break;kb(a,b,c,d,e)}b.sort(ea);return b}function kb(a,b,c,d,e){try{var f=g.exec(a.nodeValue);if(f){var h=Ba(f[1]);Y(b,h,\"M\",d,e)&&(c[h]=S(f[2]))}}catch(k){}}function ld(a,b,c){var d=[],e=0;if(b&&a.hasAttribute&&a.hasAttribute(b)){do{if(!a)throw fa(\"uterdir\",b,c);1===a.nodeType&&(a.hasAttribute(b)&&\n    e++,a.hasAttribute(c)&&e--);d.push(a);a=a.nextSibling}while(0<e)}else d.push(a);return F(d)}function md(a,b,c){return function(d,e,f,g,h){e=ld(e[0],b,c);return a(d,e,f,g,h)}}function ic(a,b,c,d,e,f){var g;return a?ca(b,c,d,e,f):function(){g||(g=ca(b,c,d,e,f),b=c=f=null);return g.apply(this,arguments)}}function W(a,b,d,e,f,g,h,k,l){function m(a,b,c,d){if(a){c&&(a=md(a,c,d));a.require=z.require;a.directiveName=v;if(C===z||z.$$isolateScope)a=ra(a,{isolateScope:!0});h.push(a)}if(b){c&&(b=md(b,c,d));b.require=\n        z.require;b.directiveName=v;if(C===z||z.$$isolateScope)b=ra(b,{isolateScope:!0});k.push(b)}}function n(a,e,f,g,l){function m(a,b,c,d){var e;Za(a)||(d=c,c=b,b=a,a=void 0);X&&(e=O);c||(c=X?v.parent():v);if(d){var f=l.$$slots[d];if(f)return f(a,b,e,c,Q);if(x(f))throw fa(\"noslot\",d,xa(v));}else return l(a,b,e,c,Q)}var q,z,t,I,y,O,T,v;b===f?(g=d,v=d.$$element):(v=F(f),g=new s(v,d));y=e;C?I=e.$new(!0):J&&(y=e.$parent);l&&(T=m,T.$$boundTransclude=l,T.isSlotFilled=function(a){return!!l.$$slots[a]});B&&(O=\n        ba(v,g,T,B,I,e,C));C&&(ca.$$addScopeInfo(v,I,!0,!(L&&(L===C||L===C.$$originalDirective))),ca.$$addScopeClass(v,!0),I.$$isolateBindings=C.$$isolateBindings,z=na(e,g,I,I.$$isolateBindings,C),z.removeWatches&&I.$on(\"$destroy\",z.removeWatches));for(q in O){z=B[q];t=O[q];var Ib=z.$$bindings.bindToController;if(r){t.bindingInfo=Ib?na(y,g,t.instance,Ib,z):{};var N=t();N!==t.instance&&(t.instance=N,v.data(\"$\"+z.name+\"Controller\",N),t.bindingInfo.removeWatches&&t.bindingInfo.removeWatches(),t.bindingInfo=\n        na(y,g,t.instance,Ib,z))}else t.instance=t(),v.data(\"$\"+z.name+\"Controller\",t.instance),t.bindingInfo=na(y,g,t.instance,Ib,z)}p(B,function(a,b){var c=a.require;a.bindToController&&!H(c)&&G(c)&&R(O[b].instance,U(b,c,v,O))});p(O,function(a){var b=a.instance;if(E(b.$onChanges))try{b.$onChanges(a.bindingInfo.initialChanges)}catch(d){c(d)}if(E(b.$onInit))try{b.$onInit()}catch(e){c(e)}E(b.$doCheck)&&(y.$watch(function(){b.$doCheck()}),b.$doCheck());E(b.$onDestroy)&&y.$on(\"$destroy\",function(){b.$onDestroy()})});\n        q=0;for(z=h.length;q<z;q++)t=h[q],sa(t,t.isolateScope?I:e,v,g,t.require&&U(t.directiveName,t.require,v,O),T);var Q=e;C&&(C.template||null===C.templateUrl)&&(Q=I);a&&a(Q,f.childNodes,void 0,l);for(q=k.length-1;0<=q;q--)t=k[q],sa(t,t.isolateScope?I:e,v,g,t.require&&U(t.directiveName,t.require,v,O),T);p(O,function(a){a=a.instance;E(a.$postLink)&&a.$postLink()})}l=l||{};for(var q=-Number.MAX_VALUE,J=l.newScopeDirective,B=l.controllerDirectives,C=l.newIsolateScopeDirective,L=l.templateDirective,t=l.nonTlbTranscludeDirective,\n                                                                                                                                                                                                                                                                                                                                                                                                 I=!1,O=!1,X=l.hasElementTranscludeDirective,y=d.$$element=F(b),z,v,T,N=e,Q,u=!1,Ma=!1,w,A=0,D=a.length;A<D;A++){z=a[A];var Na=z.$$start,M=z.$$end;Na&&(y=ld(b,Na,M));T=void 0;if(q>z.priority)break;if(w=z.scope)z.templateUrl||(G(w)?($(\"new/isolated scope\",C||J,z,y),C=z):$(\"new/isolated scope\",C,z,y)),J=J||z;v=z.name;if(!u&&(z.replace&&(z.templateUrl||z.template)||z.transclude&&!z.$$tlb)){for(w=A+1;u=a[w++];)if(u.transclude&&!u.$$tlb||u.replace&&(u.templateUrl||u.template)){Ma=!0;break}u=!0}!z.templateUrl&&\n    z.controller&&(B=B||V(),$(\"'\"+v+\"' controller\",B[v],z,y),B[v]=z);if(w=z.transclude)if(I=!0,z.$$tlb||($(\"transclusion\",t,z,y),t=z),\"element\"===w)X=!0,q=z.priority,T=y,y=d.$$element=F(ca.$$createComment(v,d[v])),b=y[0],ka(f,va.call(T,0),b),T[0].$$parentNode=T[0].parentNode,N=ic(Ma,T,e,q,g&&g.name,{nonTlbTranscludeDirective:t});else{var ja=V();if(G(w)){T=[];var P=V(),kb=V();p(w,function(a,b){var c=\"?\"===a.charAt(0);a=c?a.substring(1):a;P[a]=b;ja[b]=null;kb[b]=c});p(y.contents(),function(a){var b=P[Ba(wa(a))];\n        b?(kb[b]=!0,ja[b]=ja[b]||[],ja[b].push(a)):T.push(a)});p(kb,function(a,b){if(!a)throw fa(\"reqslot\",b);});for(var gc in ja)ja[gc]&&(ja[gc]=ic(Ma,ja[gc],e))}else T=F(ec(b)).contents();y.empty();N=ic(Ma,T,e,void 0,void 0,{needsNewScope:z.$$isolateScope||z.$$newScope});N.$$slots=ja}if(z.template)if(O=!0,$(\"template\",L,z,y),L=z,w=E(z.template)?z.template(y,d):z.template,w=Ea(w),z.replace){g=z;T=bc.test(w)?nd(ha(z.templateNamespace,S(w))):[];b=T[0];if(1!==T.length||1!==b.nodeType)throw fa(\"tplrt\",v,\"\");\n        ka(f,y,b);D={$attr:{}};w=hc(b,[],D);var Y=a.splice(A+1,a.length-(A+1));(C||J)&&aa(w,C,J);a=a.concat(w).concat(Y);da(d,D);D=a.length}else y.html(w);if(z.templateUrl)O=!0,$(\"template\",L,z,y),L=z,z.replace&&(g=z),n=ga(a.splice(A,a.length-A),y,d,f,I&&N,h,k,{controllerDirectives:B,newScopeDirective:J!==z&&J,newIsolateScopeDirective:C,templateDirective:L,nonTlbTranscludeDirective:t}),D=a.length;else if(z.compile)try{Q=z.compile(y,d,N);var Z=z.$$originalDirective||z;E(Q)?m(null,bb(Z,Q),Na,M):Q&&m(bb(Z,Q.pre),\n            bb(Z,Q.post),Na,M)}catch(ea){c(ea,xa(y))}z.terminal&&(n.terminal=!0,q=Math.max(q,z.priority))}n.scope=J&&!0===J.scope;n.transcludeOnThisElement=I;n.templateOnThisElement=O;n.transclude=N;l.hasElementTranscludeDirective=X;return n}function U(a,b,c,d){var e;if(D(b)){var f=b.match(l);b=b.substring(f[0].length);var g=f[1]||f[3],f=\"?\"===f[2];\"^^\"===g?c=c.parent():e=(e=d&&d[b])&&e.instance;if(!e){var h=\"$\"+b+\"Controller\";e=g?c.inheritedData(h):c.data(h)}if(!e&&!f)throw fa(\"ctreq\",b,a);}else if(H(b))for(e=\ng=0,f=b.length;g<f;g++)e[g]=U(a,b[g],c,d);else G(b)&&(e={},p(b,function(b,f){e[f]=U(a,b,c,d)}));return e||null}function ba(a,b,c,d,e,f,g){var h=V(),k;for(k in d){var l=d[k],m={$scope:l===g||l.$$isolateScope?e:f,$element:a,$attrs:b,$transclude:c},n=l.controller;\"@\"===n&&(n=b[l.name]);m=L(n,m,!0,l.controllerAs);h[l.name]=m;a.data(\"$\"+l.name+\"Controller\",m.instance)}return h}function aa(a,b,c){for(var d=0,e=a.length;d<e;d++)a[d]=Wb(a[d],{$$isolateScope:b,$$newScope:c})}function Y(b,c,e,g,h,k,l){if(c===\n        h)return null;var m=null;if(f.hasOwnProperty(c)){h=a.get(c+\"Directive\");for(var n=0,q=h.length;n<q;n++)if(c=h[n],(x(g)||g>c.priority)&&-1!==c.restrict.indexOf(e)){k&&(c=Wb(c,{$$start:k,$$end:l}));if(!c.$$bindings){var J=m=c,r=c.name,B={isolateScope:null,bindToController:null};G(J.scope)&&(!0===J.bindToController?(B.bindToController=d(J.scope,r,!0),B.isolateScope={}):B.isolateScope=d(J.scope,r,!1));G(J.bindToController)&&(B.bindToController=d(J.bindToController,r,!0));if(B.bindToController&&!J.controller)throw fa(\"noctrl\",\n        r);m=m.$$bindings=B;G(m.isolateScope)&&(c.$$isolateBindings=m.isolateScope)}b.push(c);m=c}}return m}function Z(b){if(f.hasOwnProperty(b))for(var c=a.get(b+\"Directive\"),d=0,e=c.length;d<e;d++)if(b=c[d],b.multiElement)return!0;return!1}function da(a,b){var c=b.$attr,d=a.$attr;p(a,function(d,e){\"$\"!==e.charAt(0)&&(b[e]&&b[e]!==d&&(d=d.length?d+((\"style\"===e?\";\":\" \")+b[e]):b[e]),a.$set(e,d,!0,c[e]))});p(b,function(b,e){a.hasOwnProperty(e)||\"$\"===e.charAt(0)||(a[e]=b,\"class\"!==e&&\"style\"!==e&&(d[e]=c[e]))})}\n        function ga(a,b,d,f,g,h,k,l){var m=[],n,q,J=b[0],r=a.shift(),z=Wb(r,{templateUrl:null,transclude:null,replace:null,$$originalDirective:r}),t=E(r.templateUrl)?r.templateUrl(b,d):r.templateUrl,C=r.templateNamespace;b.empty();e(t).then(function(c){var e,B;c=Ea(c);if(r.replace){c=bc.test(c)?nd(ha(C,S(c))):[];e=c[0];if(1!==c.length||1!==e.nodeType)throw fa(\"tplrt\",r.name,t);c={$attr:{}};ka(f,b,e);var L=hc(e,[],c);G(r.scope)&&aa(L,!0);a=L.concat(a);da(d,c)}else e=J,b.html(c);a.unshift(z);n=W(a,e,d,g,b,\n            r,h,k,l);p(f,function(a,c){a===e&&(f[c]=b[0])});for(q=Na(b[0].childNodes,g);m.length;){c=m.shift();B=m.shift();var I=m.shift(),y=m.shift(),L=b[0];if(!c.$$destroyed){if(B!==J){var O=B.className;l.hasElementTranscludeDirective&&r.replace||(L=ec(e));ka(I,F(B),L);Ma(F(L),O)}B=n.transcludeOnThisElement?ja(c,n.transclude,y):y;n(q,c,L,f,B)}}m=null}).catch(function(a){a instanceof Error&&c(a)});return function(a,b,c,d,e){a=e;b.$$destroyed||(m?m.push(b,c,d,a):(n.transcludeOnThisElement&&(a=ja(b,n.transclude,\n                e)),n(q,b,c,d,a)))}}function ea(a,b){var c=b.priority-a.priority;return 0!==c?c:a.name!==b.name?a.name<b.name?-1:1:a.index-b.index}function $(a,b,c,d){function e(a){return a?\" (module: \"+a+\")\":\"\"}if(b)throw fa(\"multidir\",b.name,e(b.$$moduleName),c.name,e(c.$$moduleName),a,xa(d));}function la(a,c){var d=b(c,!0);d&&a.push({priority:0,compile:function(a){a=a.parent();var b=!!a.length;b&&ca.$$addBindingClass(a);return function(a,c){var e=c.parent();b||ca.$$addBindingClass(e);ca.$$addBindingInfo(e,d.expressions);\n            a.$watch(d,function(a){c[0].nodeValue=a})}}})}function ha(a,b){a=P(a||\"html\");switch(a){case \"svg\":case \"math\":var c=w.document.createElement(\"div\");c.innerHTML=\"<\"+a+\">\"+b+\"</\"+a+\">\";return c.childNodes[0].childNodes;default:return b}}function oa(a,b){if(\"srcdoc\"===b)return z.HTML;var c=wa(a);if(\"src\"===b||\"ngSrc\"===b){if(-1===[\"img\",\"video\",\"audio\",\"source\",\"track\"].indexOf(c))return z.RESOURCE_URL}else if(\"xlinkHref\"===b||\"form\"===c&&\"action\"===b||\"link\"===c&&\"href\"===b)return z.RESOURCE_URL}function qa(a,\nc,d,e,f){var g=oa(a,e),h=k[e]||f,l=b(d,!f,g,h);if(l){if(\"multiple\"===e&&\"select\"===wa(a))throw fa(\"selmulti\",xa(a));if(m.test(e))throw fa(\"nodomevents\");c.push({priority:100,compile:function(){return{pre:function(a,c,f){c=f.$$observers||(f.$$observers=V());var k=f[e];k!==d&&(l=k&&b(k,!0,g,h),d=k);l&&(f[e]=l(a),(c[e]||(c[e]=[])).$$inter=!0,(f.$$observers&&f.$$observers[e].$$scope||a).$watch(l,function(a,b){\"class\"===e&&a!==b?f.$updateClass(a,b):f.$set(e,a)}))}}}})}}function ka(a,b,c){var d=b[0],e=\n            b.length,f=d.parentNode,g,h;if(a)for(g=0,h=a.length;g<h;g++)if(a[g]===d){a[g++]=c;h=g+e-1;for(var k=a.length;g<k;g++,h++)h<k?a[g]=a[h]:delete a[g];a.length-=e-1;a.context===d&&(a.context=c);break}f&&f.replaceChild(c,d);a=w.document.createDocumentFragment();for(g=0;g<e;g++)a.appendChild(b[g]);F.hasData(d)&&(F.data(c,F.data(d)),F(d).off(\"$destroy\"));F.cleanData(a.querySelectorAll(\"*\"));for(g=1;g<e;g++)delete b[g];b[0]=c;b.length=1}function ra(a,b){return R(function(){return a.apply(null,arguments)},\n            a,b)}function sa(a,b,d,e,f,g){try{a(b,d,e,f,g)}catch(h){c(h,xa(d))}}function na(a,c,d,e,f){function g(b,c,e){!E(d.$onChanges)||c===e||c!==c&&e!==e||(ia||(a.$$postDigest(T),ia=[]),m||(m={},ia.push(h)),m[b]&&(e=m[b].previousValue),m[b]=new Jb(e,c))}function h(){d.$onChanges(m);m=void 0}var k=[],l={},m;p(e,function(e,h){var m=e.attrName,q=e.optional,r,B,t,z;switch(e.mode){case \"@\":q||ua.call(c,m)||(d[h]=c[m]=void 0);q=c.$observe(m,function(a){if(D(a)||Ha(a))g(h,a,d[h]),d[h]=a});c.$$observers[m].$$scope=\n            a;r=c[m];D(r)?d[h]=b(r)(a):Ha(r)&&(d[h]=r);l[h]=new Jb(jc,d[h]);k.push(q);break;case \"=\":if(!ua.call(c,m)){if(q)break;c[m]=void 0}if(q&&!c[m])break;B=n(c[m]);z=B.literal?pa:function(a,b){return a===b||a!==a&&b!==b};t=B.assign||function(){r=d[h]=B(a);throw fa(\"nonassign\",c[m],m,f.name);};r=d[h]=B(a);q=function(b){z(b,d[h])||(z(b,r)?t(a,b=d[h]):d[h]=b);return r=b};q.$stateful=!0;q=e.collection?a.$watchCollection(c[m],q):a.$watch(n(c[m],q),null,B.literal);k.push(q);break;case \"<\":if(!ua.call(c,m)){if(q)break;\n            c[m]=void 0}if(q&&!c[m])break;B=n(c[m]);var C=B.literal,L=d[h]=B(a);l[h]=new Jb(jc,d[h]);q=a.$watch(B,function(a,b){if(b===a){if(b===L||C&&pa(b,L))return;b=L}g(h,a,b);d[h]=a},C);k.push(q);break;case \"&\":B=c.hasOwnProperty(m)?n(c[m]):A;if(B===A&&q)break;d[h]=function(b){return B(a,b)}}});return{initialChanges:l,removeWatches:k.length&&function(){for(var a=0,b=k.length;a<b;++a)k[a]()}}}var Ca=/^\\w/,ta=w.document.createElement(\"div\"),Fa=N,Ga=t,ya=I,ia;s.prototype={$normalize:Ba,$addClass:function(a){a&&\n        0<a.length&&O.addClass(this.$$element,a)},$removeClass:function(a){a&&0<a.length&&O.removeClass(this.$$element,a)},$updateClass:function(a,b){var c=od(a,b);c&&c.length&&O.addClass(this.$$element,c);(c=od(b,a))&&c.length&&O.removeClass(this.$$element,c)},$set:function(a,b,d,e){var f=gd(this.$$element[0],a),g=pd[a],h=a;f?(this.$$element.prop(a,b),e=f):g&&(this[g]=b,h=g);this[a]=b;e?this.$attr[a]=e:(e=this.$attr[a])||(this.$attr[a]=e=Qc(a,\"-\"));f=wa(this.$$element);if(\"a\"===f&&(\"href\"===a||\"xlinkHref\"===\n            a)||\"img\"===f&&\"src\"===a)this[a]=b=X(b,\"src\"===a);else if(\"img\"===f&&\"srcset\"===a&&u(b)){for(var f=\"\",g=S(b),k=/(\\s+\\d+x\\s*,|\\s+\\d+w\\s*,|\\s+,|,\\s+)/,k=/\\s/.test(g)?k:/(,)/,g=g.split(k),k=Math.floor(g.length/2),l=0;l<k;l++)var m=2*l,f=f+X(S(g[m]),!0),f=f+(\" \"+S(g[m+1]));g=S(g[2*l]).split(/\\s/);f+=X(S(g[0]),!0);2===g.length&&(f+=\" \"+S(g[1]));this[a]=b=f}!1!==d&&(null===b||x(b)?this.$$element.removeAttr(e):Ca.test(e)?this.$$element.attr(e,b):Q(this.$$element[0],e,b));(a=this.$$observers)&&p(a[h],function(a){try{a(b)}catch(d){c(d)}})},\n            $observe:function(a,b){var c=this,d=c.$$observers||(c.$$observers=V()),e=d[a]||(d[a]=[]);e.push(b);C.$evalAsync(function(){e.$$inter||!c.hasOwnProperty(a)||x(c[a])||b(c[a])});return function(){$a(e,b)}}};var Aa=b.startSymbol(),Da=b.endSymbol(),Ea=\"{{\"===Aa&&\"}}\"===Da?Ya:function(a){return a.replace(/\\{\\{/g,Aa).replace(/}}/g,Da)},Ja=/^ngAttr[A-Z]/,Ka=/^(.+)Start$/;ca.$$addBindingInfo=q?function(a,b){var c=a.data(\"$binding\")||[];H(b)?c=c.concat(b):c.push(b);a.data(\"$binding\",c)}:A;ca.$$addBindingClass=\n            q?function(a){Ma(a,\"ng-binding\")}:A;ca.$$addScopeInfo=q?function(a,b,c,d){a.data(c?d?\"$isolateScopeNoTemplate\":\"$isolateScope\":\"$scope\",b)}:A;ca.$$addScopeClass=q?function(a,b){Ma(a,b?\"ng-isolate-scope\":\"ng-scope\")}:A;ca.$$createComment=function(a,b){var c=\"\";q&&(c=\" \"+(a||\"\")+\": \",b&&(c+=b+\" \"));return w.document.createComment(c)};return ca}]}function Jb(a,b){this.previousValue=a;this.currentValue=b}function Ba(a){return a.replace(kd,\"\").replace(rg,gb)}function od(a,b){var d=\"\",c=a.split(/\\s+/),\n        e=b.split(/\\s+/),f=0;a:for(;f<c.length;f++){for(var g=c[f],h=0;h<e.length;h++)if(g===e[h])continue a;d+=(0<d.length?\" \":\"\")+g}return d}function nd(a){a=F(a);var b=a.length;if(1>=b)return a;for(;b--;){var d=a[b];(8===d.nodeType||d.nodeType===Ia&&\"\"===d.nodeValue.trim())&&sg.call(a,b,1)}return a}function qg(a,b){if(b&&D(b))return b;if(D(a)){var d=qd.exec(a);if(d)return d[3]}}function wf(){var a={},b=!1;this.has=function(b){return a.hasOwnProperty(b)};this.register=function(b,c){Ka(b,\"controller\");G(b)?\n        R(a,b):a[b]=c};this.allowGlobals=function(){b=!0};this.$get=[\"$injector\",\"$window\",function(d,c){function e(a,b,c,d){if(!a||!G(a.$scope))throw M(\"$controller\")(\"noscp\",d,b);a.$scope[b]=c}return function(f,g,h,k){var l,m,n;h=!0===h;k&&D(k)&&(n=k);if(D(f)){k=f.match(qd);if(!k)throw rd(\"ctrlfmt\",f);m=k[1];n=n||k[3];f=a.hasOwnProperty(m)?a[m]:Sc(g.$scope,m,!0)||(b?Sc(c,m,!0):void 0);if(!f)throw rd(\"ctrlreg\",m);tb(f,m,!0)}if(h)return h=(H(f)?f[f.length-1]:f).prototype,l=Object.create(h||null),n&&e(g,n,\n        l,m||f.name),R(function(){var a=d.invoke(f,l,g,m);a!==l&&(G(a)||E(a))&&(l=a,n&&e(g,n,l,m||f.name));return l},{instance:l,identifier:n});l=d.instantiate(f,g,m);n&&e(g,n,l,m||f.name);return l}}]}function xf(){this.$get=[\"$window\",function(a){return F(a.document)}]}function yf(){this.$get=[\"$document\",\"$rootScope\",function(a,b){function d(){e=c.hidden}var c=a[0],e=c&&c.hidden;a.on(\"visibilitychange\",d);b.$on(\"$destroy\",function(){a.off(\"visibilitychange\",d)});return function(){return e}}]}function zf(){this.$get=\n        [\"$log\",function(a){return function(b,d){a.error.apply(a,arguments)}}]}function kc(a){return G(a)?ga(a)?a.toISOString():cb(a):a}function Ef(){this.$get=function(){return function(a){if(!a)return\"\";var b=[];Hc(a,function(a,c){null===a||x(a)||(H(a)?p(a,function(a){b.push($(c)+\"=\"+$(kc(a)))}):b.push($(c)+\"=\"+$(kc(a))))});return b.join(\"&\")}}}function Ff(){this.$get=function(){return function(a){function b(a,e,f){null===a||x(a)||(H(a)?p(a,function(a,c){b(a,e+\"[\"+(G(a)?c:\"\")+\"]\")}):G(a)&&!ga(a)?Hc(a,function(a,\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     c){b(a,e+(f?\"\":\"[\")+c+(f?\"\":\"]\"))}):d.push($(e)+\"=\"+$(kc(a))))}if(!a)return\"\";var d=[];b(a,\"\",!0);return d.join(\"&\")}}}function lc(a,b){if(D(a)){var d=a.replace(tg,\"\").trim();if(d){var c=b(\"Content-Type\");(c=c&&0===c.indexOf(sd))||(c=(c=d.match(ug))&&vg[c[0]].test(d));c&&(a=Lc(d))}}return a}function td(a){var b=V(),d;D(a)?p(a.split(\"\\n\"),function(a){d=a.indexOf(\":\");var e=P(S(a.substr(0,d)));a=S(a.substr(d+1));e&&(b[e]=b[e]?b[e]+\", \"+a:a)}):G(a)&&p(a,function(a,d){var f=P(d),g=S(a);f&&(b[f]=b[f]?\n            b[f]+\", \"+g:g)});return b}function ud(a){var b;return function(d){b||(b=td(a));return d?(d=b[P(d)],void 0===d&&(d=null),d):b}}function vd(a,b,d,c){if(E(c))return c(a,b,d);p(c,function(c){a=c(a,b,d)});return a}function Df(){var a=this.defaults={transformResponse:[lc],transformRequest:[function(a){return G(a)&&\"[object File]\"!==ma.call(a)&&\"[object Blob]\"!==ma.call(a)&&\"[object FormData]\"!==ma.call(a)?cb(a):a}],headers:{common:{Accept:\"application/json, text/plain, */*\"},post:qa(mc),put:qa(mc),patch:qa(mc)},\n        xsrfCookieName:\"XSRF-TOKEN\",xsrfHeaderName:\"X-XSRF-TOKEN\",paramSerializer:\"$httpParamSerializer\",jsonpCallbackParam:\"callback\"},b=!1;this.useApplyAsync=function(a){return u(a)?(b=!!a,this):b};var d=this.interceptors=[];this.$get=[\"$browser\",\"$httpBackend\",\"$$cookieReader\",\"$cacheFactory\",\"$rootScope\",\"$q\",\"$injector\",\"$sce\",function(c,e,f,g,h,k,l,m){function n(b){function d(a,b){for(var c=0,e=b.length;c<e;){var f=b[c++],g=b[c++];a=a.then(f,g)}b.length=0;return a}function e(a,b){var c,d={};p(a,function(a,\ne){E(a)?(c=a(b),null!=c&&(d[e]=c)):d[e]=a});return d}function f(a){var b=R({},a);b.data=vd(a.data,a.headers,a.status,g.transformResponse);a=a.status;return 200<=a&&300>a?b:k.reject(b)}if(!G(b))throw M(\"$http\")(\"badreq\",b);if(!D(m.valueOf(b.url)))throw M(\"$http\")(\"badreq\",b.url);var g=R({method:\"get\",transformRequest:a.transformRequest,transformResponse:a.transformResponse,paramSerializer:a.paramSerializer,jsonpCallbackParam:a.jsonpCallbackParam},b);g.headers=function(b){var c=a.headers,d=R({},b.headers),\n        f,g,h,c=R({},c.common,c[P(b.method)]);a:for(f in c){g=P(f);for(h in d)if(P(h)===g)continue a;d[f]=c[f]}return e(d,qa(b))}(b);g.method=vb(g.method);g.paramSerializer=D(g.paramSerializer)?l.get(g.paramSerializer):g.paramSerializer;c.$$incOutstandingRequestCount();var h=[],n=[];b=k.resolve(g);p(t,function(a){(a.request||a.requestError)&&h.unshift(a.request,a.requestError);(a.response||a.responseError)&&n.push(a.response,a.responseError)});b=d(b,h);b=b.then(function(b){var c=b.headers,d=vd(b.data,ud(c),\n        void 0,b.transformRequest);x(d)&&p(c,function(a,b){\"content-type\"===P(b)&&delete c[b]});x(b.withCredentials)&&!x(a.withCredentials)&&(b.withCredentials=a.withCredentials);return q(b,d).then(f,f)});b=d(b,n);return b=b.finally(function(){c.$$completeOutstandingRequest(A)})}function q(c,d){function g(a){if(a){var c={};p(a,function(a,d){c[d]=function(c){function d(){a(c)}b?h.$applyAsync(d):h.$$phase?d():h.$apply(d)}});return c}}function l(a,c,d,e){function f(){q(c,a,d,e)}O&&(200<=a&&300>a?O.put(Q,[a,\n            c,td(d),e]):O.remove(Q));b?h.$applyAsync(f):(f(),h.$$phase||h.$apply())}function q(a,b,d,e){b=-1<=b?b:0;(200<=b&&300>b?C.resolve:C.reject)({data:a,status:b,headers:ud(d),config:c,statusText:e})}function J(a){q(a.data,a.status,qa(a.headers()),a.statusText)}function t(){var a=n.pendingRequests.indexOf(c);-1!==a&&n.pendingRequests.splice(a,1)}var C=k.defer(),z=C.promise,O,X,T=c.headers,s=\"jsonp\"===P(c.method),Q=c.url;s?Q=m.getTrustedResourceUrl(Q):D(Q)||(Q=m.valueOf(Q));Q=r(Q,c.paramSerializer(c.params));\n        s&&(Q=I(Q,c.jsonpCallbackParam));n.pendingRequests.push(c);z.then(t,t);!c.cache&&!a.cache||!1===c.cache||\"GET\"!==c.method&&\"JSONP\"!==c.method||(O=G(c.cache)?c.cache:G(a.cache)?a.cache:N);O&&(X=O.get(Q),u(X)?X&&E(X.then)?X.then(J,J):H(X)?q(X[1],X[0],qa(X[2]),X[3]):q(X,200,{},\"OK\"):O.put(Q,z));x(X)&&((X=wd(c.url)?f()[c.xsrfCookieName||a.xsrfCookieName]:void 0)&&(T[c.xsrfHeaderName||a.xsrfHeaderName]=X),e(c.method,Q,d,l,T,c.timeout,c.withCredentials,c.responseType,g(c.eventHandlers),g(c.uploadEventHandlers)));\n        return z}function r(a,b){0<b.length&&(a+=(-1===a.indexOf(\"?\")?\"?\":\"&\")+b);return a}function I(a,b){if(/[&?][^=]+=JSON_CALLBACK/.test(a))throw xd(\"badjsonp\",a);if((new RegExp(\"[&?]\"+b+\"=\")).test(a))throw xd(\"badjsonp\",b,a);return a+=(-1===a.indexOf(\"?\")?\"?\":\"&\")+b+\"=JSON_CALLBACK\"}var N=g(\"$http\");a.paramSerializer=D(a.paramSerializer)?l.get(a.paramSerializer):a.paramSerializer;var t=[];p(d,function(a){t.unshift(D(a)?l.get(a):l.invoke(a))});n.pendingRequests=[];(function(a){p(arguments,function(a){n[a]=\n        function(b,c){return n(R({},c||{},{method:a,url:b}))}})})(\"get\",\"delete\",\"head\",\"jsonp\");(function(a){p(arguments,function(a){n[a]=function(b,c,d){return n(R({},d||{},{method:a,url:b,data:c}))}})})(\"post\",\"put\",\"patch\");n.defaults=a;return n}]}function Hf(){this.$get=function(){return function(){return new w.XMLHttpRequest}}}function Gf(){this.$get=[\"$browser\",\"$jsonpCallbacks\",\"$document\",\"$xhrFactory\",function(a,b,d,c){return wg(a,c,a.defer,b,d[0])}]}function wg(a,b,d,c,e){function f(a,b,d){a=a.replace(\"JSON_CALLBACK\",\n        b);var f=e.createElement(\"script\"),m=null;f.type=\"text/javascript\";f.src=a;f.async=!0;m=function(a){f.removeEventListener(\"load\",m);f.removeEventListener(\"error\",m);e.body.removeChild(f);f=null;var g=-1,r=\"unknown\";a&&(\"load\"!==a.type||c.wasCalled(b)||(a={type:\"error\"}),r=a.type,g=\"error\"===a.type?404:200);d&&d(g,r)};f.addEventListener(\"load\",m);f.addEventListener(\"error\",m);e.body.appendChild(f);return m}return function(e,h,k,l,m,n,q,r,I,N){function t(){y&&y();v&&v.abort()}h=h||a.url();if(\"jsonp\"===\n        P(e))var K=c.createCallback(h),y=f(h,K,function(a,b){var e=200===a&&c.getResponse(K);u(B)&&d.cancel(B);y=v=null;l(a,e,\"\",b);c.removeCallback(K)});else{var v=b(e,h);v.open(e,h,!0);p(m,function(a,b){u(a)&&v.setRequestHeader(b,a)});v.onload=function(){var a=v.statusText||\"\",b=\"response\"in v?v.response:v.responseText,c=1223===v.status?204:v.status;0===c&&(c=b?200:\"file\"===Ca(h).protocol?404:0);var e=v.getAllResponseHeaders();u(B)&&d.cancel(B);y=v=null;l(c,b,e,a)};e=function(){u(B)&&d.cancel(B);y=v=null;\n        l(-1,null,null,\"\")};v.onerror=e;v.onabort=e;v.ontimeout=e;p(I,function(a,b){v.addEventListener(b,a)});p(N,function(a,b){v.upload.addEventListener(b,a)});q&&(v.withCredentials=!0);if(r)try{v.responseType=r}catch(s){if(\"json\"!==r)throw s;}v.send(x(k)?null:k)}if(0<n)var B=d(t,n);else n&&E(n.then)&&n.then(t)}}function Bf(){var a=\"{{\",b=\"}}\";this.startSymbol=function(b){return b?(a=b,this):a};this.endSymbol=function(a){return a?(b=a,this):b};this.$get=[\"$parse\",\"$exceptionHandler\",\"$sce\",function(d,c,\ne){function f(a){return\"\\\\\\\\\\\\\"+a}function g(c){return c.replace(n,a).replace(q,b)}function h(a,b,c,d){var e=a.$watch(function(a){e();return d(a)},b,c);return e}function k(f,k,n,q){function K(a){try{var b=a;a=n?e.getTrusted(n,b):e.valueOf(b);return q&&!u(a)?a:$b(a)}catch(d){c(Da.interr(f,d))}}if(!f.length||-1===f.indexOf(a)){var y;k||(k=g(f),y=la(k),y.exp=f,y.expressions=[],y.$$watchDelegate=h);return y}q=!!q;var v,p,B=0,J=[],L=[];y=f.length;for(var C=[],z=[];B<y;)if(-1!==(v=f.indexOf(a,B))&&-1!==\n        (p=f.indexOf(b,v+l)))B!==v&&C.push(g(f.substring(B,v))),B=f.substring(v+l,p),J.push(B),L.push(d(B,K)),B=p+m,z.push(C.length),C.push(\"\");else{B!==y&&C.push(g(f.substring(B)));break}n&&1<C.length&&Da.throwNoconcat(f);if(!k||J.length){var O=function(a){for(var b=0,c=J.length;b<c;b++){if(q&&x(a[b]))return;C[z[b]]=a[b]}return C.join(\"\")};return R(function(a){var b=0,d=J.length,e=Array(d);try{for(;b<d;b++)e[b]=L[b](a);return O(e)}catch(g){c(Da.interr(f,g))}},{exp:f,expressions:J,$$watchDelegate:function(a,\nb){var c;return a.$watchGroup(L,function(d,e){var f=O(d);E(b)&&b.call(this,f,d!==e?c:f,a);c=f})}})}}var l=a.length,m=b.length,n=new RegExp(a.replace(/./g,f),\"g\"),q=new RegExp(b.replace(/./g,f),\"g\");k.startSymbol=function(){return a};k.endSymbol=function(){return b};return k}]}function Cf(){this.$get=[\"$rootScope\",\"$window\",\"$q\",\"$$q\",\"$browser\",function(a,b,d,c,e){function f(f,k,l,m){function n(){q?f.apply(null,r):f(t)}var q=4<arguments.length,r=q?va.call(arguments,4):[],I=b.setInterval,p=b.clearInterval,\n        t=0,K=u(m)&&!m,y=(K?c:d).defer(),v=y.promise;l=u(l)?l:0;v.$$intervalId=I(function(){K?e.defer(n):a.$evalAsync(n);y.notify(t++);0<l&&t>=l&&(y.resolve(t),p(v.$$intervalId),delete g[v.$$intervalId]);K||a.$apply()},k);g[v.$$intervalId]=y;return v}var g={};f.cancel=function(a){return a&&a.$$intervalId in g?(g[a.$$intervalId].promise.catch(A),g[a.$$intervalId].reject(\"canceled\"),b.clearInterval(a.$$intervalId),delete g[a.$$intervalId],!0):!1};return f}]}function nc(a){a=a.split(\"/\");for(var b=a.length;b--;)a[b]=\n        db(a[b]);return a.join(\"/\")}function yd(a,b){var d=Ca(a);b.$$protocol=d.protocol;b.$$host=d.hostname;b.$$port=Z(d.port)||xg[d.protocol]||null}function zd(a,b){if(yg.test(a))throw lb(\"badpath\",a);var d=\"/\"!==a.charAt(0);d&&(a=\"/\"+a);var c=Ca(a);b.$$path=decodeURIComponent(d&&\"/\"===c.pathname.charAt(0)?c.pathname.substring(1):c.pathname);b.$$search=Oc(c.search);b.$$hash=decodeURIComponent(c.hash);b.$$path&&\"/\"!==b.$$path.charAt(0)&&(b.$$path=\"/\"+b.$$path)}function oc(a,b){return a.slice(0,b.length)===\n        b}function ka(a,b){if(oc(b,a))return b.substr(a.length)}function Aa(a){var b=a.indexOf(\"#\");return-1===b?a:a.substr(0,b)}function mb(a){return a.replace(/(#.+)|#$/,\"$1\")}function pc(a,b,d){this.$$html5=!0;d=d||\"\";yd(a,this);this.$$parse=function(a){var d=ka(b,a);if(!D(d))throw lb(\"ipthprfx\",a,b);zd(d,this);this.$$path||(this.$$path=\"/\");this.$$compose()};this.$$compose=function(){var a=Zb(this.$$search),d=this.$$hash?\"#\"+db(this.$$hash):\"\";this.$$url=nc(this.$$path)+(a?\"?\"+a:\"\")+d;this.$$absUrl=b+\n        this.$$url.substr(1);this.$$urlUpdatedByLocation=!0};this.$$parseLinkUrl=function(c,e){if(e&&\"#\"===e[0])return this.hash(e.slice(1)),!0;var f,g;u(f=ka(a,c))?(g=f,g=d&&u(f=ka(d,f))?b+(ka(\"/\",f)||f):a+g):u(f=ka(b,c))?g=b+f:b===c+\"/\"&&(g=b);g&&this.$$parse(g);return!!g}}function qc(a,b,d){yd(a,this);this.$$parse=function(c){var e=ka(a,c)||ka(b,c),f;x(e)||\"#\"!==e.charAt(0)?this.$$html5?f=e:(f=\"\",x(e)&&(a=c,this.replace())):(f=ka(d,e),x(f)&&(f=e));zd(f,this);c=this.$$path;var e=a,g=/^\\/[A-Z]:(\\/.*)/;oc(f,\n        e)&&(f=f.replace(e,\"\"));g.exec(f)||(c=(f=g.exec(c))?f[1]:c);this.$$path=c;this.$$compose()};this.$$compose=function(){var b=Zb(this.$$search),e=this.$$hash?\"#\"+db(this.$$hash):\"\";this.$$url=nc(this.$$path)+(b?\"?\"+b:\"\")+e;this.$$absUrl=a+(this.$$url?d+this.$$url:\"\");this.$$urlUpdatedByLocation=!0};this.$$parseLinkUrl=function(b,d){return Aa(a)===Aa(b)?(this.$$parse(b),!0):!1}}function Ad(a,b,d){this.$$html5=!0;qc.apply(this,arguments);this.$$parseLinkUrl=function(c,e){if(e&&\"#\"===e[0])return this.hash(e.slice(1)),\n        !0;var f,g;a===Aa(c)?f=c:(g=ka(b,c))?f=a+d+g:b===c+\"/\"&&(f=b);f&&this.$$parse(f);return!!f};this.$$compose=function(){var b=Zb(this.$$search),e=this.$$hash?\"#\"+db(this.$$hash):\"\";this.$$url=nc(this.$$path)+(b?\"?\"+b:\"\")+e;this.$$absUrl=a+d+this.$$url;this.$$urlUpdatedByLocation=!0}}function Kb(a){return function(){return this[a]}}function Bd(a,b){return function(d){if(x(d))return this[a];this[a]=b(d);this.$$compose();return this}}function Jf(){var a=\"!\",b={enabled:!1,requireBase:!0,rewriteLinks:!0};\n        this.hashPrefix=function(b){return u(b)?(a=b,this):a};this.html5Mode=function(a){if(Ha(a))return b.enabled=a,this;if(G(a)){Ha(a.enabled)&&(b.enabled=a.enabled);Ha(a.requireBase)&&(b.requireBase=a.requireBase);if(Ha(a.rewriteLinks)||D(a.rewriteLinks))b.rewriteLinks=a.rewriteLinks;return this}return b};this.$get=[\"$rootScope\",\"$browser\",\"$sniffer\",\"$rootElement\",\"$window\",function(d,c,e,f,g){function h(a,b,d){var e=l.url(),f=l.$$state;try{c.url(a,b,d),l.$$state=c.state()}catch(g){throw l.url(e),l.$$state=\n            f,g;}}function k(a,b){d.$broadcast(\"$locationChangeSuccess\",l.absUrl(),a,l.$$state,b)}var l,m;m=c.baseHref();var n=c.url(),q;if(b.enabled){if(!m&&b.requireBase)throw lb(\"nobase\");q=n.substring(0,n.indexOf(\"/\",n.indexOf(\"//\")+2))+(m||\"/\");m=e.history?pc:Ad}else q=Aa(n),m=qc;var r=q.substr(0,Aa(q).lastIndexOf(\"/\")+1);l=new m(q,r,\"#\"+a);l.$$parseLinkUrl(n,n);l.$$state=c.state();var I=/^\\s*(javascript|mailto):/i;f.on(\"click\",function(a){var e=b.rewriteLinks;if(e&&!a.ctrlKey&&!a.metaKey&&!a.shiftKey&&\n            2!==a.which&&2!==a.button){for(var h=F(a.target);\"a\"!==wa(h[0]);)if(h[0]===f[0]||!(h=h.parent())[0])return;if(!D(e)||!x(h.attr(e))){var e=h.prop(\"href\"),k=h.attr(\"href\")||h.attr(\"xlink:href\");G(e)&&\"[object SVGAnimatedString]\"===e.toString()&&(e=Ca(e.animVal).href);I.test(e)||!e||h.attr(\"target\")||a.isDefaultPrevented()||!l.$$parseLinkUrl(e,k)||(a.preventDefault(),l.absUrl()!==c.url()&&(d.$apply(),g.angular[\"ff-684208-preventDefault\"]=!0))}}});mb(l.absUrl())!==mb(n)&&c.url(l.absUrl(),!0);var p=!0;\n            c.onUrlChange(function(a,b){oc(a,r)?(d.$evalAsync(function(){var c=l.absUrl(),e=l.$$state,f;a=mb(a);l.$$parse(a);l.$$state=b;f=d.$broadcast(\"$locationChangeStart\",a,c,b,e).defaultPrevented;l.absUrl()===a&&(f?(l.$$parse(c),l.$$state=e,h(c,!1,e)):(p=!1,k(c,e)))}),d.$$phase||d.$digest()):g.location.href=a});d.$watch(function(){if(p||l.$$urlUpdatedByLocation){l.$$urlUpdatedByLocation=!1;var a=mb(c.url()),b=mb(l.absUrl()),f=c.state(),g=l.$$replace,m=a!==b||l.$$html5&&e.history&&f!==l.$$state;if(p||m)p=\n                !1,d.$evalAsync(function(){var b=l.absUrl(),c=d.$broadcast(\"$locationChangeStart\",b,a,l.$$state,f).defaultPrevented;l.absUrl()===b&&(c?(l.$$parse(a),l.$$state=f):(m&&h(b,g,f===l.$$state?null:l.$$state),k(a,f)))})}l.$$replace=!1});return l}]}function Kf(){var a=!0,b=this;this.debugEnabled=function(b){return u(b)?(a=b,this):a};this.$get=[\"$window\",function(d){function c(a){a instanceof Error&&(a.stack&&f?a=a.message&&-1===a.stack.indexOf(a.message)?\"Error: \"+a.message+\"\\n\"+a.stack:a.stack:a.sourceURL&&\n        (a=a.message+\"\\n\"+a.sourceURL+\":\"+a.line));return a}function e(a){var b=d.console||{},e=b[a]||b.log||A;a=!1;try{a=!!e.apply}catch(f){}return a?function(){var a=[];p(arguments,function(b){a.push(c(b))});return e.apply(b,a)}:function(a,b){e(a,null==b?\"\":b)}}var f=za||/\\bEdge\\//.test(d.navigator&&d.navigator.userAgent);return{log:e(\"log\"),info:e(\"info\"),warn:e(\"warn\"),error:e(\"error\"),debug:function(){var c=e(\"debug\");return function(){a&&c.apply(b,arguments)}}()}}]}function zg(a){return a+\"\"}function Ag(a,\nb){return\"undefined\"!==typeof a?a:b}function Cd(a,b){return\"undefined\"===typeof a?b:\"undefined\"===typeof b?a:a+b}function U(a,b){var d,c,e;switch(a.type){case s.Program:d=!0;p(a.body,function(a){U(a.expression,b);d=d&&a.expression.constant});a.constant=d;break;case s.Literal:a.constant=!0;a.toWatch=[];break;case s.UnaryExpression:U(a.argument,b);a.constant=a.argument.constant;a.toWatch=a.argument.toWatch;break;case s.BinaryExpression:U(a.left,b);U(a.right,b);a.constant=a.left.constant&&a.right.constant;\n        a.toWatch=a.left.toWatch.concat(a.right.toWatch);break;case s.LogicalExpression:U(a.left,b);U(a.right,b);a.constant=a.left.constant&&a.right.constant;a.toWatch=a.constant?[]:[a];break;case s.ConditionalExpression:U(a.test,b);U(a.alternate,b);U(a.consequent,b);a.constant=a.test.constant&&a.alternate.constant&&a.consequent.constant;a.toWatch=a.constant?[]:[a];break;case s.Identifier:a.constant=!1;a.toWatch=[a];break;case s.MemberExpression:U(a.object,b);a.computed&&U(a.property,b);a.constant=a.object.constant&&\n        (!a.computed||a.property.constant);a.toWatch=[a];break;case s.CallExpression:d=e=a.filter?!b(a.callee.name).$stateful:!1;c=[];p(a.arguments,function(a){U(a,b);d=d&&a.constant;a.constant||c.push.apply(c,a.toWatch)});a.constant=d;a.toWatch=e?c:[a];break;case s.AssignmentExpression:U(a.left,b);U(a.right,b);a.constant=a.left.constant&&a.right.constant;a.toWatch=[a];break;case s.ArrayExpression:d=!0;c=[];p(a.elements,function(a){U(a,b);d=d&&a.constant;a.constant||c.push.apply(c,a.toWatch)});a.constant=\n        d;a.toWatch=c;break;case s.ObjectExpression:d=!0;c=[];p(a.properties,function(a){U(a.value,b);d=d&&a.value.constant&&!a.computed;a.value.constant||c.push.apply(c,a.value.toWatch);a.computed&&(U(a.key,b),a.key.constant||c.push.apply(c,a.key.toWatch))});a.constant=d;a.toWatch=c;break;case s.ThisExpression:a.constant=!1;a.toWatch=[];break;case s.LocalsExpression:a.constant=!1,a.toWatch=[]}}function Dd(a){if(1===a.length){a=a[0].expression;var b=a.toWatch;return 1!==b.length?b:b[0]!==a?b:void 0}}function Ed(a){return a.type===\n        s.Identifier||a.type===s.MemberExpression}function Fd(a){if(1===a.body.length&&Ed(a.body[0].expression))return{type:s.AssignmentExpression,left:a.body[0].expression,right:{type:s.NGValueParameter},operator:\"=\"}}function Gd(a){return 0===a.body.length||1===a.body.length&&(a.body[0].expression.type===s.Literal||a.body[0].expression.type===s.ArrayExpression||a.body[0].expression.type===s.ObjectExpression)}function Hd(a,b){this.astBuilder=a;this.$filter=b}function Id(a,b){this.astBuilder=a;this.$filter=\n        b}function rc(a){return E(a.valueOf)?a.valueOf():Bg.call(a)}function Lf(){var a=V(),b={\"true\":!0,\"false\":!1,\"null\":null,undefined:void 0},d,c;this.addLiteral=function(a,c){b[a]=c};this.setIdentifierFns=function(a,b){d=a;c=b;return this};this.$get=[\"$filter\",function(e){function f(a,b,c){return null==a||null==b?a===b:\"object\"!==typeof a||c||(a=rc(a),\"object\"!==typeof a)?a===b||a!==a&&b!==b:!1}function g(a,b,c,d,e){var g=d.inputs,h;if(1===g.length){var k=f,g=g[0];return a.$watch(function(a){var b=g(a);\n        f(b,k,d.literal)||(h=d(a,void 0,void 0,[b]),k=b&&rc(b));return h},b,c,e)}for(var l=[],m=[],n=0,L=g.length;n<L;n++)l[n]=f,m[n]=null;return a.$watch(function(a){for(var b=!1,c=0,e=g.length;c<e;c++){var k=g[c](a);if(b||(b=!f(k,l[c],d.literal)))m[c]=k,l[c]=k&&rc(k)}b&&(h=d(a,void 0,void 0,m));return h},b,c,e)}function h(a,b,c,d,e){function f(a){return d(a)}function h(a,c,d){l=a;E(b)&&b(a,c,d);u(a)&&d.$$postDigest(function(){u(l)&&k()})}var k,l;return k=d.inputs?g(a,h,c,d,e):a.$watch(f,h,c)}function k(a,\nb,c,d){function e(a){var b=!0;p(a,function(a){u(a)||(b=!1)});return b}var f,g;return f=a.$watch(function(a){return d(a)},function(a,c,d){g=a;E(b)&&b(a,c,d);e(a)&&d.$$postDigest(function(){e(g)&&f()})},c)}function l(a,b,c,d){var e=a.$watch(function(a){e();return d(a)},b,c);return e}function m(a,b){if(!b)return a;var c=a.$$watchDelegate,d=!1,c=c!==k&&c!==h?function(c,e,f,g){f=d&&g?g[0]:a(c,e,f,g);return b(f,c,e)}:function(c,d,e,f){e=a(c,d,e,f);c=b(e,c,d);return u(e)?c:e},d=!a.inputs;a.$$watchDelegate&&\n    a.$$watchDelegate!==g?(c.$$watchDelegate=a.$$watchDelegate,c.inputs=a.inputs):b.$stateful||(c.$$watchDelegate=g,c.inputs=a.inputs?a.inputs:[a]);return c}var n={csp:Ga().noUnsafeEval,literals:sa(b),isIdentifierStart:E(d)&&d,isIdentifierContinue:E(c)&&c};return function(b,c){var d,f,p;switch(typeof b){case \"string\":return p=b=b.trim(),d=a[p],d||(\":\"===b.charAt(0)&&\":\"===b.charAt(1)&&(f=!0,b=b.substring(2)),d=new sc(n),d=(new tc(d,e,n)).parse(b),d.constant?d.$$watchDelegate=l:f?d.$$watchDelegate=d.literal?\n                k:h:d.inputs&&(d.$$watchDelegate=g),a[p]=d),m(d,c);case \"function\":return m(b,c);default:return m(A,c)}}}]}function Nf(){var a=!0;this.$get=[\"$rootScope\",\"$exceptionHandler\",function(b,d){return Jd(function(a){b.$evalAsync(a)},d,a)}];this.errorOnUnhandledRejections=function(b){return u(b)?(a=b,this):a}}function Of(){var a=!0;this.$get=[\"$browser\",\"$exceptionHandler\",function(b,d){return Jd(function(a){b.defer(a)},d,a)}];this.errorOnUnhandledRejections=function(b){return u(b)?(a=b,this):a}}function Jd(a,\nb,d){function c(){return new e}function e(){var a=this.promise=new f;this.resolve=function(b){k(a,b)};this.reject=function(b){m(a,b)};this.notify=function(b){q(a,b)}}function f(){this.$$state={status:0}}function g(){for(;!y&&v.length;){var a=v.shift();if(!a.pur){a.pur=!0;var c=a.value,c=\"Possibly unhandled rejection: \"+(\"function\"===typeof c?c.toString().replace(/ \\{[\\s\\S]*$/,\"\"):x(c)?\"undefined\":\"string\"!==typeof c?Be(c,void 0):c);a.value instanceof Error?b(a.value,c):b(c)}}}function h(b){!d||b.pending||\n    2!==b.status||b.pur||(0===y&&0===v.length&&a(g),v.push(b));!b.processScheduled&&b.pending&&(b.processScheduled=!0,++y,a(function(){var c,e,f;f=b.pending;b.processScheduled=!1;b.pending=void 0;try{for(var h=0,l=f.length;h<l;++h){b.pur=!0;e=f[h][0];c=f[h][b.status];try{E(c)?k(e,c(b.value)):1===b.status?k(e,b.value):m(e,b.value)}catch(n){m(e,n)}}}finally{--y,d&&0===y&&a(g)}}))}function k(a,b){a.$$state.status||(b===a?n(a,K(\"qcycle\",b)):l(a,b))}function l(a,b){function c(b){g||(g=!0,l(a,b))}function d(b){g||\n    (g=!0,n(a,b))}function e(b){q(a,b)}var f,g=!1;try{if(G(b)||E(b))f=b.then;E(f)?(a.$$state.status=-1,f.call(b,c,d,e)):(a.$$state.value=b,a.$$state.status=1,h(a.$$state))}catch(k){d(k)}}function m(a,b){a.$$state.status||n(a,b)}function n(a,b){a.$$state.value=b;a.$$state.status=2;h(a.$$state)}function q(c,d){var e=c.$$state.pending;0>=c.$$state.status&&e&&e.length&&a(function(){for(var a,c,f=0,g=e.length;f<g;f++){c=e[f][0];a=e[f][3];try{q(c,E(a)?a(d):d)}catch(h){b(h)}}})}function r(a){var b=new f;m(b,\n        a);return b}function I(a,b,c){var d=null;try{E(c)&&(d=c())}catch(e){return r(e)}return d&&E(d.then)?d.then(function(){return b(a)},r):b(a)}function s(a,b,c,d){var e=new f;k(e,a);return e.then(b,c,d)}function t(a){if(!E(a))throw K(\"norslvr\",a);var b=new f;a(function(a){k(b,a)},function(a){m(b,a)});return b}var K=M(\"$q\",TypeError),y=0,v=[];R(f.prototype,{then:function(a,b,c){if(x(a)&&x(b)&&x(c))return this;var d=new f;this.$$state.pending=this.$$state.pending||[];this.$$state.pending.push([d,a,b,c]);\n        0<this.$$state.status&&h(this.$$state);return d},\"catch\":function(a){return this.then(null,a)},\"finally\":function(a,b){return this.then(function(b){return I(b,u,a)},function(b){return I(b,r,a)},b)}});var u=s;t.prototype=f.prototype;t.defer=c;t.reject=r;t.when=s;t.resolve=u;t.all=function(a){var b=new f,c=0,d=H(a)?[]:{};p(a,function(a,e){c++;s(a).then(function(a){d[e]=a;--c||k(b,d)},function(a){m(b,a)})});0===c&&k(b,d);return b};t.race=function(a){var b=c();p(a,function(a){s(a).then(b.resolve,b.reject)});\n        return b.promise};return t}function Xf(){this.$get=[\"$window\",\"$timeout\",function(a,b){var d=a.requestAnimationFrame||a.webkitRequestAnimationFrame,c=a.cancelAnimationFrame||a.webkitCancelAnimationFrame||a.webkitCancelRequestAnimationFrame,e=!!d,f=e?function(a){var b=d(a);return function(){c(b)}}:function(a){var c=b(a,16.66,!1);return function(){b.cancel(c)}};f.supported=e;return f}]}function Mf(){function a(a){function b(){this.$$watchers=this.$$nextSibling=this.$$childHead=this.$$childTail=null;\n        this.$$listeners={};this.$$listenerCount={};this.$$watchersCount=0;this.$id=++rb;this.$$ChildScope=null}b.prototype=a;return b}var b=10,d=M(\"$rootScope\"),c=null,e=null;this.digestTtl=function(a){arguments.length&&(b=a);return b};this.$get=[\"$exceptionHandler\",\"$parse\",\"$browser\",function(f,g,h){function k(a){a.currentScope.$$destroyed=!0}function l(a){9===za&&(a.$$childHead&&l(a.$$childHead),a.$$nextSibling&&l(a.$$nextSibling));a.$parent=a.$$nextSibling=a.$$prevSibling=a.$$childHead=a.$$childTail=\n        a.$root=a.$$watchers=null}function m(){this.$id=++rb;this.$$phase=this.$parent=this.$$watchers=this.$$nextSibling=this.$$prevSibling=this.$$childHead=this.$$childTail=null;this.$root=this;this.$$destroyed=!1;this.$$listeners={};this.$$listenerCount={};this.$$watchersCount=0;this.$$isolateBindings=null}function n(a){if(K.$$phase)throw d(\"inprog\",K.$$phase);K.$$phase=a}function q(a,b){do a.$$watchersCount+=b;while(a=a.$parent)}function r(a,b,c){do a.$$listenerCount[c]-=b,0===a.$$listenerCount[c]&&delete a.$$listenerCount[c];\n    while(a=a.$parent)}function I(){}function s(){for(;u.length;)try{u.shift()()}catch(a){f(a)}e=null}function t(){null===e&&(e=h.defer(function(){K.$apply(s)}))}m.prototype={constructor:m,$new:function(b,c){var d;c=c||this;b?(d=new m,d.$root=this.$root):(this.$$ChildScope||(this.$$ChildScope=a(this)),d=new this.$$ChildScope);d.$parent=c;d.$$prevSibling=c.$$childTail;c.$$childHead?(c.$$childTail.$$nextSibling=d,c.$$childTail=d):c.$$childHead=c.$$childTail=d;(b||c!==this)&&d.$on(\"$destroy\",k);return d},\n        $watch:function(a,b,d,e){var f=g(a);if(f.$$watchDelegate)return f.$$watchDelegate(this,b,d,f,a);var h=this,k=h.$$watchers,l={fn:b,last:I,get:f,exp:e||a,eq:!!d};c=null;E(b)||(l.fn=A);k||(k=h.$$watchers=[],k.$$digestWatchIndex=-1);k.unshift(l);k.$$digestWatchIndex++;q(this,1);return function(){var a=$a(k,l);0<=a&&(q(h,-1),a<k.$$digestWatchIndex&&k.$$digestWatchIndex--);c=null}},$watchGroup:function(a,b){function c(){h=!1;k?(k=!1,b(e,e,g)):b(e,d,g)}var d=Array(a.length),e=Array(a.length),f=[],g=this,\n            h=!1,k=!0;if(!a.length){var l=!0;g.$evalAsync(function(){l&&b(e,e,g)});return function(){l=!1}}if(1===a.length)return this.$watch(a[0],function(a,c,f){e[0]=a;d[0]=c;b(e,a===c?e:d,f)});p(a,function(a,b){var k=g.$watch(a,function(a,f){e[b]=a;d[b]=f;h||(h=!0,g.$evalAsync(c))});f.push(k)});return function(){for(;f.length;)f.shift()()}},$watchCollection:function(a,b){function c(a){e=a;var b,d,g,h;if(!x(e)){if(G(e))if(ra(e))for(f!==n&&(f=n,p=f.length=0,l++),a=e.length,p!==a&&(l++,f.length=p=a),b=0;b<a;b++)h=\n            f[b],g=e[b],d=h!==h&&g!==g,d||h===g||(l++,f[b]=g);else{f!==q&&(f=q={},p=0,l++);a=0;for(b in e)ua.call(e,b)&&(a++,g=e[b],h=f[b],b in f?(d=h!==h&&g!==g,d||h===g||(l++,f[b]=g)):(p++,f[b]=g,l++));if(p>a)for(b in l++,f)ua.call(e,b)||(p--,delete f[b])}else f!==e&&(f=e,l++);return l}}c.$stateful=!0;var d=this,e,f,h,k=1<b.length,l=0,m=g(a,c),n=[],q={},r=!0,p=0;return this.$watch(m,function(){r?(r=!1,b(e,e,d)):b(e,h,d);if(k)if(G(e))if(ra(e)){h=Array(e.length);for(var a=0;a<e.length;a++)h[a]=e[a]}else for(a in h=\n            {},e)ua.call(e,a)&&(h[a]=e[a]);else h=e})},$digest:function(){var a,g,k,l,m,q,r,p=b,t,u=[],x,w;n(\"$digest\");h.$$checkUrlChange();this===K&&null!==e&&(h.defer.cancel(e),s());c=null;do{r=!1;t=this;for(q=0;q<y.length;q++){try{w=y[q],l=w.fn,l(w.scope,w.locals)}catch(A){f(A)}c=null}y.length=0;a:do{if(q=t.$$watchers)for(q.$$digestWatchIndex=q.length;q.$$digestWatchIndex--;)try{if(a=q[q.$$digestWatchIndex])if(m=a.get,(g=m(t))!==(k=a.last)&&!(a.eq?pa(g,k):da(g)&&da(k)))r=!0,c=a,a.last=a.eq?sa(g,null):g,l=\n            a.fn,l(g,k===I?g:k,t),5>p&&(x=4-p,u[x]||(u[x]=[]),u[x].push({msg:E(a.exp)?\"fn: \"+(a.exp.name||a.exp.toString()):a.exp,newVal:g,oldVal:k}));else if(a===c){r=!1;break a}}catch(F){f(F)}if(!(q=t.$$watchersCount&&t.$$childHead||t!==this&&t.$$nextSibling))for(;t!==this&&!(q=t.$$nextSibling);)t=t.$parent}while(t=q);if((r||y.length)&&!p--)throw K.$$phase=null,d(\"infdig\",b,u);}while(r||y.length);for(K.$$phase=null;B<v.length;)try{v[B++]()}catch(La){f(La)}v.length=B=0;h.$$checkUrlChange()},$destroy:function(){if(!this.$$destroyed){var a=\n            this.$parent;this.$broadcast(\"$destroy\");this.$$destroyed=!0;this===K&&h.$$applicationDestroyed();q(this,-this.$$watchersCount);for(var b in this.$$listenerCount)r(this,this.$$listenerCount[b],b);a&&a.$$childHead===this&&(a.$$childHead=this.$$nextSibling);a&&a.$$childTail===this&&(a.$$childTail=this.$$prevSibling);this.$$prevSibling&&(this.$$prevSibling.$$nextSibling=this.$$nextSibling);this.$$nextSibling&&(this.$$nextSibling.$$prevSibling=this.$$prevSibling);this.$destroy=this.$digest=this.$apply=\n            this.$evalAsync=this.$applyAsync=A;this.$on=this.$watch=this.$watchGroup=function(){return A};this.$$listeners={};this.$$nextSibling=null;l(this)}},$eval:function(a,b){return g(a)(this,b)},$evalAsync:function(a,b){K.$$phase||y.length||h.defer(function(){y.length&&K.$digest()});y.push({scope:this,fn:g(a),locals:b})},$$postDigest:function(a){v.push(a)},$apply:function(a){try{n(\"$apply\");try{return this.$eval(a)}finally{K.$$phase=null}}catch(b){f(b)}finally{try{K.$digest()}catch(c){throw f(c),c;}}},\n        $applyAsync:function(a){function b(){c.$eval(a)}var c=this;a&&u.push(b);a=g(a);t()},$on:function(a,b){var c=this.$$listeners[a];c||(this.$$listeners[a]=c=[]);c.push(b);var d=this;do d.$$listenerCount[a]||(d.$$listenerCount[a]=0),d.$$listenerCount[a]++;while(d=d.$parent);var e=this;return function(){var d=c.indexOf(b);-1!==d&&(c[d]=null,r(e,1,a))}},$emit:function(a,b){var c=[],d,e=this,g=!1,h={name:a,targetScope:e,stopPropagation:function(){g=!0},preventDefault:function(){h.defaultPrevented=!0},defaultPrevented:!1},\n            k=ab([h],arguments,1),l,m;do{d=e.$$listeners[a]||c;h.currentScope=e;l=0;for(m=d.length;l<m;l++)if(d[l])try{d[l].apply(null,k)}catch(n){f(n)}else d.splice(l,1),l--,m--;if(g)return h.currentScope=null,h;e=e.$parent}while(e);h.currentScope=null;return h},$broadcast:function(a,b){var c=this,d=this,e={name:a,targetScope:this,preventDefault:function(){e.defaultPrevented=!0},defaultPrevented:!1};if(!this.$$listenerCount[a])return e;for(var g=ab([e],arguments,1),h,k;c=d;){e.currentScope=c;d=c.$$listeners[a]||\n            [];h=0;for(k=d.length;h<k;h++)if(d[h])try{d[h].apply(null,g)}catch(l){f(l)}else d.splice(h,1),h--,k--;if(!(d=c.$$listenerCount[a]&&c.$$childHead||c!==this&&c.$$nextSibling))for(;c!==this&&!(d=c.$$nextSibling);)c=c.$parent}e.currentScope=null;return e}};var K=new m,y=K.$$asyncQueue=[],v=K.$$postDigestQueue=[],u=K.$$applyAsyncQueue=[],B=0;return K}]}function Ee(){var a=/^\\s*(https?|ftp|mailto|tel|file):/,b=/^\\s*((https?|ftp|file|blob):|data:image\\/)/;this.aHrefSanitizationWhitelist=function(b){return u(b)?\n        (a=b,this):a};this.imgSrcSanitizationWhitelist=function(a){return u(a)?(b=a,this):b};this.$get=function(){return function(d,c){var e=c?b:a,f;f=Ca(d).href;return\"\"===f||f.match(e)?d:\"unsafe:\"+f}}}function Cg(a){if(\"self\"===a)return a;if(D(a)){if(-1<a.indexOf(\"***\"))throw ta(\"iwcard\",a);a=Kd(a).replace(/\\\\\\*\\\\\\*/g,\".*\").replace(/\\\\\\*/g,\"[^:/.?&;]*\");return new RegExp(\"^\"+a+\"$\")}if(Xa(a))return new RegExp(\"^\"+a.source+\"$\");throw ta(\"imatcher\");}function Ld(a){var b=[];u(a)&&p(a,function(a){b.push(Cg(a))});\n        return b}function Qf(){this.SCE_CONTEXTS=oa;var a=[\"self\"],b=[];this.resourceUrlWhitelist=function(b){arguments.length&&(a=Ld(b));return a};this.resourceUrlBlacklist=function(a){arguments.length&&(b=Ld(a));return b};this.$get=[\"$injector\",function(d){function c(a,b){return\"self\"===a?wd(b):!!a.exec(b.href)}function e(a){var b=function(a){this.$$unwrapTrustedValue=function(){return a}};a&&(b.prototype=new a);b.prototype.valueOf=function(){return this.$$unwrapTrustedValue()};b.prototype.toString=function(){return this.$$unwrapTrustedValue().toString()};\n        return b}var f=function(a){throw ta(\"unsafe\");};d.has(\"$sanitize\")&&(f=d.get(\"$sanitize\"));var g=e(),h={};h[oa.HTML]=e(g);h[oa.CSS]=e(g);h[oa.URL]=e(g);h[oa.JS]=e(g);h[oa.RESOURCE_URL]=e(h[oa.URL]);return{trustAs:function(a,b){var c=h.hasOwnProperty(a)?h[a]:null;if(!c)throw ta(\"icontext\",a,b);if(null===b||x(b)||\"\"===b)return b;if(\"string\"!==typeof b)throw ta(\"itype\",a);return new c(b)},getTrusted:function(d,e){if(null===e||x(e)||\"\"===e)return e;var g=h.hasOwnProperty(d)?h[d]:null;if(g&&e instanceof\n        g)return e.$$unwrapTrustedValue();if(d===oa.RESOURCE_URL){var g=Ca(e.toString()),n,q,r=!1;n=0;for(q=a.length;n<q;n++)if(c(a[n],g)){r=!0;break}if(r)for(n=0,q=b.length;n<q;n++)if(c(b[n],g)){r=!1;break}if(r)return e;throw ta(\"insecurl\",e.toString());}if(d===oa.HTML)return f(e);throw ta(\"unsafe\");},valueOf:function(a){return a instanceof g?a.$$unwrapTrustedValue():a}}}]}function Pf(){var a=!0;this.enabled=function(b){arguments.length&&(a=!!b);return a};this.$get=[\"$parse\",\"$sceDelegate\",function(b,d){if(a&&\n        8>za)throw ta(\"iequirks\");var c=qa(oa);c.isEnabled=function(){return a};c.trustAs=d.trustAs;c.getTrusted=d.getTrusted;c.valueOf=d.valueOf;a||(c.trustAs=c.getTrusted=function(a,b){return b},c.valueOf=Ya);c.parseAs=function(a,d){var e=b(d);return e.literal&&e.constant?e:b(d,function(b){return c.getTrusted(a,b)})};var e=c.parseAs,f=c.getTrusted,g=c.trustAs;p(oa,function(a,b){var d=P(b);c[(\"parse_as_\"+d).replace(uc,gb)]=function(b){return e(a,b)};c[(\"get_trusted_\"+d).replace(uc,gb)]=function(b){return f(a,\n        b)};c[(\"trust_as_\"+d).replace(uc,gb)]=function(b){return g(a,b)}});return c}]}function Rf(){this.$get=[\"$window\",\"$document\",function(a,b){var d={},c=!((!a.nw||!a.nw.process)&&a.chrome&&(a.chrome.app&&a.chrome.app.runtime||!a.chrome.app&&a.chrome.runtime&&a.chrome.runtime.id))&&a.history&&a.history.pushState,e=Z((/android (\\d+)/.exec(P((a.navigator||{}).userAgent))||[])[1]),f=/Boxee/i.test((a.navigator||{}).userAgent),g=b[0]||{},h=g.body&&g.body.style,k=!1,l=!1;h&&(k=!!(\"transition\"in h||\"webkitTransition\"in\n    h),l=!!(\"animation\"in h||\"webkitAnimation\"in h));return{history:!(!c||4>e||f),hasEvent:function(a){if(\"input\"===a&&za)return!1;if(x(d[a])){var b=g.createElement(\"div\");d[a]=\"on\"+a in b}return d[a]},csp:Ga(),transitions:k,animations:l,android:e}}]}function Tf(){var a;this.httpOptions=function(b){return b?(a=b,this):a};this.$get=[\"$exceptionHandler\",\"$templateCache\",\"$http\",\"$q\",\"$sce\",function(b,d,c,e,f){function g(h,k){g.totalPendingRequests++;if(!D(h)||x(d.get(h)))h=f.getTrustedResourceUrl(h);var l=\n        c.defaults&&c.defaults.transformResponse;H(l)?l=l.filter(function(a){return a!==lc}):l===lc&&(l=null);return c.get(h,R({cache:d,transformResponse:l},a)).finally(function(){g.totalPendingRequests--}).then(function(a){d.put(h,a.data);return a.data},function(a){k||(a=Dg(\"tpload\",h,a.status,a.statusText),b(a));return e.reject(a)})}g.totalPendingRequests=0;return g}]}function Uf(){this.$get=[\"$rootScope\",\"$browser\",\"$location\",function(a,b,d){return{findBindings:function(a,b,d){a=a.getElementsByClassName(\"ng-binding\");\n        var g=[];p(a,function(a){var c=ea.element(a).data(\"$binding\");c&&p(c,function(c){d?(new RegExp(\"(^|\\\\s)\"+Kd(b)+\"(\\\\s|\\\\||$)\")).test(c)&&g.push(a):-1!==c.indexOf(b)&&g.push(a)})});return g},findModels:function(a,b,d){for(var g=[\"ng-\",\"data-ng-\",\"ng\\\\:\"],h=0;h<g.length;++h){var k=a.querySelectorAll(\"[\"+g[h]+\"model\"+(d?\"=\":\"*=\")+'\"'+b+'\"]');if(k.length)return k}},getLocation:function(){return d.url()},setLocation:function(b){b!==d.url()&&(d.url(b),a.$digest())},whenStable:function(a){b.notifyWhenNoOutstandingRequests(a)}}}]}\n    function Vf(){this.$get=[\"$rootScope\",\"$browser\",\"$q\",\"$$q\",\"$exceptionHandler\",function(a,b,d,c,e){function f(f,k,l){E(f)||(l=k,k=f,f=A);var m=va.call(arguments,3),n=u(l)&&!l,q=(n?c:d).defer(),r=q.promise,p;p=b.defer(function(){try{q.resolve(f.apply(null,m))}catch(b){q.reject(b),e(b)}finally{delete g[r.$$timeoutId]}n||a.$apply()},k);r.$$timeoutId=p;g[p]=q;return r}var g={};f.cancel=function(a){return a&&a.$$timeoutId in g?(g[a.$$timeoutId].promise.catch(A),g[a.$$timeoutId].reject(\"canceled\"),delete g[a.$$timeoutId],\n            b.defer.cancel(a.$$timeoutId)):!1};return f}]}function Ca(a){za&&(aa.setAttribute(\"href\",a),a=aa.href);aa.setAttribute(\"href\",a);return{href:aa.href,protocol:aa.protocol?aa.protocol.replace(/:$/,\"\"):\"\",host:aa.host,search:aa.search?aa.search.replace(/^\\?/,\"\"):\"\",hash:aa.hash?aa.hash.replace(/^#/,\"\"):\"\",hostname:aa.hostname,port:aa.port,pathname:\"/\"===aa.pathname.charAt(0)?aa.pathname:\"/\"+aa.pathname}}function wd(a){a=D(a)?Ca(a):a;return a.protocol===Md.protocol&&a.host===Md.host}function Wf(){this.$get=\n        la(w)}function Nd(a){function b(a){try{return decodeURIComponent(a)}catch(b){return a}}var d=a[0]||{},c={},e=\"\";return function(){var a,g,h,k,l;try{a=d.cookie||\"\"}catch(m){a=\"\"}if(a!==e)for(e=a,a=e.split(\"; \"),c={},h=0;h<a.length;h++)g=a[h],k=g.indexOf(\"=\"),0<k&&(l=b(g.substring(0,k)),x(c[l])&&(c[l]=b(g.substring(k+1))));return c}}function $f(){this.$get=Nd}function $c(a){function b(d,c){if(G(d)){var e={};p(d,function(a,c){e[c]=b(c,a)});return e}return a.factory(d+\"Filter\",c)}this.register=b;this.$get=\n        [\"$injector\",function(a){return function(b){return a.get(b+\"Filter\")}}];b(\"currency\",Od);b(\"date\",Pd);b(\"filter\",Eg);b(\"json\",Fg);b(\"limitTo\",Gg);b(\"lowercase\",Hg);b(\"number\",Qd);b(\"orderBy\",Rd);b(\"uppercase\",Ig)}function Eg(){return function(a,b,d,c){if(!ra(a)){if(null==a)return a;throw M(\"filter\")(\"notarray\",a);}c=c||\"$\";var e;switch(vc(b)){case \"function\":break;case \"boolean\":case \"null\":case \"number\":case \"string\":e=!0;case \"object\":b=Jg(b,d,c,e);break;default:return a}return Array.prototype.filter.call(a,\n        b)}}function Jg(a,b,d,c){var e=G(a)&&d in a;!0===b?b=pa:E(b)||(b=function(a,b){if(x(a))return!1;if(null===a||null===b)return a===b;if(G(b)||G(a)&&!Xb(a))return!1;a=P(\"\"+a);b=P(\"\"+b);return-1!==a.indexOf(b)});return function(f){return e&&!G(f)?Ea(f,a[d],b,d,!1):Ea(f,a,b,d,c)}}function Ea(a,b,d,c,e,f){var g=vc(a),h=vc(b);if(\"string\"===h&&\"!\"===b.charAt(0))return!Ea(a,b.substring(1),d,c,e);if(H(a))return a.some(function(a){return Ea(a,b,d,c,e)});switch(g){case \"object\":var k;if(e){for(k in a)if(k.charAt&&\n        \"$\"!==k.charAt(0)&&Ea(a[k],b,d,c,!0))return!0;return f?!1:Ea(a,b,d,c,!1)}if(\"object\"===h){for(k in b)if(f=b[k],!E(f)&&!x(f)&&(g=k===c,!Ea(g?a:a[k],f,d,c,g,g)))return!1;return!0}return d(a,b);case \"function\":return!1;default:return d(a,b)}}function vc(a){return null===a?\"null\":typeof a}function Od(a){var b=a.NUMBER_FORMATS;return function(a,c,e){x(c)&&(c=b.CURRENCY_SYM);x(e)&&(e=b.PATTERNS[1].maxFrac);return null==a?a:Sd(a,b.PATTERNS[1],b.GROUP_SEP,b.DECIMAL_SEP,e).replace(/\\u00A4/g,c)}}function Qd(a){var b=\n        a.NUMBER_FORMATS;return function(a,c){return null==a?a:Sd(a,b.PATTERNS[0],b.GROUP_SEP,b.DECIMAL_SEP,c)}}function Kg(a){var b=0,d,c,e,f,g;-1<(c=a.indexOf(Td))&&(a=a.replace(Td,\"\"));0<(e=a.search(/e/i))?(0>c&&(c=e),c+=+a.slice(e+1),a=a.substring(0,e)):0>c&&(c=a.length);for(e=0;a.charAt(e)===wc;e++);if(e===(g=a.length))d=[0],c=1;else{for(g--;a.charAt(g)===wc;)g--;c-=e;d=[];for(f=0;e<=g;e++,f++)d[f]=+a.charAt(e)}c>Ud&&(d=d.splice(0,Ud-1),b=c-1,c=1);return{d:d,e:b,i:c}}function Lg(a,b,d,c){var e=a.d,f=\n        e.length-a.i;b=x(b)?Math.min(Math.max(d,f),c):+b;d=b+a.i;c=e[d];if(0<d){e.splice(Math.max(a.i,d));for(var g=d;g<e.length;g++)e[g]=0}else for(f=Math.max(0,f),a.i=1,e.length=Math.max(1,d=b+1),e[0]=0,g=1;g<d;g++)e[g]=0;if(5<=c)if(0>d-1){for(c=0;c>d;c--)e.unshift(0),a.i++;e.unshift(1);a.i++}else e[d-1]++;for(;f<Math.max(0,b);f++)e.push(0);if(b=e.reduceRight(function(a,b,c,d){b+=a;d[c]=b%10;return Math.floor(b/10)},0))e.unshift(b),a.i++}function Sd(a,b,d,c,e){if(!D(a)&&!ba(a)||isNaN(a))return\"\";var f=\n        !isFinite(a),g=!1,h=Math.abs(a)+\"\",k=\"\";if(f)k=\"\\u221e\";else{g=Kg(h);Lg(g,e,b.minFrac,b.maxFrac);k=g.d;h=g.i;e=g.e;f=[];for(g=k.reduce(function(a,b){return a&&!b},!0);0>h;)k.unshift(0),h++;0<h?f=k.splice(h,k.length):(f=k,k=[0]);h=[];for(k.length>=b.lgSize&&h.unshift(k.splice(-b.lgSize,k.length).join(\"\"));k.length>b.gSize;)h.unshift(k.splice(-b.gSize,k.length).join(\"\"));k.length&&h.unshift(k.join(\"\"));k=h.join(d);f.length&&(k+=c+f.join(\"\"));e&&(k+=\"e+\"+e)}return 0>a&&!g?b.negPre+k+b.negSuf:b.posPre+\n        k+b.posSuf}function Lb(a,b,d,c){var e=\"\";if(0>a||c&&0>=a)c?a=-a+1:(a=-a,e=\"-\");for(a=\"\"+a;a.length<b;)a=wc+a;d&&(a=a.substr(a.length-b));return e+a}function Y(a,b,d,c,e){d=d||0;return function(f){f=f[\"get\"+a]();if(0<d||f>-d)f+=d;0===f&&-12===d&&(f=12);return Lb(f,b,c,e)}}function nb(a,b,d){return function(c,e){var f=c[\"get\"+a](),g=vb((d?\"STANDALONE\":\"\")+(b?\"SHORT\":\"\")+a);return e[g][f]}}function Vd(a){var b=(new Date(a,0,1)).getDay();return new Date(a,0,(4>=b?5:12)-b)}function Wd(a){return function(b){var d=\n        Vd(b.getFullYear());b=+new Date(b.getFullYear(),b.getMonth(),b.getDate()+(4-b.getDay()))-+d;b=1+Math.round(b/6048E5);return Lb(b,a)}}function xc(a,b){return 0>=a.getFullYear()?b.ERAS[0]:b.ERAS[1]}function Pd(a){function b(a){var b;if(b=a.match(d)){a=new Date(0);var f=0,g=0,h=b[8]?a.setUTCFullYear:a.setFullYear,k=b[8]?a.setUTCHours:a.setHours;b[9]&&(f=Z(b[9]+b[10]),g=Z(b[9]+b[11]));h.call(a,Z(b[1]),Z(b[2])-1,Z(b[3]));f=Z(b[4]||0)-f;g=Z(b[5]||0)-g;h=Z(b[6]||0);b=Math.round(1E3*parseFloat(\"0.\"+(b[7]||\n            0)));k.call(a,f,g,h,b)}return a}var d=/^(\\d{4})-?(\\d\\d)-?(\\d\\d)(?:T(\\d\\d)(?::?(\\d\\d)(?::?(\\d\\d)(?:\\.(\\d+))?)?)?(Z|([+-])(\\d\\d):?(\\d\\d))?)?$/;return function(c,d,f){var g=\"\",h=[],k,l;d=d||\"mediumDate\";d=a.DATETIME_FORMATS[d]||d;D(c)&&(c=Mg.test(c)?Z(c):b(c));ba(c)&&(c=new Date(c));if(!ga(c)||!isFinite(c.getTime()))return c;for(;d;)(l=Ng.exec(d))?(h=ab(h,l,1),d=h.pop()):(h.push(d),d=null);var m=c.getTimezoneOffset();f&&(m=Mc(f,m),c=Yb(c,f,!0));p(h,function(b){k=Og[b];g+=k?k(c,a.DATETIME_FORMATS,m):\n        \"''\"===b?\"'\":b.replace(/(^'|'$)/g,\"\").replace(/''/g,\"'\")});return g}}function Fg(){return function(a,b){x(b)&&(b=2);return cb(a,b)}}function Gg(){return function(a,b,d){b=Infinity===Math.abs(Number(b))?Number(b):Z(b);if(da(b))return a;ba(a)&&(a=a.toString());if(!ra(a))return a;d=!d||isNaN(d)?0:Z(d);d=0>d?Math.max(0,a.length+d):d;return 0<=b?yc(a,d,d+b):0===d?yc(a,b,a.length):yc(a,Math.max(0,d+b),d)}}function yc(a,b,d){return D(a)?a.slice(b,d):va.call(a,b,d)}function Rd(a){function b(b){return b.map(function(b){var c=\n        1,d=Ya;if(E(b))d=b;else if(D(b)){if(\"+\"===b.charAt(0)||\"-\"===b.charAt(0))c=\"-\"===b.charAt(0)?-1:1,b=b.substring(1);if(\"\"!==b&&(d=a(b),d.constant))var e=d(),d=function(a){return a[e]}}return{get:d,descending:c}})}function d(a){switch(typeof a){case \"number\":case \"boolean\":case \"string\":return!0;default:return!1}}function c(a,b){var c=0,d=a.type,k=b.type;if(d===k){var k=a.value,l=b.value;\"string\"===d?(k=k.toLowerCase(),l=l.toLowerCase()):\"object\"===d&&(G(k)&&(k=a.index),G(l)&&(l=b.index));k!==l&&(c=\n        k<l?-1:1)}else c=d<k?-1:1;return c}return function(a,f,g,h){if(null==a)return a;if(!ra(a))throw M(\"orderBy\")(\"notarray\",a);H(f)||(f=[f]);0===f.length&&(f=[\"+\"]);var k=b(f),l=g?-1:1,m=E(h)?h:c;a=Array.prototype.map.call(a,function(a,b){return{value:a,tieBreaker:{value:b,type:\"number\",index:b},predicateValues:k.map(function(c){var e=c.get(a);c=typeof e;if(null===e)c=\"string\",e=\"null\";else if(\"object\"===c)a:{if(E(e.valueOf)&&(e=e.valueOf(),d(e)))break a;Xb(e)&&(e=e.toString(),d(e))}return{value:e,type:c,\n        index:b}})}});a.sort(function(a,b){for(var c=0,d=k.length;c<d;c++){var e=m(a.predicateValues[c],b.predicateValues[c]);if(e)return e*k[c].descending*l}return m(a.tieBreaker,b.tieBreaker)*l});return a=a.map(function(a){return a.value})}}function Qa(a){E(a)&&(a={link:a});a.restrict=a.restrict||\"AC\";return la(a)}function Mb(a,b,d,c,e){this.$$controls=[];this.$error={};this.$$success={};this.$pending=void 0;this.$name=e(b.name||b.ngForm||\"\")(d);this.$dirty=!1;this.$valid=this.$pristine=!0;this.$submitted=\n        this.$invalid=!1;this.$$parentForm=Nb;this.$$element=a;this.$$animate=c;Xd(this)}function Xd(a){a.$$classCache={};a.$$classCache[Yd]=!(a.$$classCache[ob]=a.$$element.hasClass(ob))}function Zd(a){function b(a,b,c){c&&!a.$$classCache[b]?(a.$$animate.addClass(a.$$element,b),a.$$classCache[b]=!0):!c&&a.$$classCache[b]&&(a.$$animate.removeClass(a.$$element,b),a.$$classCache[b]=!1)}function d(a,c,d){c=c?\"-\"+Qc(c,\"-\"):\"\";b(a,ob+c,!0===d);b(a,Yd+c,!1===d)}var c=a.set,e=a.unset;a.clazz.prototype.$setValidity=\n        function(a,g,h){x(g)?(this.$pending||(this.$pending={}),c(this.$pending,a,h)):(this.$pending&&e(this.$pending,a,h),$d(this.$pending)&&(this.$pending=void 0));Ha(g)?g?(e(this.$error,a,h),c(this.$$success,a,h)):(c(this.$error,a,h),e(this.$$success,a,h)):(e(this.$error,a,h),e(this.$$success,a,h));this.$pending?(b(this,\"ng-pending\",!0),this.$valid=this.$invalid=void 0,d(this,\"\",null)):(b(this,\"ng-pending\",!1),this.$valid=$d(this.$error),this.$invalid=!this.$valid,d(this,\"\",this.$valid));g=this.$pending&&\n        this.$pending[a]?void 0:this.$error[a]?!1:this.$$success[a]?!0:null;d(this,a,g);this.$$parentForm.$setValidity(a,g,this)}}function $d(a){if(a)for(var b in a)if(a.hasOwnProperty(b))return!1;return!0}function zc(a){a.$formatters.push(function(b){return a.$isEmpty(b)?b:b.toString()})}function Ra(a,b,d,c,e,f){var g=P(b[0].type);if(!e.android){var h=!1;b.on(\"compositionstart\",function(){h=!0});b.on(\"compositionend\",function(){h=!1;l()})}var k,l=function(a){k&&(f.defer.cancel(k),k=null);if(!h){var e=b.val();\n        a=a&&a.type;\"password\"===g||d.ngTrim&&\"false\"===d.ngTrim||(e=S(e));(c.$viewValue!==e||\"\"===e&&c.$$hasNativeValidators)&&c.$setViewValue(e,a)}};if(e.hasEvent(\"input\"))b.on(\"input\",l);else{var m=function(a,b,c){k||(k=f.defer(function(){k=null;b&&b.value===c||l(a)}))};b.on(\"keydown\",function(a){var b=a.keyCode;91===b||15<b&&19>b||37<=b&&40>=b||m(a,this,this.value)});if(e.hasEvent(\"paste\"))b.on(\"paste cut\",m)}b.on(\"change\",l);if(ae[g]&&c.$$hasNativeValidators&&g===d.type)b.on(\"keydown wheel mousedown\",\n        function(a){if(!k){var b=this.validity,c=b.badInput,d=b.typeMismatch;k=f.defer(function(){k=null;b.badInput===c&&b.typeMismatch===d||l(a)})}});c.$render=function(){var a=c.$isEmpty(c.$viewValue)?\"\":c.$viewValue;b.val()!==a&&b.val(a)}}function Ob(a,b){return function(d,c){var e,f;if(ga(d))return d;if(D(d)){'\"'===d.charAt(0)&&'\"'===d.charAt(d.length-1)&&(d=d.substring(1,d.length-1));if(Pg.test(d))return new Date(d);a.lastIndex=0;if(e=a.exec(d))return e.shift(),f=c?{yyyy:c.getFullYear(),MM:c.getMonth()+\n        1,dd:c.getDate(),HH:c.getHours(),mm:c.getMinutes(),ss:c.getSeconds(),sss:c.getMilliseconds()/1E3}:{yyyy:1970,MM:1,dd:1,HH:0,mm:0,ss:0,sss:0},p(e,function(a,c){c<b.length&&(f[b[c]]=+a)}),new Date(f.yyyy,f.MM-1,f.dd,f.HH,f.mm,f.ss||0,1E3*f.sss||0)}return NaN}}function pb(a,b,d,c){return function(e,f,g,h,k,l,m){function n(a){return a&&!(a.getTime&&a.getTime()!==a.getTime())}function q(a){return u(a)&&!ga(a)?d(a)||void 0:a}Ac(e,f,g,h);Ra(e,f,g,h,k,l);var r=h&&h.$options.getOption(\"timezone\"),p;h.$$parserName=\n        a;h.$parsers.push(function(a){if(h.$isEmpty(a))return null;if(b.test(a))return a=d(a,p),r&&(a=Yb(a,r)),a});h.$formatters.push(function(a){if(a&&!ga(a))throw qb(\"datefmt\",a);if(n(a))return(p=a)&&r&&(p=Yb(p,r,!0)),m(\"date\")(a,c,r);p=null;return\"\"});if(u(g.min)||g.ngMin){var s;h.$validators.min=function(a){return!n(a)||x(s)||d(a)>=s};g.$observe(\"min\",function(a){s=q(a);h.$validate()})}if(u(g.max)||g.ngMax){var t;h.$validators.max=function(a){return!n(a)||x(t)||d(a)<=t};g.$observe(\"max\",function(a){t=\n        q(a);h.$validate()})}}}function Ac(a,b,d,c){(c.$$hasNativeValidators=G(b[0].validity))&&c.$parsers.push(function(a){var c=b.prop(\"validity\")||{};return c.badInput||c.typeMismatch?void 0:a})}function be(a){a.$$parserName=\"number\";a.$parsers.push(function(b){if(a.$isEmpty(b))return null;if(Qg.test(b))return parseFloat(b)});a.$formatters.push(function(b){if(!a.$isEmpty(b)){if(!ba(b))throw qb(\"numfmt\",b);b=b.toString()}return b})}function Sa(a){u(a)&&!ba(a)&&(a=parseFloat(a));return da(a)?void 0:a}function Bc(a){var b=\n        a.toString(),d=b.indexOf(\".\");return-1===d?-1<a&&1>a&&(a=/e-(\\d+)$/.exec(b))?Number(a[1]):0:b.length-d-1}function ce(a,b,d){a=Number(a);var c=(a|0)!==a,e=(b|0)!==b,f=(d|0)!==d;if(c||e||f){var g=c?Bc(a):0,h=e?Bc(b):0,k=f?Bc(d):0,g=Math.max(g,h,k),g=Math.pow(10,g);a*=g;b*=g;d*=g;c&&(a=Math.round(a));e&&(b=Math.round(b));f&&(d=Math.round(d))}return 0===(a-b)%d}function de(a,b,d,c,e){if(u(c)){a=a(c);if(!a.constant)throw qb(\"constexpr\",d,c);return a(b)}return e}function Cc(a,b){function d(a,b){if(!a||\n        !a.length)return[];if(!b||!b.length)return a;var c=[],d=0;a:for(;d<a.length;d++){for(var e=a[d],f=0;f<b.length;f++)if(e===b[f])continue a;c.push(e)}return c}function c(a){var b=a;H(a)?b=a.map(c).join(\" \"):G(a)&&(b=Object.keys(a).filter(function(b){return a[b]}).join(\" \"));return b}function e(a){var b=a;if(H(a))b=a.map(e);else if(G(a)){var c=!1,b=Object.keys(a).filter(function(b){b=a[b];!c&&x(b)&&(c=!0);return b});c&&b.push(void 0)}return b}a=\"ngClass\"+a;var f;return[\"$parse\",function(g){return{restrict:\"AC\",\n        link:function(h,k,l){function m(a,b){var c=[];p(a,function(a){if(0<b||K[a])K[a]=(K[a]||0)+b,K[a]===+(0<b)&&c.push(a)});return c.join(\" \")}function n(a){if(a===b){var c=v,c=m(c&&c.split(\" \"),1);l.$addClass(c)}else c=v,c=m(c&&c.split(\" \"),-1),l.$removeClass(c);y=a}function q(a){a=c(a);a!==v&&r(a)}function r(a){if(y===b){var c=v&&v.split(\" \"),e=a&&a.split(\" \"),f=d(c,e),c=d(e,c),f=m(f,-1),c=m(c,1);l.$addClass(c);l.$removeClass(f)}v=a}var s=l[a].trim(),u=\":\"===s.charAt(0)&&\":\"===s.charAt(1),s=g(s,u?e:\n            c),t=u?q:r,K=k.data(\"$classCounts\"),y=!0,v;K||(K=V(),k.data(\"$classCounts\",K));\"ngClass\"!==a&&(f||(f=g(\"$index\",function(a){return a&1})),h.$watch(f,n));h.$watch(s,t,u)}}}]}function Pb(a,b,d,c,e,f,g,h,k){this.$modelValue=this.$viewValue=Number.NaN;this.$$rawModelValue=void 0;this.$validators={};this.$asyncValidators={};this.$parsers=[];this.$formatters=[];this.$viewChangeListeners=[];this.$untouched=!0;this.$touched=!1;this.$pristine=!0;this.$dirty=!1;this.$valid=!0;this.$invalid=!1;this.$error={};\n        this.$$success={};this.$pending=void 0;this.$name=k(d.name||\"\",!1)(a);this.$$parentForm=Nb;this.$options=Qb;this.$$parsedNgModel=e(d.ngModel);this.$$parsedNgModelAssign=this.$$parsedNgModel.assign;this.$$ngModelGet=this.$$parsedNgModel;this.$$ngModelSet=this.$$parsedNgModelAssign;this.$$pendingDebounce=null;this.$$parserValid=void 0;this.$$currentValidationRunId=0;this.$$scope=a;this.$$attr=d;this.$$element=c;this.$$animate=f;this.$$timeout=g;this.$$parse=e;this.$$q=h;this.$$exceptionHandler=b;Xd(this);\n        Rg(this)}function Rg(a){a.$$scope.$watch(function(){var b=a.$$ngModelGet(a.$$scope);if(b!==a.$modelValue&&(a.$modelValue===a.$modelValue||b===b)){a.$modelValue=a.$$rawModelValue=b;a.$$parserValid=void 0;for(var d=a.$formatters,c=d.length,e=b;c--;)e=d[c](e);a.$viewValue!==e&&(a.$$updateEmptyClasses(e),a.$viewValue=a.$$lastCommittedViewValue=e,a.$render(),a.$$runValidators(a.$modelValue,a.$viewValue,A))}return b})}function Dc(a){this.$$options=a}function ee(a,b){p(b,function(b,c){u(a[c])||(a[c]=b)})}\n    function Ta(a,b){a.prop(\"selected\",b);a.attr(\"selected\",b)}var Sg=/^\\/(.+)\\/([a-z]*)$/,ua=Object.prototype.hasOwnProperty,Fc={objectMaxDepth:5},P=function(a){return D(a)?a.toLowerCase():a},vb=function(a){return D(a)?a.toUpperCase():a},za,F,na,va=[].slice,sg=[].splice,Tg=[].push,ma=Object.prototype.toString,Jc=Object.getPrototypeOf,Fa=M(\"ng\"),ea=w.angular||(w.angular={}),ac,rb=0;za=w.document.documentMode;var da=Number.isNaN||function(a){return a!==a};A.$inject=[];Ya.$inject=[];var H=Array.isArray,\n        qe=/^\\[object (?:Uint8|Uint8Clamped|Uint16|Uint32|Int8|Int16|Int32|Float32|Float64)Array]$/,S=function(a){return D(a)?a.trim():a},Kd=function(a){return a.replace(/([-()[\\]{}+?*.$^|,:#<!\\\\])/g,\"\\\\$1\").replace(/\\x08/g,\"\\\\x08\")},Ga=function(){if(!u(Ga.rules)){var a=w.document.querySelector(\"[ng-csp]\")||w.document.querySelector(\"[data-ng-csp]\");if(a){var b=a.getAttribute(\"ng-csp\")||a.getAttribute(\"data-ng-csp\");Ga.rules={noUnsafeEval:!b||-1!==b.indexOf(\"no-unsafe-eval\"),noInlineStyle:!b||-1!==b.indexOf(\"no-inline-style\")}}else{a=\n            Ga;try{new Function(\"\"),b=!1}catch(d){b=!0}a.rules={noUnsafeEval:b,noInlineStyle:!1}}}return Ga.rules},sb=function(){if(u(sb.name_))return sb.name_;var a,b,d=Ja.length,c,e;for(b=0;b<d;++b)if(c=Ja[b],a=w.document.querySelector(\"[\"+c.replace(\":\",\"\\\\:\")+\"jq]\")){e=a.getAttribute(c+\"jq\");break}return sb.name_=e},se=/:/g,Ja=[\"ng-\",\"data-ng-\",\"ng:\",\"x-ng-\"],ve=function(a){var b=a.currentScript;if(!b)return!0;if(!(b instanceof w.HTMLScriptElement||b instanceof w.SVGScriptElement))return!1;b=b.attributes;\n            return[b.getNamedItem(\"src\"),b.getNamedItem(\"href\"),b.getNamedItem(\"xlink:href\")].every(function(b){if(!b)return!0;if(!b.value)return!1;var c=a.createElement(\"a\");c.href=b.value;if(a.location.origin===c.origin)return!0;switch(c.protocol){case \"http:\":case \"https:\":case \"ftp:\":case \"blob:\":case \"file:\":case \"data:\":return!0;default:return!1}})}(w.document),ye=/[A-Z]/g,Rc=!1,Ia=3,De={full:\"1.6.3\",major:1,minor:6,dot:3,codeName:\"scriptalicious-bootstrapping\"};W.expando=\"ng339\";var ib=W.cache={},eg=1;\n    W._data=function(a){return this.cache[a[this.expando]]||{}};var ag=/-([a-z])/g,Ug=/^-ms-/,Ab={mouseleave:\"mouseout\",mouseenter:\"mouseover\"},cc=M(\"jqLite\"),dg=/^<([\\w-]+)\\s*\\/?>(?:<\\/\\1>|)$/,bc=/<|&#?\\w+;/,bg=/<([\\w:-]+)/,cg=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:-]+)[^>]*)\\/>/gi,ha={option:[1,'<select multiple=\"multiple\">',\"</select>\"],thead:[1,\"<table>\",\"</table>\"],col:[2,\"<table><colgroup>\",\"</colgroup></table>\"],tr:[2,\"<table><tbody>\",\"</tbody></table>\"],td:[3,\"<table><tbody><tr>\",\n        \"</tr></tbody></table>\"],_default:[0,\"\",\"\"]};ha.optgroup=ha.option;ha.tbody=ha.tfoot=ha.colgroup=ha.caption=ha.thead;ha.th=ha.td;var jg=w.Node.prototype.contains||function(a){return!!(this.compareDocumentPosition(a)&16)},Oa=W.prototype={ready:cd,toString:function(){var a=[];p(this,function(b){a.push(\"\"+b)});return\"[\"+a.join(\", \")+\"]\"},eq:function(a){return 0<=a?F(this[a]):F(this[this.length+a])},length:0,push:Tg,sort:[].sort,splice:[].splice},Gb={};p(\"multiple selected checked disabled readOnly required open\".split(\" \"),\n        function(a){Gb[P(a)]=a});var hd={};p(\"input select option textarea button form details\".split(\" \"),function(a){hd[a]=!0});var pd={ngMinlength:\"minlength\",ngMaxlength:\"maxlength\",ngMin:\"min\",ngMax:\"max\",ngPattern:\"pattern\",ngStep:\"step\"};p({data:fc,removeData:hb,hasData:function(a){for(var b in ib[a.ng339])return!0;return!1},cleanData:function(a){for(var b=0,d=a.length;b<d;b++)hb(a[b])}},function(a,b){W[b]=a});p({data:fc,inheritedData:Eb,scope:function(a){return F.data(a,\"$scope\")||Eb(a.parentNode||\n            a,[\"$isolateScope\",\"$scope\"])},isolateScope:function(a){return F.data(a,\"$isolateScope\")||F.data(a,\"$isolateScopeNoTemplate\")},controller:ed,injector:function(a){return Eb(a,\"$injector\")},removeAttr:function(a,b){a.removeAttribute(b)},hasClass:Bb,css:function(a,b,d){b=xb(b.replace(Ug,\"ms-\"));if(u(d))a.style[b]=d;else return a.style[b]},attr:function(a,b,d){var c=a.nodeType;if(c!==Ia&&2!==c&&8!==c&&a.getAttribute){var c=P(b),e=Gb[c];if(u(d))null===d||!1===d&&e?a.removeAttribute(b):a.setAttribute(b,\n            e?c:d);else return a=a.getAttribute(b),e&&null!==a&&(a=c),null===a?void 0:a}},prop:function(a,b,d){if(u(d))a[b]=d;else return a[b]},text:function(){function a(a,d){if(x(d)){var c=a.nodeType;return 1===c||c===Ia?a.textContent:\"\"}a.textContent=d}a.$dv=\"\";return a}(),val:function(a,b){if(x(b)){if(a.multiple&&\"select\"===wa(a)){var d=[];p(a.options,function(a){a.selected&&d.push(a.value||a.text)});return d}return a.value}a.value=b},html:function(a,b){if(x(b))return a.innerHTML;yb(a,!0);a.innerHTML=b},\n        empty:fd},function(a,b){W.prototype[b]=function(b,c){var e,f,g=this.length;if(a!==fd&&x(2===a.length&&a!==Bb&&a!==ed?b:c)){if(G(b)){for(e=0;e<g;e++)if(a===fc)a(this[e],b);else for(f in b)a(this[e],f,b[f]);return this}e=a.$dv;g=x(e)?Math.min(g,1):g;for(f=0;f<g;f++){var h=a(this[f],b,c);e=e?e+h:h}return e}for(e=0;e<g;e++)a(this[e],b,c);return this}});p({removeData:hb,on:function(a,b,d,c){if(u(c))throw cc(\"onargs\");if(ad(a)){c=zb(a,!0);var e=c.events,f=c.handle;f||(f=c.handle=gg(a,e));c=0<=b.indexOf(\" \")?\n        b.split(\" \"):[b];for(var g=c.length,h=function(b,c,g){var h=e[b];h||(h=e[b]=[],h.specialHandlerWrapper=c,\"$destroy\"===b||g||a.addEventListener(b,f));h.push(d)};g--;)b=c[g],Ab[b]?(h(Ab[b],ig),h(b,void 0,!0)):h(b)}},off:dd,one:function(a,b,d){a=F(a);a.on(b,function e(){a.off(b,d);a.off(b,e)});a.on(b,d)},replaceWith:function(a,b){var d,c=a.parentNode;yb(a);p(new W(b),function(b){d?c.insertBefore(b,d.nextSibling):c.replaceChild(b,a);d=b})},children:function(a){var b=[];p(a.childNodes,function(a){1===\n    a.nodeType&&b.push(a)});return b},contents:function(a){return a.contentDocument||a.childNodes||[]},append:function(a,b){var d=a.nodeType;if(1===d||11===d){b=new W(b);for(var d=0,c=b.length;d<c;d++)a.appendChild(b[d])}},prepend:function(a,b){if(1===a.nodeType){var d=a.firstChild;p(new W(b),function(b){a.insertBefore(b,d)})}},wrap:function(a,b){var d=F(b).eq(0).clone()[0],c=a.parentNode;c&&c.replaceChild(d,a);d.appendChild(a)},remove:Fb,detach:function(a){Fb(a,!0)},after:function(a,b){var d=a,c=a.parentNode;\n        if(c){b=new W(b);for(var e=0,f=b.length;e<f;e++){var g=b[e];c.insertBefore(g,d.nextSibling);d=g}}},addClass:Db,removeClass:Cb,toggleClass:function(a,b,d){b&&p(b.split(\" \"),function(b){var e=d;x(e)&&(e=!Bb(a,b));(e?Db:Cb)(a,b)})},parent:function(a){return(a=a.parentNode)&&11!==a.nodeType?a:null},next:function(a){return a.nextElementSibling},find:function(a,b){return a.getElementsByTagName?a.getElementsByTagName(b):[]},clone:ec,triggerHandler:function(a,b,d){var c,e,f=b.type||b,g=zb(a);if(g=(g=g&&g.events)&&\n            g[f])c={preventDefault:function(){this.defaultPrevented=!0},isDefaultPrevented:function(){return!0===this.defaultPrevented},stopImmediatePropagation:function(){this.immediatePropagationStopped=!0},isImmediatePropagationStopped:function(){return!0===this.immediatePropagationStopped},stopPropagation:A,type:f,target:a},b.type&&(c=R(c,b)),b=qa(g),e=d?[c].concat(d):[c],p(b,function(b){c.isImmediatePropagationStopped()||b.apply(a,e)})}},function(a,b){W.prototype[b]=function(b,c,e){for(var f,g=0,h=this.length;g<\n    h;g++)x(f)?(f=a(this[g],b,c,e),u(f)&&(f=F(f))):dc(f,a(this[g],b,c,e));return u(f)?f:this}});W.prototype.bind=W.prototype.on;W.prototype.unbind=W.prototype.off;var Vg=Object.create(null);id.prototype={_idx:function(a){if(a===this._lastKey)return this._lastIndex;this._lastKey=a;return this._lastIndex=this._keys.indexOf(a)},_transformKey:function(a){return da(a)?Vg:a},get:function(a){a=this._transformKey(a);a=this._idx(a);if(-1!==a)return this._values[a]},set:function(a,b){a=this._transformKey(a);var d=\n        this._idx(a);-1===d&&(d=this._lastIndex=this._keys.length);this._keys[d]=a;this._values[d]=b},delete:function(a){a=this._transformKey(a);a=this._idx(a);if(-1===a)return!1;this._keys.splice(a,1);this._values.splice(a,1);this._lastKey=NaN;this._lastIndex=-1;return!0}};var Hb=id,Zf=[function(){this.$get=[function(){return Hb}]}],lg=/^([^(]+?)=>/,mg=/^[^(]*\\(\\s*([^)]*)\\)/m,Wg=/,/,Xg=/^\\s*(_?)(\\S+?)\\1\\s*$/,kg=/((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/mg,ya=M(\"$injector\");eb.$$annotate=function(a,b,d){var c;if(\"function\"===\n        typeof a){if(!(c=a.$inject)){c=[];if(a.length){if(b)throw D(d)&&d||(d=a.name||ng(a)),ya(\"strictdi\",d);b=jd(a);p(b[1].split(Wg),function(a){a.replace(Xg,function(a,b,d){c.push(d)})})}a.$inject=c}}else H(a)?(b=a.length-1,tb(a[b],\"fn\"),c=a.slice(0,b)):tb(a,\"fn\",!0);return c};var fe=M(\"$animate\"),qf=function(){this.$get=A},rf=function(){var a=new Hb,b=[];this.$get=[\"$$AnimateRunner\",\"$rootScope\",function(d,c){function e(a,b,c){var d=!1;b&&(b=D(b)?b.split(\" \"):H(b)?b:[],p(b,function(b){b&&(d=!0,a[b]=c)}));\n        return d}function f(){p(b,function(b){var c=a.get(b);if(c){var d=og(b.attr(\"class\")),e=\"\",f=\"\";p(c,function(a,b){a!==!!d[b]&&(a?e+=(e.length?\" \":\"\")+b:f+=(f.length?\" \":\"\")+b)});p(b,function(a){e&&Db(a,e);f&&Cb(a,f)});a.delete(b)}});b.length=0}return{enabled:A,on:A,off:A,pin:A,push:function(g,h,k,l){l&&l();k=k||{};k.from&&g.css(k.from);k.to&&g.css(k.to);if(k.addClass||k.removeClass)if(h=k.addClass,l=k.removeClass,k=a.get(g)||{},h=e(k,h,!0),l=e(k,l,!1),h||l)a.set(g,k),b.push(g),1===b.length&&c.$$postDigest(f);\n        g=new d;g.complete();return g}}}]},of=[\"$provide\",function(a){var b=this,d=null;this.$$registeredAnimations=Object.create(null);this.register=function(c,d){if(c&&\".\"!==c.charAt(0))throw fe(\"notcsel\",c);var f=c+\"-animation\";b.$$registeredAnimations[c.substr(1)]=f;a.factory(f,d)};this.classNameFilter=function(a){if(1===arguments.length&&(d=a instanceof RegExp?a:null)&&/[(\\s|\\/)]ng-animate[(\\s|\\/)]/.test(d.toString()))throw d=null,fe(\"nongcls\",\"ng-animate\");return d};this.$get=[\"$$animateQueue\",function(a){function b(a,\nc,d){if(d){var e;a:{for(e=0;e<d.length;e++){var l=d[e];if(1===l.nodeType){e=l;break a}}e=void 0}!e||e.parentNode||e.previousElementSibling||(d=null)}d?d.after(a):c.prepend(a)}return{on:a.on,off:a.off,pin:a.pin,enabled:a.enabled,cancel:function(a){a.end&&a.end()},enter:function(d,g,h,k){g=g&&F(g);h=h&&F(h);g=g||h.parent();b(d,g,h);return a.push(d,\"enter\",ia(k))},move:function(d,g,h,k){g=g&&F(g);h=h&&F(h);g=g||h.parent();b(d,g,h);return a.push(d,\"move\",ia(k))},leave:function(b,d){return a.push(b,\"leave\",\n        ia(d),function(){b.remove()})},addClass:function(b,d,e){e=ia(e);e.addClass=jb(e.addclass,d);return a.push(b,\"addClass\",e)},removeClass:function(b,d,e){e=ia(e);e.removeClass=jb(e.removeClass,d);return a.push(b,\"removeClass\",e)},setClass:function(b,d,e,k){k=ia(k);k.addClass=jb(k.addClass,d);k.removeClass=jb(k.removeClass,e);return a.push(b,\"setClass\",k)},animate:function(b,d,e,k,l){l=ia(l);l.from=l.from?R(l.from,d):d;l.to=l.to?R(l.to,e):e;l.tempClasses=jb(l.tempClasses,k||\"ng-inline-animate\");return a.push(b,\n        \"animate\",l)}}}]}],tf=function(){this.$get=[\"$$rAF\",function(a){function b(b){d.push(b);1<d.length||a(function(){for(var a=0;a<d.length;a++)d[a]();d=[]})}var d=[];return function(){var a=!1;b(function(){a=!0});return function(d){a?d():b(d)}}}]},sf=function(){this.$get=[\"$q\",\"$sniffer\",\"$$animateAsyncRun\",\"$$isDocumentHidden\",\"$timeout\",function(a,b,d,c,e){function f(a){this.setHost(a);var b=d();this._doneCallbacks=[];this._tick=function(a){c()?e(a,0,!1):b(a)};this._state=0}f.chain=function(a,b){function c(){if(d===\n        a.length)b(!0);else a[d](function(a){!1===a?b(!1):(d++,c())})}var d=0;c()};f.all=function(a,b){function c(f){e=e&&f;++d===a.length&&b(e)}var d=0,e=!0;p(a,function(a){a.done(c)})};f.prototype={setHost:function(a){this.host=a||{}},done:function(a){2===this._state?a():this._doneCallbacks.push(a)},progress:A,getPromise:function(){if(!this.promise){var b=this;this.promise=a(function(a,c){b.done(function(b){!1===b?c():a()})})}return this.promise},then:function(a,b){return this.getPromise().then(a,b)},\"catch\":function(a){return this.getPromise()[\"catch\"](a)},\n        \"finally\":function(a){return this.getPromise()[\"finally\"](a)},pause:function(){this.host.pause&&this.host.pause()},resume:function(){this.host.resume&&this.host.resume()},end:function(){this.host.end&&this.host.end();this._resolve(!0)},cancel:function(){this.host.cancel&&this.host.cancel();this._resolve(!1)},complete:function(a){var b=this;0===b._state&&(b._state=1,b._tick(function(){b._resolve(a)}))},_resolve:function(a){2!==this._state&&(p(this._doneCallbacks,function(b){b(a)}),this._doneCallbacks.length=\n            0,this._state=2)}};return f}]},pf=function(){this.$get=[\"$$rAF\",\"$q\",\"$$AnimateRunner\",function(a,b,d){return function(b,e){function f(){a(function(){g.addClass&&(b.addClass(g.addClass),g.addClass=null);g.removeClass&&(b.removeClass(g.removeClass),g.removeClass=null);g.to&&(b.css(g.to),g.to=null);h||k.complete();h=!0});return k}var g=e||{};g.$$prepared||(g=sa(g));g.cleanupStyles&&(g.from=g.to=null);g.from&&(b.css(g.from),g.from=null);var h,k=new d;return{start:f,end:f}}}]},fa=M(\"$compile\"),jc=new function(){};\n    Tc.$inject=[\"$provide\",\"$$sanitizeUriProvider\"];Jb.prototype.isFirstChange=function(){return this.previousValue===jc};var kd=/^((?:x|data)[:\\-_])/i,rg=/[:\\-_]+(.)/g,rd=M(\"$controller\"),qd=/^(\\S+)(\\s+as\\s+([\\w$]+))?$/,Af=function(){this.$get=[\"$document\",function(a){return function(b){b?!b.nodeType&&b instanceof F&&(b=b[0]):b=a[0].body;return b.offsetWidth+1}}]},sd=\"application/json\",mc={\"Content-Type\":sd+\";charset=utf-8\"},ug=/^\\[|^\\{(?!\\{)/,vg={\"[\":/]$/,\"{\":/}$/},tg=/^\\)]\\}',?\\n/,xd=M(\"$http\"),Da=\n        ea.$interpolateMinErr=M(\"$interpolate\");Da.throwNoconcat=function(a){throw Da(\"noconcat\",a);};Da.interr=function(a,b){return Da(\"interr\",a,b.toString())};var If=function(){this.$get=function(){function a(a){var b=function(a){b.data=a;b.called=!0};b.id=a;return b}var b=ea.callbacks,d={};return{createCallback:function(c){c=\"_\"+(b.$$counter++).toString(36);var e=\"angular.callbacks.\"+c,f=a(c);d[e]=b[c]=f;return e},wasCalled:function(a){return d[a].called},getResponse:function(a){return d[a].data},removeCallback:function(a){delete b[d[a].id];\n        delete d[a]}}}},Yg=/^([^?#]*)(\\?([^#]*))?(#(.*))?$/,xg={http:80,https:443,ftp:21},lb=M(\"$location\"),yg=/^\\s*[\\\\/]{2,}/,Zg={$$absUrl:\"\",$$html5:!1,$$replace:!1,absUrl:Kb(\"$$absUrl\"),url:function(a){if(x(a))return this.$$url;var b=Yg.exec(a);(b[1]||\"\"===a)&&this.path(decodeURIComponent(b[1]));(b[2]||b[1]||\"\"===a)&&this.search(b[3]||\"\");this.hash(b[5]||\"\");return this},protocol:Kb(\"$$protocol\"),host:Kb(\"$$host\"),port:Kb(\"$$port\"),path:Bd(\"$$path\",function(a){a=null!==a?a.toString():\"\";return\"/\"===a.charAt(0)?\n        a:\"/\"+a}),search:function(a,b){switch(arguments.length){case 0:return this.$$search;case 1:if(D(a)||ba(a))a=a.toString(),this.$$search=Oc(a);else if(G(a))a=sa(a,{}),p(a,function(b,c){null==b&&delete a[c]}),this.$$search=a;else throw lb(\"isrcharg\");break;default:x(b)||null===b?delete this.$$search[a]:this.$$search[a]=b}this.$$compose();return this},hash:Bd(\"$$hash\",function(a){return null!==a?a.toString():\"\"}),replace:function(){this.$$replace=!0;return this}};p([Ad,qc,pc],function(a){a.prototype=\n        Object.create(Zg);a.prototype.state=function(b){if(!arguments.length)return this.$$state;if(a!==pc||!this.$$html5)throw lb(\"nostate\");this.$$state=x(b)?null:b;this.$$urlUpdatedByLocation=!0;return this}});var Ua=M(\"$parse\"),Bg={}.constructor.prototype.valueOf,Rb=V();p(\"+ - * / % === !== == != < > <= >= && || ! = |\".split(\" \"),function(a){Rb[a]=!0});var $g={n:\"\\n\",f:\"\\f\",r:\"\\r\",t:\"\\t\",v:\"\\v\",\"'\":\"'\",'\"':'\"'},sc=function(a){this.options=a};sc.prototype={constructor:sc,lex:function(a){this.text=a;this.index=\n        0;for(this.tokens=[];this.index<this.text.length;)if(a=this.text.charAt(this.index),'\"'===a||\"'\"===a)this.readString(a);else if(this.isNumber(a)||\".\"===a&&this.isNumber(this.peek()))this.readNumber();else if(this.isIdentifierStart(this.peekMultichar()))this.readIdent();else if(this.is(a,\"(){}[].,;:?\"))this.tokens.push({index:this.index,text:a}),this.index++;else if(this.isWhitespace(a))this.index++;else{var b=a+this.peek(),d=b+this.peek(2),c=Rb[b],e=Rb[d];Rb[a]||c||e?(a=e?d:c?b:a,this.tokens.push({index:this.index,\n            text:a,operator:!0}),this.index+=a.length):this.throwError(\"Unexpected next character \",this.index,this.index+1)}return this.tokens},is:function(a,b){return-1!==b.indexOf(a)},peek:function(a){a=a||1;return this.index+a<this.text.length?this.text.charAt(this.index+a):!1},isNumber:function(a){return\"0\"<=a&&\"9\">=a&&\"string\"===typeof a},isWhitespace:function(a){return\" \"===a||\"\\r\"===a||\"\\t\"===a||\"\\n\"===a||\"\\v\"===a||\"\\u00a0\"===a},isIdentifierStart:function(a){return this.options.isIdentifierStart?this.options.isIdentifierStart(a,\n            this.codePointAt(a)):this.isValidIdentifierStart(a)},isValidIdentifierStart:function(a){return\"a\"<=a&&\"z\">=a||\"A\"<=a&&\"Z\">=a||\"_\"===a||\"$\"===a},isIdentifierContinue:function(a){return this.options.isIdentifierContinue?this.options.isIdentifierContinue(a,this.codePointAt(a)):this.isValidIdentifierContinue(a)},isValidIdentifierContinue:function(a,b){return this.isValidIdentifierStart(a,b)||this.isNumber(a)},codePointAt:function(a){return 1===a.length?a.charCodeAt(0):(a.charCodeAt(0)<<10)+a.charCodeAt(1)-\n        56613888},peekMultichar:function(){var a=this.text.charAt(this.index),b=this.peek();if(!b)return a;var d=a.charCodeAt(0),c=b.charCodeAt(0);return 55296<=d&&56319>=d&&56320<=c&&57343>=c?a+b:a},isExpOperator:function(a){return\"-\"===a||\"+\"===a||this.isNumber(a)},throwError:function(a,b,d){d=d||this.index;b=u(b)?\"s \"+b+\"-\"+this.index+\" [\"+this.text.substring(b,d)+\"]\":\" \"+d;throw Ua(\"lexerr\",a,b,this.text);},readNumber:function(){for(var a=\"\",b=this.index;this.index<this.text.length;){var d=P(this.text.charAt(this.index));\n        if(\".\"===d||this.isNumber(d))a+=d;else{var c=this.peek();if(\"e\"===d&&this.isExpOperator(c))a+=d;else if(this.isExpOperator(d)&&c&&this.isNumber(c)&&\"e\"===a.charAt(a.length-1))a+=d;else if(!this.isExpOperator(d)||c&&this.isNumber(c)||\"e\"!==a.charAt(a.length-1))break;else this.throwError(\"Invalid exponent\")}this.index++}this.tokens.push({index:b,text:a,constant:!0,value:Number(a)})},readIdent:function(){var a=this.index;for(this.index+=this.peekMultichar().length;this.index<this.text.length;){var b=\n        this.peekMultichar();if(!this.isIdentifierContinue(b))break;this.index+=b.length}this.tokens.push({index:a,text:this.text.slice(a,this.index),identifier:!0})},readString:function(a){var b=this.index;this.index++;for(var d=\"\",c=a,e=!1;this.index<this.text.length;){var f=this.text.charAt(this.index),c=c+f;if(e)\"u\"===f?(e=this.text.substring(this.index+1,this.index+5),e.match(/[\\da-f]{4}/i)||this.throwError(\"Invalid unicode escape [\\\\u\"+e+\"]\"),this.index+=4,d+=String.fromCharCode(parseInt(e,16))):d+=\n            $g[f]||f,e=!1;else if(\"\\\\\"===f)e=!0;else{if(f===a){this.index++;this.tokens.push({index:b,text:c,constant:!0,value:d});return}d+=f}this.index++}this.throwError(\"Unterminated quote\",b)}};var s=function(a,b){this.lexer=a;this.options=b};s.Program=\"Program\";s.ExpressionStatement=\"ExpressionStatement\";s.AssignmentExpression=\"AssignmentExpression\";s.ConditionalExpression=\"ConditionalExpression\";s.LogicalExpression=\"LogicalExpression\";s.BinaryExpression=\"BinaryExpression\";s.UnaryExpression=\"UnaryExpression\";\n    s.CallExpression=\"CallExpression\";s.MemberExpression=\"MemberExpression\";s.Identifier=\"Identifier\";s.Literal=\"Literal\";s.ArrayExpression=\"ArrayExpression\";s.Property=\"Property\";s.ObjectExpression=\"ObjectExpression\";s.ThisExpression=\"ThisExpression\";s.LocalsExpression=\"LocalsExpression\";s.NGValueParameter=\"NGValueParameter\";s.prototype={ast:function(a){this.text=a;this.tokens=this.lexer.lex(a);a=this.program();0!==this.tokens.length&&this.throwError(\"is an unexpected token\",this.tokens[0]);return a},\n        program:function(){for(var a=[];;)if(0<this.tokens.length&&!this.peek(\"}\",\")\",\";\",\"]\")&&a.push(this.expressionStatement()),!this.expect(\";\"))return{type:s.Program,body:a}},expressionStatement:function(){return{type:s.ExpressionStatement,expression:this.filterChain()}},filterChain:function(){for(var a=this.expression();this.expect(\"|\");)a=this.filter(a);return a},expression:function(){return this.assignment()},assignment:function(){var a=this.ternary();if(this.expect(\"=\")){if(!Ed(a))throw Ua(\"lval\");\n            a={type:s.AssignmentExpression,left:a,right:this.assignment(),operator:\"=\"}}return a},ternary:function(){var a=this.logicalOR(),b,d;return this.expect(\"?\")&&(b=this.expression(),this.consume(\":\"))?(d=this.expression(),{type:s.ConditionalExpression,test:a,alternate:b,consequent:d}):a},logicalOR:function(){for(var a=this.logicalAND();this.expect(\"||\");)a={type:s.LogicalExpression,operator:\"||\",left:a,right:this.logicalAND()};return a},logicalAND:function(){for(var a=this.equality();this.expect(\"&&\");)a=\n            {type:s.LogicalExpression,operator:\"&&\",left:a,right:this.equality()};return a},equality:function(){for(var a=this.relational(),b;b=this.expect(\"==\",\"!=\",\"===\",\"!==\");)a={type:s.BinaryExpression,operator:b.text,left:a,right:this.relational()};return a},relational:function(){for(var a=this.additive(),b;b=this.expect(\"<\",\">\",\"<=\",\">=\");)a={type:s.BinaryExpression,operator:b.text,left:a,right:this.additive()};return a},additive:function(){for(var a=this.multiplicative(),b;b=this.expect(\"+\",\"-\");)a={type:s.BinaryExpression,\n            operator:b.text,left:a,right:this.multiplicative()};return a},multiplicative:function(){for(var a=this.unary(),b;b=this.expect(\"*\",\"/\",\"%\");)a={type:s.BinaryExpression,operator:b.text,left:a,right:this.unary()};return a},unary:function(){var a;return(a=this.expect(\"+\",\"-\",\"!\"))?{type:s.UnaryExpression,operator:a.text,prefix:!0,argument:this.unary()}:this.primary()},primary:function(){var a;this.expect(\"(\")?(a=this.filterChain(),this.consume(\")\")):this.expect(\"[\")?a=this.arrayDeclaration():this.expect(\"{\")?\n                    a=this.object():this.selfReferential.hasOwnProperty(this.peek().text)?a=sa(this.selfReferential[this.consume().text]):this.options.literals.hasOwnProperty(this.peek().text)?a={type:s.Literal,value:this.options.literals[this.consume().text]}:this.peek().identifier?a=this.identifier():this.peek().constant?a=this.constant():this.throwError(\"not a primary expression\",this.peek());for(var b;b=this.expect(\"(\",\"[\",\".\");)\"(\"===b.text?(a={type:s.CallExpression,callee:a,arguments:this.parseArguments()},this.consume(\")\")):\n            \"[\"===b.text?(a={type:s.MemberExpression,object:a,property:this.expression(),computed:!0},this.consume(\"]\")):\".\"===b.text?a={type:s.MemberExpression,object:a,property:this.identifier(),computed:!1}:this.throwError(\"IMPOSSIBLE\");return a},filter:function(a){a=[a];for(var b={type:s.CallExpression,callee:this.identifier(),arguments:a,filter:!0};this.expect(\":\");)a.push(this.expression());return b},parseArguments:function(){var a=[];if(\")\"!==this.peekToken().text){do a.push(this.filterChain());while(this.expect(\",\"))\n        }return a},identifier:function(){var a=this.consume();a.identifier||this.throwError(\"is not a valid identifier\",a);return{type:s.Identifier,name:a.text}},constant:function(){return{type:s.Literal,value:this.consume().value}},arrayDeclaration:function(){var a=[];if(\"]\"!==this.peekToken().text){do{if(this.peek(\"]\"))break;a.push(this.expression())}while(this.expect(\",\"))}this.consume(\"]\");return{type:s.ArrayExpression,elements:a}},object:function(){var a=[],b;if(\"}\"!==this.peekToken().text){do{if(this.peek(\"}\"))break;\n            b={type:s.Property,kind:\"init\"};this.peek().constant?(b.key=this.constant(),b.computed=!1,this.consume(\":\"),b.value=this.expression()):this.peek().identifier?(b.key=this.identifier(),b.computed=!1,this.peek(\":\")?(this.consume(\":\"),b.value=this.expression()):b.value=b.key):this.peek(\"[\")?(this.consume(\"[\"),b.key=this.expression(),this.consume(\"]\"),b.computed=!0,this.consume(\":\"),b.value=this.expression()):this.throwError(\"invalid key\",this.peek());a.push(b)}while(this.expect(\",\"))}this.consume(\"}\");\n            return{type:s.ObjectExpression,properties:a}},throwError:function(a,b){throw Ua(\"syntax\",b.text,a,b.index+1,this.text,this.text.substring(b.index));},consume:function(a){if(0===this.tokens.length)throw Ua(\"ueoe\",this.text);var b=this.expect(a);b||this.throwError(\"is unexpected, expecting [\"+a+\"]\",this.peek());return b},peekToken:function(){if(0===this.tokens.length)throw Ua(\"ueoe\",this.text);return this.tokens[0]},peek:function(a,b,d,c){return this.peekAhead(0,a,b,d,c)},peekAhead:function(a,b,d,c,\ne){if(this.tokens.length>a){a=this.tokens[a];var f=a.text;if(f===b||f===d||f===c||f===e||!(b||d||c||e))return a}return!1},expect:function(a,b,d,c){return(a=this.peek(a,b,d,c))?(this.tokens.shift(),a):!1},selfReferential:{\"this\":{type:s.ThisExpression},$locals:{type:s.LocalsExpression}}};Hd.prototype={compile:function(a){var b=this;a=this.astBuilder.ast(a);this.state={nextId:0,filters:{},fn:{vars:[],body:[],own:{}},assign:{vars:[],body:[],own:{}},inputs:[]};U(a,b.$filter);var d=\"\",c;this.stage=\"assign\";\n        if(c=Fd(a))this.state.computing=\"assign\",d=this.nextId(),this.recurse(c,d),this.return_(d),d=\"fn.assign=\"+this.generateFunction(\"assign\",\"s,v,l\");c=Dd(a.body);b.stage=\"inputs\";p(c,function(a,c){var d=\"fn\"+c;b.state[d]={vars:[],body:[],own:{}};b.state.computing=d;var h=b.nextId();b.recurse(a,h);b.return_(h);b.state.inputs.push(d);a.watchId=c});this.state.computing=\"fn\";this.stage=\"main\";this.recurse(a);d='\"'+this.USE+\" \"+this.STRICT+'\";\\n'+this.filterPrefix()+\"var fn=\"+this.generateFunction(\"fn\",\"s,l,a,i\")+\n            d+this.watchFns()+\"return fn;\";d=(new Function(\"$filter\",\"getStringValue\",\"ifDefined\",\"plus\",d))(this.$filter,zg,Ag,Cd);this.state=this.stage=void 0;d.literal=Gd(a);d.constant=a.constant;return d},USE:\"use\",STRICT:\"strict\",watchFns:function(){var a=[],b=this.state.inputs,d=this;p(b,function(b){a.push(\"var \"+b+\"=\"+d.generateFunction(b,\"s\"))});b.length&&a.push(\"fn.inputs=[\"+b.join(\",\")+\"];\");return a.join(\"\")},generateFunction:function(a,b){return\"function(\"+b+\"){\"+this.varsPrefix(a)+this.body(a)+\"};\"},\n        filterPrefix:function(){var a=[],b=this;p(this.state.filters,function(d,c){a.push(d+\"=$filter(\"+b.escape(c)+\")\")});return a.length?\"var \"+a.join(\",\")+\";\":\"\"},varsPrefix:function(a){return this.state[a].vars.length?\"var \"+this.state[a].vars.join(\",\")+\";\":\"\"},body:function(a){return this.state[a].body.join(\"\")},recurse:function(a,b,d,c,e,f){var g,h,k=this,l,m,n;c=c||A;if(!f&&u(a.watchId))b=b||this.nextId(),this.if_(\"i\",this.lazyAssign(b,this.computedMember(\"i\",a.watchId)),this.lazyRecurse(a,b,d,c,e,\n            !0));else switch(a.type){case s.Program:p(a.body,function(b,c){k.recurse(b.expression,void 0,void 0,function(a){h=a});c!==a.body.length-1?k.current().body.push(h,\";\"):k.return_(h)});break;case s.Literal:m=this.escape(a.value);this.assign(b,m);c(b||m);break;case s.UnaryExpression:this.recurse(a.argument,void 0,void 0,function(a){h=a});m=a.operator+\"(\"+this.ifDefined(h,0)+\")\";this.assign(b,m);c(m);break;case s.BinaryExpression:this.recurse(a.left,void 0,void 0,function(a){g=a});this.recurse(a.right,\n            void 0,void 0,function(a){h=a});m=\"+\"===a.operator?this.plus(g,h):\"-\"===a.operator?this.ifDefined(g,0)+a.operator+this.ifDefined(h,0):\"(\"+g+\")\"+a.operator+\"(\"+h+\")\";this.assign(b,m);c(m);break;case s.LogicalExpression:b=b||this.nextId();k.recurse(a.left,b);k.if_(\"&&\"===a.operator?b:k.not(b),k.lazyRecurse(a.right,b));c(b);break;case s.ConditionalExpression:b=b||this.nextId();k.recurse(a.test,b);k.if_(b,k.lazyRecurse(a.alternate,b),k.lazyRecurse(a.consequent,b));c(b);break;case s.Identifier:b=b||this.nextId();\n            d&&(d.context=\"inputs\"===k.stage?\"s\":this.assign(this.nextId(),this.getHasOwnProperty(\"l\",a.name)+\"?l:s\"),d.computed=!1,d.name=a.name);k.if_(\"inputs\"===k.stage||k.not(k.getHasOwnProperty(\"l\",a.name)),function(){k.if_(\"inputs\"===k.stage||\"s\",function(){e&&1!==e&&k.if_(k.isNull(k.nonComputedMember(\"s\",a.name)),k.lazyAssign(k.nonComputedMember(\"s\",a.name),\"{}\"));k.assign(b,k.nonComputedMember(\"s\",a.name))})},b&&k.lazyAssign(b,k.nonComputedMember(\"l\",a.name)));c(b);break;case s.MemberExpression:g=d&&\n            (d.context=this.nextId())||this.nextId();b=b||this.nextId();k.recurse(a.object,g,void 0,function(){k.if_(k.notNull(g),function(){a.computed?(h=k.nextId(),k.recurse(a.property,h),k.getStringValue(h),e&&1!==e&&k.if_(k.not(k.computedMember(g,h)),k.lazyAssign(k.computedMember(g,h),\"{}\")),m=k.computedMember(g,h),k.assign(b,m),d&&(d.computed=!0,d.name=h)):(e&&1!==e&&k.if_(k.isNull(k.nonComputedMember(g,a.property.name)),k.lazyAssign(k.nonComputedMember(g,a.property.name),\"{}\")),m=k.nonComputedMember(g,\n                a.property.name),k.assign(b,m),d&&(d.computed=!1,d.name=a.property.name))},function(){k.assign(b,\"undefined\")});c(b)},!!e);break;case s.CallExpression:b=b||this.nextId();a.filter?(h=k.filter(a.callee.name),l=[],p(a.arguments,function(a){var b=k.nextId();k.recurse(a,b);l.push(b)}),m=h+\"(\"+l.join(\",\")+\")\",k.assign(b,m),c(b)):(h=k.nextId(),g={},l=[],k.recurse(a.callee,h,g,function(){k.if_(k.notNull(h),function(){p(a.arguments,function(b){k.recurse(b,a.constant?void 0:k.nextId(),void 0,function(a){l.push(a)})});\n                m=g.name?k.member(g.context,g.name,g.computed)+\"(\"+l.join(\",\")+\")\":h+\"(\"+l.join(\",\")+\")\";k.assign(b,m)},function(){k.assign(b,\"undefined\")});c(b)}));break;case s.AssignmentExpression:h=this.nextId();g={};this.recurse(a.left,void 0,g,function(){k.if_(k.notNull(g.context),function(){k.recurse(a.right,h);m=k.member(g.context,g.name,g.computed)+a.operator+h;k.assign(b,m);c(b||m)})},1);break;case s.ArrayExpression:l=[];p(a.elements,function(b){k.recurse(b,a.constant?void 0:k.nextId(),void 0,function(a){l.push(a)})});\n            m=\"[\"+l.join(\",\")+\"]\";this.assign(b,m);c(b||m);break;case s.ObjectExpression:l=[];n=!1;p(a.properties,function(a){a.computed&&(n=!0)});n?(b=b||this.nextId(),this.assign(b,\"{}\"),p(a.properties,function(a){a.computed?(g=k.nextId(),k.recurse(a.key,g)):g=a.key.type===s.Identifier?a.key.name:\"\"+a.key.value;h=k.nextId();k.recurse(a.value,h);k.assign(k.member(b,g,a.computed),h)})):(p(a.properties,function(b){k.recurse(b.value,a.constant?void 0:k.nextId(),void 0,function(a){l.push(k.escape(b.key.type===s.Identifier?\n                    b.key.name:\"\"+b.key.value)+\":\"+a)})}),m=\"{\"+l.join(\",\")+\"}\",this.assign(b,m));c(b||m);break;case s.ThisExpression:this.assign(b,\"s\");c(b||\"s\");break;case s.LocalsExpression:this.assign(b,\"l\");c(b||\"l\");break;case s.NGValueParameter:this.assign(b,\"v\"),c(b||\"v\")}},getHasOwnProperty:function(a,b){var d=a+\".\"+b,c=this.current().own;c.hasOwnProperty(d)||(c[d]=this.nextId(!1,a+\"&&(\"+this.escape(b)+\" in \"+a+\")\"));return c[d]},assign:function(a,b){if(a)return this.current().body.push(a,\"=\",b,\";\"),a},filter:function(a){this.state.filters.hasOwnProperty(a)||\n        (this.state.filters[a]=this.nextId(!0));return this.state.filters[a]},ifDefined:function(a,b){return\"ifDefined(\"+a+\",\"+this.escape(b)+\")\"},plus:function(a,b){return\"plus(\"+a+\",\"+b+\")\"},return_:function(a){this.current().body.push(\"return \",a,\";\")},if_:function(a,b,d){if(!0===a)b();else{var c=this.current().body;c.push(\"if(\",a,\"){\");b();c.push(\"}\");d&&(c.push(\"else{\"),d(),c.push(\"}\"))}},not:function(a){return\"!(\"+a+\")\"},isNull:function(a){return a+\"==null\"},notNull:function(a){return a+\"!=null\"},nonComputedMember:function(a,\nb){var d=/[^$_a-zA-Z0-9]/g;return/^[$_a-zA-Z][$_a-zA-Z0-9]*$/.test(b)?a+\".\"+b:a+'[\"'+b.replace(d,this.stringEscapeFn)+'\"]'},computedMember:function(a,b){return a+\"[\"+b+\"]\"},member:function(a,b,d){return d?this.computedMember(a,b):this.nonComputedMember(a,b)},getStringValue:function(a){this.assign(a,\"getStringValue(\"+a+\")\")},lazyRecurse:function(a,b,d,c,e,f){var g=this;return function(){g.recurse(a,b,d,c,e,f)}},lazyAssign:function(a,b){var d=this;return function(){d.assign(a,b)}},stringEscapeRegex:/[^ a-zA-Z0-9]/g,\n        stringEscapeFn:function(a){return\"\\\\u\"+(\"0000\"+a.charCodeAt(0).toString(16)).slice(-4)},escape:function(a){if(D(a))return\"'\"+a.replace(this.stringEscapeRegex,this.stringEscapeFn)+\"'\";if(ba(a))return a.toString();if(!0===a)return\"true\";if(!1===a)return\"false\";if(null===a)return\"null\";if(\"undefined\"===typeof a)return\"undefined\";throw Ua(\"esc\");},nextId:function(a,b){var d=\"v\"+this.state.nextId++;a||this.current().vars.push(d+(b?\"=\"+b:\"\"));return d},current:function(){return this.state[this.state.computing]}};\n    Id.prototype={compile:function(a){var b=this;a=this.astBuilder.ast(a);U(a,b.$filter);var d,c;if(d=Fd(a))c=this.recurse(d);d=Dd(a.body);var e;d&&(e=[],p(d,function(a,c){var d=b.recurse(a);a.input=d;e.push(d);a.watchId=c}));var f=[];p(a.body,function(a){f.push(b.recurse(a.expression))});d=0===a.body.length?A:1===a.body.length?f[0]:function(a,b){var c;p(f,function(d){c=d(a,b)});return c};c&&(d.assign=function(a,b,d){return c(a,d,b)});e&&(d.inputs=e);d.literal=Gd(a);d.constant=a.constant;return d},recurse:function(a,\nb,d){var c,e,f=this,g;if(a.input)return this.inputs(a.input,a.watchId);switch(a.type){case s.Literal:return this.value(a.value,b);case s.UnaryExpression:return e=this.recurse(a.argument),this[\"unary\"+a.operator](e,b);case s.BinaryExpression:return c=this.recurse(a.left),e=this.recurse(a.right),this[\"binary\"+a.operator](c,e,b);case s.LogicalExpression:return c=this.recurse(a.left),e=this.recurse(a.right),this[\"binary\"+a.operator](c,e,b);case s.ConditionalExpression:return this[\"ternary?:\"](this.recurse(a.test),\n        this.recurse(a.alternate),this.recurse(a.consequent),b);case s.Identifier:return f.identifier(a.name,b,d);case s.MemberExpression:return c=this.recurse(a.object,!1,!!d),a.computed||(e=a.property.name),a.computed&&(e=this.recurse(a.property)),a.computed?this.computedMember(c,e,b,d):this.nonComputedMember(c,e,b,d);case s.CallExpression:return g=[],p(a.arguments,function(a){g.push(f.recurse(a))}),a.filter&&(e=this.$filter(a.callee.name)),a.filter||(e=this.recurse(a.callee,!0)),a.filter?function(a,c,\nd,f){for(var n=[],q=0;q<g.length;++q)n.push(g[q](a,c,d,f));a=e.apply(void 0,n,f);return b?{context:void 0,name:void 0,value:a}:a}:function(a,c,d,f){var n=e(a,c,d,f),q;if(null!=n.value){q=[];for(var r=0;r<g.length;++r)q.push(g[r](a,c,d,f));q=n.value.apply(n.context,q)}return b?{value:q}:q};case s.AssignmentExpression:return c=this.recurse(a.left,!0,1),e=this.recurse(a.right),function(a,d,f,g){var n=c(a,d,f,g);a=e(a,d,f,g);n.context[n.name]=a;return b?{value:a}:a};case s.ArrayExpression:return g=[],\n        p(a.elements,function(a){g.push(f.recurse(a))}),function(a,c,d,e){for(var f=[],q=0;q<g.length;++q)f.push(g[q](a,c,d,e));return b?{value:f}:f};case s.ObjectExpression:return g=[],p(a.properties,function(a){a.computed?g.push({key:f.recurse(a.key),computed:!0,value:f.recurse(a.value)}):g.push({key:a.key.type===s.Identifier?a.key.name:\"\"+a.key.value,computed:!1,value:f.recurse(a.value)})}),function(a,c,d,e){for(var f={},q=0;q<g.length;++q)g[q].computed?f[g[q].key(a,c,d,e)]=g[q].value(a,c,d,e):f[g[q].key]=\n            g[q].value(a,c,d,e);return b?{value:f}:f};case s.ThisExpression:return function(a){return b?{value:a}:a};case s.LocalsExpression:return function(a,c){return b?{value:c}:c};case s.NGValueParameter:return function(a,c,d){return b?{value:d}:d}}},\"unary+\":function(a,b){return function(d,c,e,f){d=a(d,c,e,f);d=u(d)?+d:0;return b?{value:d}:d}},\"unary-\":function(a,b){return function(d,c,e,f){d=a(d,c,e,f);d=u(d)?-d:-0;return b?{value:d}:d}},\"unary!\":function(a,b){return function(d,c,e,f){d=!a(d,c,e,f);return b?\n        {value:d}:d}},\"binary+\":function(a,b,d){return function(c,e,f,g){var h=a(c,e,f,g);c=b(c,e,f,g);h=Cd(h,c);return d?{value:h}:h}},\"binary-\":function(a,b,d){return function(c,e,f,g){var h=a(c,e,f,g);c=b(c,e,f,g);h=(u(h)?h:0)-(u(c)?c:0);return d?{value:h}:h}},\"binary*\":function(a,b,d){return function(c,e,f,g){c=a(c,e,f,g)*b(c,e,f,g);return d?{value:c}:c}},\"binary/\":function(a,b,d){return function(c,e,f,g){c=a(c,e,f,g)/b(c,e,f,g);return d?{value:c}:c}},\"binary%\":function(a,b,d){return function(c,e,f,g){c=\n        a(c,e,f,g)%b(c,e,f,g);return d?{value:c}:c}},\"binary===\":function(a,b,d){return function(c,e,f,g){c=a(c,e,f,g)===b(c,e,f,g);return d?{value:c}:c}},\"binary!==\":function(a,b,d){return function(c,e,f,g){c=a(c,e,f,g)!==b(c,e,f,g);return d?{value:c}:c}},\"binary==\":function(a,b,d){return function(c,e,f,g){c=a(c,e,f,g)==b(c,e,f,g);return d?{value:c}:c}},\"binary!=\":function(a,b,d){return function(c,e,f,g){c=a(c,e,f,g)!=b(c,e,f,g);return d?{value:c}:c}},\"binary<\":function(a,b,d){return function(c,e,f,g){c=\n        a(c,e,f,g)<b(c,e,f,g);return d?{value:c}:c}},\"binary>\":function(a,b,d){return function(c,e,f,g){c=a(c,e,f,g)>b(c,e,f,g);return d?{value:c}:c}},\"binary<=\":function(a,b,d){return function(c,e,f,g){c=a(c,e,f,g)<=b(c,e,f,g);return d?{value:c}:c}},\"binary>=\":function(a,b,d){return function(c,e,f,g){c=a(c,e,f,g)>=b(c,e,f,g);return d?{value:c}:c}},\"binary&&\":function(a,b,d){return function(c,e,f,g){c=a(c,e,f,g)&&b(c,e,f,g);return d?{value:c}:c}},\"binary||\":function(a,b,d){return function(c,e,f,g){c=a(c,\n            e,f,g)||b(c,e,f,g);return d?{value:c}:c}},\"ternary?:\":function(a,b,d,c){return function(e,f,g,h){e=a(e,f,g,h)?b(e,f,g,h):d(e,f,g,h);return c?{value:e}:e}},value:function(a,b){return function(){return b?{context:void 0,name:void 0,value:a}:a}},identifier:function(a,b,d){return function(c,e,f,g){c=e&&a in e?e:c;d&&1!==d&&c&&null==c[a]&&(c[a]={});e=c?c[a]:void 0;return b?{context:c,name:a,value:e}:e}},computedMember:function(a,b,d,c){return function(e,f,g,h){var k=a(e,f,g,h),l,m;null!=k&&(l=b(e,f,g,\n        h),l+=\"\",c&&1!==c&&k&&!k[l]&&(k[l]={}),m=k[l]);return d?{context:k,name:l,value:m}:m}},nonComputedMember:function(a,b,d,c){return function(e,f,g,h){e=a(e,f,g,h);c&&1!==c&&e&&null==e[b]&&(e[b]={});f=null!=e?e[b]:void 0;return d?{context:e,name:b,value:f}:f}},inputs:function(a,b){return function(d,c,e,f){return f?f[b]:a(d,c,e)}}};var tc=function(a,b,d){this.lexer=a;this.$filter=b;this.options=d;this.ast=new s(a,d);this.astCompiler=d.csp?new Id(this.ast,b):new Hd(this.ast,b)};tc.prototype={constructor:tc,\n        parse:function(a){return this.astCompiler.compile(a)}};var ta=M(\"$sce\"),oa={HTML:\"html\",CSS:\"css\",URL:\"url\",RESOURCE_URL:\"resourceUrl\",JS:\"js\"},uc=/_([a-z])/g,Dg=M(\"$compile\"),aa=w.document.createElement(\"a\"),Md=Ca(w.location.href);Nd.$inject=[\"$document\"];$c.$inject=[\"$provide\"];var Ud=22,Td=\".\",wc=\"0\";Od.$inject=[\"$locale\"];Qd.$inject=[\"$locale\"];var Og={yyyy:Y(\"FullYear\",4,0,!1,!0),yy:Y(\"FullYear\",2,0,!0,!0),y:Y(\"FullYear\",1,0,!1,!0),MMMM:nb(\"Month\"),MMM:nb(\"Month\",!0),MM:Y(\"Month\",2,1),M:Y(\"Month\",\n        1,1),LLLL:nb(\"Month\",!1,!0),dd:Y(\"Date\",2),d:Y(\"Date\",1),HH:Y(\"Hours\",2),H:Y(\"Hours\",1),hh:Y(\"Hours\",2,-12),h:Y(\"Hours\",1,-12),mm:Y(\"Minutes\",2),m:Y(\"Minutes\",1),ss:Y(\"Seconds\",2),s:Y(\"Seconds\",1),sss:Y(\"Milliseconds\",3),EEEE:nb(\"Day\"),EEE:nb(\"Day\",!0),a:function(a,b){return 12>a.getHours()?b.AMPMS[0]:b.AMPMS[1]},Z:function(a,b,d){a=-1*d;return a=(0<=a?\"+\":\"\")+(Lb(Math[0<a?\"floor\":\"ceil\"](a/60),2)+Lb(Math.abs(a%60),2))},ww:Wd(2),w:Wd(1),G:xc,GG:xc,GGG:xc,GGGG:function(a,b){return 0>=a.getFullYear()?\n        b.ERANAMES[0]:b.ERANAMES[1]}},Ng=/((?:[^yMLdHhmsaZEwG']+)|(?:'(?:[^']|'')*')|(?:E+|y+|M+|L+|d+|H+|h+|m+|s+|a|Z|G+|w+))(.*)/,Mg=/^-?\\d+$/;Pd.$inject=[\"$locale\"];var Hg=la(P),Ig=la(vb);Rd.$inject=[\"$parse\"];var Fe=la({restrict:\"E\",compile:function(a,b){if(!b.href&&!b.xlinkHref)return function(a,b){if(\"a\"===b[0].nodeName.toLowerCase()){var e=\"[object SVGAnimatedString]\"===ma.call(b.prop(\"href\"))?\"xlink:href\":\"href\";b.on(\"click\",function(a){b.attr(e)||a.preventDefault()})}}}}),wb={};p(Gb,function(a,b){function d(a,\nd,e){a.$watch(e[c],function(a){e.$set(b,!!a)})}if(\"multiple\"!==a){var c=Ba(\"ng-\"+b),e=d;\"checked\"===a&&(e=function(a,b,e){e.ngModel!==e[c]&&d(a,b,e)});wb[c]=function(){return{restrict:\"A\",priority:100,link:e}}}});p(pd,function(a,b){wb[b]=function(){return{priority:100,link:function(a,c,e){if(\"ngPattern\"===b&&\"/\"===e.ngPattern.charAt(0)&&(c=e.ngPattern.match(Sg))){e.$set(\"ngPattern\",new RegExp(c[1],c[2]));return}a.$watch(e[b],function(a){e.$set(b,a)})}}}});p([\"src\",\"srcset\",\"href\"],function(a){var b=\n        Ba(\"ng-\"+a);wb[b]=function(){return{priority:99,link:function(d,c,e){var f=a,g=a;\"href\"===a&&\"[object SVGAnimatedString]\"===ma.call(c.prop(\"href\"))&&(g=\"xlinkHref\",e.$attr[g]=\"xlink:href\",f=null);e.$observe(b,function(b){b?(e.$set(g,b),za&&f&&c.prop(f,e[g])):\"href\"===a&&e.$set(g,null)})}}}});var Nb={$addControl:A,$$renameControl:function(a,b){a.$name=b},$removeControl:A,$setValidity:A,$setDirty:A,$setPristine:A,$setSubmitted:A};Mb.$inject=[\"$element\",\"$attrs\",\"$scope\",\"$animate\",\"$interpolate\"];Mb.prototype=\n        {$rollbackViewValue:function(){p(this.$$controls,function(a){a.$rollbackViewValue()})},$commitViewValue:function(){p(this.$$controls,function(a){a.$commitViewValue()})},$addControl:function(a){Ka(a.$name,\"input\");this.$$controls.push(a);a.$name&&(this[a.$name]=a);a.$$parentForm=this},$$renameControl:function(a,b){var d=a.$name;this[d]===a&&delete this[d];this[b]=a;a.$name=b},$removeControl:function(a){a.$name&&this[a.$name]===a&&delete this[a.$name];p(this.$pending,function(b,d){this.$setValidity(d,\n            null,a)},this);p(this.$error,function(b,d){this.$setValidity(d,null,a)},this);p(this.$$success,function(b,d){this.$setValidity(d,null,a)},this);$a(this.$$controls,a);a.$$parentForm=Nb},$setDirty:function(){this.$$animate.removeClass(this.$$element,Va);this.$$animate.addClass(this.$$element,Sb);this.$dirty=!0;this.$pristine=!1;this.$$parentForm.$setDirty()},$setPristine:function(){this.$$animate.setClass(this.$$element,Va,Sb+\" ng-submitted\");this.$dirty=!1;this.$pristine=!0;this.$submitted=!1;p(this.$$controls,\n            function(a){a.$setPristine()})},$setUntouched:function(){p(this.$$controls,function(a){a.$setUntouched()})},$setSubmitted:function(){this.$$animate.addClass(this.$$element,\"ng-submitted\");this.$submitted=!0;this.$$parentForm.$setSubmitted()}};Zd({clazz:Mb,set:function(a,b,d){var c=a[b];c?-1===c.indexOf(d)&&c.push(d):a[b]=[d]},unset:function(a,b,d){var c=a[b];c&&($a(c,d),0===c.length&&delete a[b])}});var ge=function(a){return[\"$timeout\",\"$parse\",function(b,d){function c(a){return\"\"===a?d('this[\"\"]').assign:\n            d(a).assign||A}return{name:\"form\",restrict:a?\"EAC\":\"E\",require:[\"form\",\"^^?form\"],controller:Mb,compile:function(d,f){d.addClass(Va).addClass(ob);var g=f.name?\"name\":a&&f.ngForm?\"ngForm\":!1;return{pre:function(a,d,e,f){var n=f[0];if(!(\"action\"in e)){var q=function(b){a.$apply(function(){n.$commitViewValue();n.$setSubmitted()});b.preventDefault()};d[0].addEventListener(\"submit\",q);d.on(\"$destroy\",function(){b(function(){d[0].removeEventListener(\"submit\",q)},0,!1)})}(f[1]||n.$$parentForm).$addControl(n);\n            var r=g?c(n.$name):A;g&&(r(a,n),e.$observe(g,function(b){n.$name!==b&&(r(a,void 0),n.$$parentForm.$$renameControl(n,b),r=c(n.$name),r(a,n))}));d.on(\"$destroy\",function(){n.$$parentForm.$removeControl(n);r(a,void 0);R(n,Nb)})}}}}}]},Ge=ge(),Se=ge(!0),Pg=/^\\d{4,}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d+(?:[+-][0-2]\\d:[0-5]\\d|Z)$/,ah=/^[a-z][a-z\\d.+-]*:\\/*(?:[^:@]+(?::[^@]+)?@)?(?:[^\\s:/?#]+|\\[[a-f\\d:]+])(?::\\d+)?(?:\\/[^?#]*)?(?:\\?[^#]*)?(?:#.*)?$/i,bh=/^(?=.{1,254}$)(?=.{1,64}@)[-!#$%&'*+/0-9=?A-Z^_`a-z{|}~]+(\\.[-!#$%&'*+/0-9=?A-Z^_`a-z{|}~]+)*@[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?(\\.[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?)*$/,\n        Qg=/^\\s*(-|\\+)?(\\d+|(\\d*(\\.\\d*)))([eE][+-]?\\d+)?\\s*$/,he=/^(\\d{4,})-(\\d{2})-(\\d{2})$/,ie=/^(\\d{4,})-(\\d\\d)-(\\d\\d)T(\\d\\d):(\\d\\d)(?::(\\d\\d)(\\.\\d{1,3})?)?$/,Ec=/^(\\d{4,})-W(\\d\\d)$/,je=/^(\\d{4,})-(\\d\\d)$/,ke=/^(\\d\\d):(\\d\\d)(?::(\\d\\d)(\\.\\d{1,3})?)?$/,ae=V();p([\"date\",\"datetime-local\",\"month\",\"time\",\"week\"],function(a){ae[a]=!0});var le={text:function(a,b,d,c,e,f){Ra(a,b,d,c,e,f);zc(c)},date:pb(\"date\",he,Ob(he,[\"yyyy\",\"MM\",\"dd\"]),\"yyyy-MM-dd\"),\"datetime-local\":pb(\"datetimelocal\",ie,Ob(ie,\"yyyy MM dd HH mm ss sss\".split(\" \")),\n        \"yyyy-MM-ddTHH:mm:ss.sss\"),time:pb(\"time\",ke,Ob(ke,[\"HH\",\"mm\",\"ss\",\"sss\"]),\"HH:mm:ss.sss\"),week:pb(\"week\",Ec,function(a,b){if(ga(a))return a;if(D(a)){Ec.lastIndex=0;var d=Ec.exec(a);if(d){var c=+d[1],e=+d[2],f=d=0,g=0,h=0,k=Vd(c),e=7*(e-1);b&&(d=b.getHours(),f=b.getMinutes(),g=b.getSeconds(),h=b.getMilliseconds());return new Date(c,0,k.getDate()+e,d,f,g,h)}}return NaN},\"yyyy-Www\"),month:pb(\"month\",je,Ob(je,[\"yyyy\",\"MM\"]),\"yyyy-MM\"),number:function(a,b,d,c,e,f){Ac(a,b,d,c);be(c);Ra(a,b,d,c,e,f);var g,\n        h;if(u(d.min)||d.ngMin)c.$validators.min=function(a){return c.$isEmpty(a)||x(g)||a>=g},d.$observe(\"min\",function(a){g=Sa(a);c.$validate()});if(u(d.max)||d.ngMax)c.$validators.max=function(a){return c.$isEmpty(a)||x(h)||a<=h},d.$observe(\"max\",function(a){h=Sa(a);c.$validate()});if(u(d.step)||d.ngStep){var k;c.$validators.step=function(a,b){return c.$isEmpty(b)||x(k)||ce(b,g||0,k)};d.$observe(\"step\",function(a){k=Sa(a);c.$validate()})}},url:function(a,b,d,c,e,f){Ra(a,b,d,c,e,f);zc(c);c.$$parserName=\n        \"url\";c.$validators.url=function(a,b){var d=a||b;return c.$isEmpty(d)||ah.test(d)}},email:function(a,b,d,c,e,f){Ra(a,b,d,c,e,f);zc(c);c.$$parserName=\"email\";c.$validators.email=function(a,b){var d=a||b;return c.$isEmpty(d)||bh.test(d)}},radio:function(a,b,d,c){var e=!d.ngTrim||\"false\"!==S(d.ngTrim);x(d.name)&&b.attr(\"name\",++rb);b.on(\"click\",function(a){var g;b[0].checked&&(g=d.value,e&&(g=S(g)),c.$setViewValue(g,a&&a.type))});c.$render=function(){var a=d.value;e&&(a=S(a));b[0].checked=a===c.$viewValue};\n        d.$observe(\"value\",c.$render)},range:function(a,b,d,c,e,f){function g(a,c){b.attr(a,d[a]);d.$observe(a,c)}function h(a){n=Sa(a);da(c.$modelValue)||(m?(a=b.val(),n>a&&(a=n,b.val(a)),c.$setViewValue(a)):c.$validate())}function k(a){q=Sa(a);da(c.$modelValue)||(m?(a=b.val(),q<a&&(b.val(q),a=q<n?n:q),c.$setViewValue(a)):c.$validate())}function l(a){r=Sa(a);da(c.$modelValue)||(m&&c.$viewValue!==b.val()?c.$setViewValue(b.val()):c.$validate())}Ac(a,b,d,c);be(c);Ra(a,b,d,c,e,f);var m=c.$$hasNativeValidators&&\n        \"range\"===b[0].type,n=m?0:void 0,q=m?100:void 0,r=m?1:void 0,p=b[0].validity;a=u(d.min);e=u(d.max);f=u(d.step);var s=c.$render;c.$render=m&&u(p.rangeUnderflow)&&u(p.rangeOverflow)?function(){s();c.$setViewValue(b.val())}:s;a&&(c.$validators.min=m?function(){return!0}:function(a,b){return c.$isEmpty(b)||x(n)||b>=n},g(\"min\",h));e&&(c.$validators.max=m?function(){return!0}:function(a,b){return c.$isEmpty(b)||x(q)||b<=q},g(\"max\",k));f&&(c.$validators.step=m?function(){return!p.stepMismatch}:function(a,\nb){return c.$isEmpty(b)||x(r)||ce(b,n||0,r)},g(\"step\",l))},checkbox:function(a,b,d,c,e,f,g,h){var k=de(h,a,\"ngTrueValue\",d.ngTrueValue,!0),l=de(h,a,\"ngFalseValue\",d.ngFalseValue,!1);b.on(\"click\",function(a){c.$setViewValue(b[0].checked,a&&a.type)});c.$render=function(){b[0].checked=c.$viewValue};c.$isEmpty=function(a){return!1===a};c.$formatters.push(function(a){return pa(a,k)});c.$parsers.push(function(a){return a?k:l})},hidden:A,button:A,submit:A,reset:A,file:A},Uc=[\"$browser\",\"$sniffer\",\"$filter\",\n        \"$parse\",function(a,b,d,c){return{restrict:\"E\",require:[\"?ngModel\"],link:{pre:function(e,f,g,h){h[0]&&(le[P(g.type)]||le.text)(e,f,g,h[0],b,a,d,c)}}}}],ch=/^(true|false|\\d+)$/,kf=function(){function a(a,d,c){var e=u(c)?c:9===za?\"\":null;a.prop(\"value\",e);d.$set(\"value\",c)}return{restrict:\"A\",priority:100,compile:function(b,d){return ch.test(d.ngValue)?function(b,d,f){b=b.$eval(f.ngValue);a(d,f,b)}:function(b,d,f){b.$watch(f.ngValue,function(b){a(d,f,b)})}}}},Ke=[\"$compile\",function(a){return{restrict:\"AC\",\n        compile:function(b){a.$$addBindingClass(b);return function(b,c,e){a.$$addBindingInfo(c,e.ngBind);c=c[0];b.$watch(e.ngBind,function(a){c.textContent=$b(a)})}}}}],Me=[\"$interpolate\",\"$compile\",function(a,b){return{compile:function(d){b.$$addBindingClass(d);return function(c,d,f){c=a(d.attr(f.$attr.ngBindTemplate));b.$$addBindingInfo(d,c.expressions);d=d[0];f.$observe(\"ngBindTemplate\",function(a){d.textContent=x(a)?\"\":a})}}}}],Le=[\"$sce\",\"$parse\",\"$compile\",function(a,b,d){return{restrict:\"A\",compile:function(c,\ne){var f=b(e.ngBindHtml),g=b(e.ngBindHtml,function(b){return a.valueOf(b)});d.$$addBindingClass(c);return function(b,c,e){d.$$addBindingInfo(c,e.ngBindHtml);b.$watch(g,function(){var d=f(b);c.html(a.getTrustedHtml(d)||\"\")})}}}}],jf=la({restrict:\"A\",require:\"ngModel\",link:function(a,b,d,c){c.$viewChangeListeners.push(function(){a.$eval(d.ngChange)})}}),Ne=Cc(\"\",!0),Pe=Cc(\"Odd\",0),Oe=Cc(\"Even\",1),Qe=Qa({compile:function(a,b){b.$set(\"ngCloak\",void 0);a.removeClass(\"ng-cloak\")}}),Re=[function(){return{restrict:\"A\",\n        scope:!0,controller:\"@\",priority:500}}],Zc={},dh={blur:!0,focus:!0};p(\"click dblclick mousedown mouseup mouseover mouseout mousemove mouseenter mouseleave keydown keyup keypress submit focus blur copy cut paste\".split(\" \"),function(a){var b=Ba(\"ng-\"+a);Zc[b]=[\"$parse\",\"$rootScope\",function(d,c){return{restrict:\"A\",compile:function(e,f){var g=d(f[b]);return function(b,d){d.on(a,function(d){var e=function(){g(b,{$event:d})};dh[a]&&c.$$phase?b.$evalAsync(e):b.$apply(e)})}}}}]});var Ue=[\"$animate\",\"$compile\",\n        function(a,b){return{multiElement:!0,transclude:\"element\",priority:600,terminal:!0,restrict:\"A\",$$tlb:!0,link:function(d,c,e,f,g){var h,k,l;d.$watch(e.ngIf,function(d){d?k||g(function(d,f){k=f;d[d.length++]=b.$$createComment(\"end ngIf\",e.ngIf);h={clone:d};a.enter(d,c.parent(),c)}):(l&&(l.remove(),l=null),k&&(k.$destroy(),k=null),h&&(l=ub(h.clone),a.leave(l).done(function(a){!1!==a&&(l=null)}),h=null))})}}}],Ve=[\"$templateRequest\",\"$anchorScroll\",\"$animate\",function(a,b,d){return{restrict:\"ECA\",priority:400,\n        terminal:!0,transclude:\"element\",controller:ea.noop,compile:function(c,e){var f=e.ngInclude||e.src,g=e.onload||\"\",h=e.autoscroll;return function(c,e,m,n,q){var r=0,p,s,t,x=function(){s&&(s.remove(),s=null);p&&(p.$destroy(),p=null);t&&(d.leave(t).done(function(a){!1!==a&&(s=null)}),s=t,t=null)};c.$watch(f,function(f){var m=function(a){!1===a||!u(h)||h&&!c.$eval(h)||b()},s=++r;f?(a(f,!0).then(function(a){if(!c.$$destroyed&&s===r){var b=c.$new();n.template=a;a=q(b,function(a){x();d.enter(a,null,e).done(m)});\n                p=b;t=a;p.$emit(\"$includeContentLoaded\",f);c.$eval(g)}},function(){c.$$destroyed||s!==r||(x(),c.$emit(\"$includeContentError\",f))}),c.$emit(\"$includeContentRequested\",f)):(x(),n.template=null)})}}}}],mf=[\"$compile\",function(a){return{restrict:\"ECA\",priority:-400,require:\"ngInclude\",link:function(b,d,c,e){ma.call(d[0]).match(/SVG/)?(d.empty(),a(bd(e.template,w.document).childNodes)(b,function(a){d.append(a)},{futureParentElement:d})):(d.html(e.template),a(d.contents())(b))}}}],We=Qa({priority:450,compile:function(){return{pre:function(a,\nb,d){a.$eval(d.ngInit)}}}}),hf=function(){return{restrict:\"A\",priority:100,require:\"ngModel\",link:function(a,b,d,c){var e=d.ngList||\", \",f=\"false\"!==d.ngTrim,g=f?S(e):e;c.$parsers.push(function(a){if(!x(a)){var b=[];a&&p(a.split(g),function(a){a&&b.push(f?S(a):a)});return b}});c.$formatters.push(function(a){if(H(a))return a.join(e)});c.$isEmpty=function(a){return!a||!a.length}}}},ob=\"ng-valid\",Yd=\"ng-invalid\",Va=\"ng-pristine\",Sb=\"ng-dirty\",qb=M(\"ngModel\");Pb.$inject=\"$scope $exceptionHandler $attrs $element $parse $animate $timeout $q $interpolate\".split(\" \");\n    Pb.prototype={$$initGetterSetters:function(){if(this.$options.getOption(\"getterSetter\")){var a=this.$$parse(this.$$attr.ngModel+\"()\"),b=this.$$parse(this.$$attr.ngModel+\"($$$p)\");this.$$ngModelGet=function(b){var c=this.$$parsedNgModel(b);E(c)&&(c=a(b));return c};this.$$ngModelSet=function(a,c){E(this.$$parsedNgModel(a))?b(a,{$$$p:c}):this.$$parsedNgModelAssign(a,c)}}else if(!this.$$parsedNgModel.assign)throw qb(\"nonassign\",this.$$attr.ngModel,xa(this.$$element));},$render:A,$isEmpty:function(a){return x(a)||\n        \"\"===a||null===a||a!==a},$$updateEmptyClasses:function(a){this.$isEmpty(a)?(this.$$animate.removeClass(this.$$element,\"ng-not-empty\"),this.$$animate.addClass(this.$$element,\"ng-empty\")):(this.$$animate.removeClass(this.$$element,\"ng-empty\"),this.$$animate.addClass(this.$$element,\"ng-not-empty\"))},$setPristine:function(){this.$dirty=!1;this.$pristine=!0;this.$$animate.removeClass(this.$$element,Sb);this.$$animate.addClass(this.$$element,Va)},$setDirty:function(){this.$dirty=!0;this.$pristine=!1;this.$$animate.removeClass(this.$$element,\n        Va);this.$$animate.addClass(this.$$element,Sb);this.$$parentForm.$setDirty()},$setUntouched:function(){this.$touched=!1;this.$untouched=!0;this.$$animate.setClass(this.$$element,\"ng-untouched\",\"ng-touched\")},$setTouched:function(){this.$touched=!0;this.$untouched=!1;this.$$animate.setClass(this.$$element,\"ng-touched\",\"ng-untouched\")},$rollbackViewValue:function(){this.$$timeout.cancel(this.$$pendingDebounce);this.$viewValue=this.$$lastCommittedViewValue;this.$render()},$validate:function(){if(!da(this.$modelValue)){var a=\n        this.$$lastCommittedViewValue,b=this.$$rawModelValue,d=this.$valid,c=this.$modelValue,e=this.$options.getOption(\"allowInvalid\"),f=this;this.$$runValidators(b,a,function(a){e||d===a||(f.$modelValue=a?b:void 0,f.$modelValue!==c&&f.$$writeModelToScope())})}},$$runValidators:function(a,b,d){function c(){var c=!0;p(k.$validators,function(d,e){var g=Boolean(d(a,b));c=c&&g;f(e,g)});return c?!0:(p(k.$asyncValidators,function(a,b){f(b,null)}),!1)}function e(){var c=[],d=!0;p(k.$asyncValidators,function(e,\ng){var k=e(a,b);if(!k||!E(k.then))throw qb(\"nopromise\",k);f(g,void 0);c.push(k.then(function(){f(g,!0)},function(){d=!1;f(g,!1)}))});c.length?k.$$q.all(c).then(function(){g(d)},A):g(!0)}function f(a,b){h===k.$$currentValidationRunId&&k.$setValidity(a,b)}function g(a){h===k.$$currentValidationRunId&&d(a)}this.$$currentValidationRunId++;var h=this.$$currentValidationRunId,k=this;(function(){var a=k.$$parserName||\"parse\";if(x(k.$$parserValid))f(a,null);else return k.$$parserValid||(p(k.$validators,function(a,\nb){f(b,null)}),p(k.$asyncValidators,function(a,b){f(b,null)})),f(a,k.$$parserValid),k.$$parserValid;return!0})()?c()?e():g(!1):g(!1)},$commitViewValue:function(){var a=this.$viewValue;this.$$timeout.cancel(this.$$pendingDebounce);if(this.$$lastCommittedViewValue!==a||\"\"===a&&this.$$hasNativeValidators)this.$$updateEmptyClasses(a),this.$$lastCommittedViewValue=a,this.$pristine&&this.$setDirty(),this.$$parseAndValidate()},$$parseAndValidate:function(){var a=this.$$lastCommittedViewValue,b=this;if(this.$$parserValid=\n            x(a)?void 0:!0)for(var d=0;d<this.$parsers.length;d++)if(a=this.$parsers[d](a),x(a)){this.$$parserValid=!1;break}da(this.$modelValue)&&(this.$modelValue=this.$$ngModelGet(this.$$scope));var c=this.$modelValue,e=this.$options.getOption(\"allowInvalid\");this.$$rawModelValue=a;e&&(this.$modelValue=a,b.$modelValue!==c&&b.$$writeModelToScope());this.$$runValidators(a,this.$$lastCommittedViewValue,function(d){e||(b.$modelValue=d?a:void 0,b.$modelValue!==c&&b.$$writeModelToScope())})},$$writeModelToScope:function(){this.$$ngModelSet(this.$$scope,\n        this.$modelValue);p(this.$viewChangeListeners,function(a){try{a()}catch(b){this.$$exceptionHandler(b)}},this)},$setViewValue:function(a,b){this.$viewValue=a;this.$options.getOption(\"updateOnDefault\")&&this.$$debounceViewValueCommit(b)},$$debounceViewValueCommit:function(a){var b=this.$options.getOption(\"debounce\");ba(b[a])?b=b[a]:ba(b[\"default\"])&&(b=b[\"default\"]);this.$$timeout.cancel(this.$$pendingDebounce);var d=this;0<b?this.$$pendingDebounce=this.$$timeout(function(){d.$commitViewValue()},b):\n        this.$$scope.$root.$$phase?this.$commitViewValue():this.$$scope.$apply(function(){d.$commitViewValue()})},$overrideModelOptions:function(a){this.$options=this.$options.createChild(a)}};Zd({clazz:Pb,set:function(a,b){a[b]=!0},unset:function(a,b){delete a[b]}});var gf=[\"$rootScope\",function(a){return{restrict:\"A\",require:[\"ngModel\",\"^?form\",\"^?ngModelOptions\"],controller:Pb,priority:1,compile:function(b){b.addClass(Va).addClass(\"ng-untouched\").addClass(ob);return{pre:function(a,b,e,f){var g=f[0];b=\n            f[1]||g.$$parentForm;if(f=f[2])g.$options=f.$options;g.$$initGetterSetters();b.$addControl(g);e.$observe(\"name\",function(a){g.$name!==a&&g.$$parentForm.$$renameControl(g,a)});a.$on(\"$destroy\",function(){g.$$parentForm.$removeControl(g)})},post:function(b,c,e,f){function g(){h.$setTouched()}var h=f[0];if(h.$options.getOption(\"updateOn\"))c.on(h.$options.getOption(\"updateOn\"),function(a){h.$$debounceViewValueCommit(a&&a.type)});c.on(\"blur\",function(){h.$touched||(a.$$phase?b.$evalAsync(g):b.$apply(g))})}}}}}],\n        Qb,eh=/(\\s+|^)default(\\s+|$)/;Dc.prototype={getOption:function(a){return this.$$options[a]},createChild:function(a){var b=!1;a=R({},a);p(a,function(d,c){\"$inherit\"===d?\"*\"===c?b=!0:(a[c]=this.$$options[c],\"updateOn\"===c&&(a.updateOnDefault=this.$$options.updateOnDefault)):\"updateOn\"===c&&(a.updateOnDefault=!1,a[c]=S(d.replace(eh,function(){a.updateOnDefault=!0;return\" \"})))},this);b&&(delete a[\"*\"],ee(a,this.$$options));ee(a,Qb.$$options);return new Dc(a)}};Qb=new Dc({updateOn:\"\",updateOnDefault:!0,\n        debounce:0,getterSetter:!1,allowInvalid:!1,timezone:null});var lf=function(){function a(a,d){this.$$attrs=a;this.$$scope=d}a.$inject=[\"$attrs\",\"$scope\"];a.prototype={$onInit:function(){var a=this.parentCtrl?this.parentCtrl.$options:Qb,d=this.$$scope.$eval(this.$$attrs.ngModelOptions);this.$options=a.createChild(d)}};return{restrict:\"A\",priority:10,require:{parentCtrl:\"?^^ngModelOptions\"},bindToController:!0,controller:a}},Xe=Qa({terminal:!0,priority:1E3}),fh=M(\"ngOptions\"),gh=/^\\s*([\\s\\S]+?)(?:\\s+as\\s+([\\s\\S]+?))?(?:\\s+group\\s+by\\s+([\\s\\S]+?))?(?:\\s+disable\\s+when\\s+([\\s\\S]+?))?\\s+for\\s+(?:([$\\w][$\\w]*)|(?:\\(\\s*([$\\w][$\\w]*)\\s*,\\s*([$\\w][$\\w]*)\\s*\\)))\\s+in\\s+([\\s\\S]+?)(?:\\s+track\\s+by\\s+([\\s\\S]+?))?$/,\n        ef=[\"$compile\",\"$document\",\"$parse\",function(a,b,d){function c(a,b,c){function e(a,b,c,d,f){this.selectValue=a;this.viewValue=b;this.label=c;this.group=d;this.disabled=f}function f(a){var b;if(!p&&ra(a))b=a;else{b=[];for(var c in a)a.hasOwnProperty(c)&&\"$\"!==c.charAt(0)&&b.push(c)}return b}var n=a.match(gh);if(!n)throw fh(\"iexp\",a,xa(b));var q=n[5]||n[7],p=n[6];a=/ as /.test(n[0])&&n[1];var s=n[9];b=d(n[2]?n[1]:q);var u=a&&d(a)||b,t=s&&d(s),x=s?function(a,b){return t(c,b)}:function(a){return Pa(a)},\n            y=function(a,b){return x(a,C(a,b))},v=d(n[2]||n[1]),w=d(n[3]||\"\"),B=d(n[4]||\"\"),J=d(n[8]),L={},C=p?function(a,b){L[p]=b;L[q]=a;return L}:function(a){L[q]=a;return L};return{trackBy:s,getTrackByValue:y,getWatchables:d(J,function(a){var b=[];a=a||[];for(var d=f(a),e=d.length,g=0;g<e;g++){var h=a===d?g:d[g],l=a[h],h=C(l,h),l=x(l,h);b.push(l);if(n[2]||n[1])l=v(c,h),b.push(l);n[4]&&(h=B(c,h),b.push(h))}return b}),getOptions:function(){for(var a=[],b={},d=J(c)||[],g=f(d),h=g.length,n=0;n<h;n++){var q=d===\n        g?n:g[n],p=C(d[q],q),r=u(c,p),q=x(r,p),t=v(c,p),L=w(c,p),p=B(c,p),r=new e(q,r,t,L,p);a.push(r);b[q]=r}return{items:a,selectValueMap:b,getOptionFromViewValue:function(a){return b[y(a)]},getViewValueFromOption:function(a){return s?sa(a.viewValue):a.viewValue}}}}}var e=w.document.createElement(\"option\"),f=w.document.createElement(\"optgroup\");return{restrict:\"A\",terminal:!0,require:[\"select\",\"ngModel\"],link:{pre:function(a,b,c,d){d[0].registerOption=A},post:function(d,h,k,l){function m(a){var b=(a=v.getOptionFromViewValue(a))&&\n            a.element;b&&!b.selected&&(b.selected=!0);return a}function n(a,b){a.element=b;b.disabled=a.disabled;a.label!==b.label&&(b.label=a.label,b.textContent=a.label);b.value=a.selectValue}function q(){var a=v&&r.readValue();if(v)for(var b=v.items.length-1;0<=b;b--){var c=v.items[b];u(c.group)?Fb(c.element.parentNode):Fb(c.element)}v=A.getOptions();var d={};y&&h.prepend(r.emptyOption);v.items.forEach(function(a){var b;if(u(a.group)){b=d[a.group];b||(b=f.cloneNode(!1),B.appendChild(b),b.label=null===a.group?\n            \"null\":a.group,d[a.group]=b);var c=e.cloneNode(!1)}else b=B,c=e.cloneNode(!1);b.appendChild(c);n(a,c)});h[0].appendChild(B);s.$render();s.$isEmpty(a)||(b=r.readValue(),(A.trackBy||x?pa(a,b):a===b)||(s.$setViewValue(b),s.$render()))}var r=l[0],s=l[1],x=k.multiple;l=0;for(var t=h.children(),w=t.length;l<w;l++)if(\"\"===t[l].value){r.hasEmptyOption=!0;r.emptyOption=t.eq(l);break}var y=!!r.emptyOption;F(e.cloneNode(!1)).val(\"?\");var v,A=c(k.ngOptions,h,d),B=b[0].createDocumentFragment();r.generateUnknownOptionValue=\n            function(a){return\"?\"};x?(r.writeValue=function(a){var b=a&&a.map(m)||[];v.items.forEach(function(a){a.element.selected&&-1===Array.prototype.indexOf.call(b,a)&&(a.element.selected=!1)})},r.readValue=function(){var a=h.val()||[],b=[];p(a,function(a){(a=v.selectValueMap[a])&&!a.disabled&&b.push(v.getViewValueFromOption(a))});return b},A.trackBy&&d.$watchCollection(function(){if(H(s.$viewValue))return s.$viewValue.map(function(a){return A.getTrackByValue(a)})},function(){s.$render()})):(r.writeValue=\n                function(a){var b=v.selectValueMap[h.val()],c=v.getOptionFromViewValue(a);b&&b.element.removeAttribute(\"selected\");c?(h[0].value!==c.selectValue&&(r.removeUnknownOption(),r.unselectEmptyOption(),h[0].value=c.selectValue,c.element.selected=!0),c.element.setAttribute(\"selected\",\"selected\")):y?r.selectEmptyOption():r.unknownOption.parent().length?r.updateUnknownOption(a):r.renderUnknownOption(a)},r.readValue=function(){var a=v.selectValueMap[h.val()];return a&&!a.disabled?(r.unselectEmptyOption(),r.removeUnknownOption(),\n                    v.getViewValueFromOption(a)):null},A.trackBy&&d.$watch(function(){return A.getTrackByValue(s.$viewValue)},function(){s.$render()}));y&&(r.emptyOption.remove(),a(r.emptyOption)(d),8===r.emptyOption[0].nodeType?(r.hasEmptyOption=!1,r.registerOption=function(a,b){\"\"===b.val()&&(r.hasEmptyOption=!0,r.emptyOption=b,r.emptyOption.removeClass(\"ng-scope\"),s.$render(),b.on(\"$destroy\",function(){r.hasEmptyOption=!1;r.emptyOption=void 0}))}):r.emptyOption.removeClass(\"ng-scope\"));h.empty();q();d.$watchCollection(A.getWatchables,\n            q)}}}}],Ye=[\"$locale\",\"$interpolate\",\"$log\",function(a,b,d){var c=/{}/g,e=/^when(Minus)?(.+)$/;return{link:function(f,g,h){function k(a){g.text(a||\"\")}var l=h.count,m=h.$attr.when&&g.attr(h.$attr.when),n=h.offset||0,q=f.$eval(m)||{},r={},s=b.startSymbol(),u=b.endSymbol(),t=s+l+\"-\"+n+u,w=ea.noop,y;p(h,function(a,b){var c=e.exec(b);c&&(c=(c[1]?\"-\":\"\")+P(c[2]),q[c]=g.attr(h.$attr[b]))});p(q,function(a,d){r[d]=b(a.replace(c,t))});f.$watch(l,function(b){var c=parseFloat(b),e=da(c);e||c in q||(c=a.pluralCat(c-\n            n));c===y||e&&da(y)||(w(),e=r[c],x(e)?(null!=b&&d.debug(\"ngPluralize: no rule defined for '\"+c+\"' in \"+m),w=A,k()):w=f.$watch(e,k),y=c)})}}}],Ze=[\"$parse\",\"$animate\",\"$compile\",function(a,b,d){var c=M(\"ngRepeat\"),e=function(a,b,c,d,e,m,n){a[c]=d;e&&(a[e]=m);a.$index=b;a.$first=0===b;a.$last=b===n-1;a.$middle=!(a.$first||a.$last);a.$odd=!(a.$even=0===(b&1))};return{restrict:\"A\",multiElement:!0,transclude:\"element\",priority:1E3,terminal:!0,$$tlb:!0,compile:function(f,g){var h=g.ngRepeat,k=d.$$createComment(\"end ngRepeat\",\n            h),l=h.match(/^\\s*([\\s\\S]+?)\\s+in\\s+([\\s\\S]+?)(?:\\s+as\\s+([\\s\\S]+?))?(?:\\s+track\\s+by\\s+([\\s\\S]+?))?\\s*$/);if(!l)throw c(\"iexp\",h);var m=l[1],n=l[2],q=l[3],r=l[4],l=m.match(/^(?:(\\s*[$\\w]+)|\\(\\s*([$\\w]+)\\s*,\\s*([$\\w]+)\\s*\\))$/);if(!l)throw c(\"iidexp\",m);var s=l[3]||l[1],u=l[2];if(q&&(!/^[$a-zA-Z_][$a-zA-Z0-9_]*$/.test(q)||/^(null|undefined|this|\\$index|\\$first|\\$middle|\\$last|\\$even|\\$odd|\\$parent|\\$root|\\$id)$/.test(q)))throw c(\"badident\",q);var t,x,y,v,w={$id:Pa};r?t=a(r):(y=function(a,b){return Pa(b)},\n                v=function(a){return a});return function(a,d,f,g,l){t&&(x=function(b,c,d){u&&(w[u]=b);w[s]=c;w.$index=d;return t(a,w)});var m=V();a.$watchCollection(n,function(f){var g,n,r=d[0],t,w=V(),A,E,F,D,G,C,H;q&&(a[q]=f);if(ra(f))G=f,n=x||y;else for(H in n=x||v,G=[],f)ua.call(f,H)&&\"$\"!==H.charAt(0)&&G.push(H);A=G.length;H=Array(A);for(g=0;g<A;g++)if(E=f===G?g:G[g],F=f[E],D=n(E,F,g),m[D])C=m[D],delete m[D],w[D]=C,H[g]=C;else{if(w[D])throw p(H,function(a){a&&a.scope&&(m[a.id]=a)}),c(\"dupes\",h,D,F);H[g]={id:D,\n            scope:void 0,clone:void 0};w[D]=!0}for(t in m){C=m[t];D=ub(C.clone);b.leave(D);if(D[0].parentNode)for(g=0,n=D.length;g<n;g++)D[g].$$NG_REMOVED=!0;C.scope.$destroy()}for(g=0;g<A;g++)if(E=f===G?g:G[g],F=f[E],C=H[g],C.scope){t=r;do t=t.nextSibling;while(t&&t.$$NG_REMOVED);C.clone[0]!==t&&b.move(ub(C.clone),null,r);r=C.clone[C.clone.length-1];e(C.scope,g,s,F,u,E,A)}else l(function(a,c){C.scope=c;var d=k.cloneNode(!1);a[a.length++]=d;b.enter(a,null,r);r=d;C.clone=a;w[C.id]=C;e(C.scope,g,s,F,u,E,A)});m=\n            w})}}}}],$e=[\"$animate\",function(a){return{restrict:\"A\",multiElement:!0,link:function(b,d,c){b.$watch(c.ngShow,function(b){a[b?\"removeClass\":\"addClass\"](d,\"ng-hide\",{tempClasses:\"ng-hide-animate\"})})}}}],Te=[\"$animate\",function(a){return{restrict:\"A\",multiElement:!0,link:function(b,d,c){b.$watch(c.ngHide,function(b){a[b?\"addClass\":\"removeClass\"](d,\"ng-hide\",{tempClasses:\"ng-hide-animate\"})})}}}],af=Qa(function(a,b,d){a.$watch(d.ngStyle,function(a,d){d&&a!==d&&p(d,function(a,c){b.css(c,\"\")});a&&b.css(a)},\n            !0)}),bf=[\"$animate\",\"$compile\",function(a,b){return{require:\"ngSwitch\",controller:[\"$scope\",function(){this.cases={}}],link:function(d,c,e,f){var g=[],h=[],k=[],l=[],m=function(a,b){return function(c){!1!==c&&a.splice(b,1)}};d.$watch(e.ngSwitch||e.on,function(c){for(var d,e;k.length;)a.cancel(k.pop());d=0;for(e=l.length;d<e;++d){var s=ub(h[d].clone);l[d].$destroy();(k[d]=a.leave(s)).done(m(k,d))}h.length=0;l.length=0;(g=f.cases[\"!\"+c]||f.cases[\"?\"])&&p(g,function(c){c.transclude(function(d,e){l.push(e);\n            var f=c.element;d[d.length++]=b.$$createComment(\"end ngSwitchWhen\");h.push({clone:d});a.enter(d,f.parent(),f)})})})}}}],cf=Qa({transclude:\"element\",priority:1200,require:\"^ngSwitch\",multiElement:!0,link:function(a,b,d,c,e){a=d.ngSwitchWhen.split(d.ngSwitchWhenSeparator).sort().filter(function(a,b,c){return c[b-1]!==a});p(a,function(a){c.cases[\"!\"+a]=c.cases[\"!\"+a]||[];c.cases[\"!\"+a].push({transclude:e,element:b})})}}),df=Qa({transclude:\"element\",priority:1200,require:\"^ngSwitch\",multiElement:!0,link:function(a,\nb,d,c,e){c.cases[\"?\"]=c.cases[\"?\"]||[];c.cases[\"?\"].push({transclude:e,element:b})}}),hh=M(\"ngTransclude\"),ff=[\"$compile\",function(a){return{restrict:\"EAC\",terminal:!0,compile:function(b){var d=a(b.contents());b.empty();return function(a,b,f,g,h){function k(){d(a,function(a){b.append(a)})}if(!h)throw hh(\"orphan\",xa(b));f.ngTransclude===f.$attr.ngTransclude&&(f.ngTransclude=\"\");f=f.ngTransclude||f.ngTranscludeSlot;h(function(a,c){var d;if(d=a.length)a:{d=0;for(var f=a.length;d<f;d++){var g=a[d];if(g.nodeType!==\n            Ia||g.nodeValue.trim()){d=!0;break a}}d=void 0}d?b.append(a):(k(),c.$destroy())},null,f);f&&!h.isSlotFilled(f)&&k()}}}}],He=[\"$templateCache\",function(a){return{restrict:\"E\",terminal:!0,compile:function(b,d){\"text/ng-template\"===d.type&&a.put(d.id,b[0].text)}}}],ih={$setViewValue:A,$render:A},jh=[\"$element\",\"$scope\",function(a,b){function d(){g||(g=!0,b.$$postDigest(function(){g=!1;e.ngModelCtrl.$render()}))}function c(a){h||(h=!0,b.$$postDigest(function(){b.$$destroyed||(h=!1,e.ngModelCtrl.$setViewValue(e.readValue()),\n        a&&e.ngModelCtrl.$render())}))}var e=this,f=new Hb;e.selectValueMap={};e.ngModelCtrl=ih;e.multiple=!1;e.unknownOption=F(w.document.createElement(\"option\"));e.hasEmptyOption=!1;e.emptyOption=void 0;e.renderUnknownOption=function(b){b=e.generateUnknownOptionValue(b);e.unknownOption.val(b);a.prepend(e.unknownOption);Ta(e.unknownOption,!0);a.val(b)};e.updateUnknownOption=function(b){b=e.generateUnknownOptionValue(b);e.unknownOption.val(b);Ta(e.unknownOption,!0);a.val(b)};e.generateUnknownOptionValue=\n            function(a){return\"? \"+Pa(a)+\" ?\"};e.removeUnknownOption=function(){e.unknownOption.parent()&&e.unknownOption.remove()};e.selectEmptyOption=function(){e.emptyOption&&(a.val(\"\"),Ta(e.emptyOption,!0))};e.unselectEmptyOption=function(){e.hasEmptyOption&&e.emptyOption.removeAttr(\"selected\")};b.$on(\"$destroy\",function(){e.renderUnknownOption=A});e.readValue=function(){var b=a.val(),b=b in e.selectValueMap?e.selectValueMap[b]:b;return e.hasOption(b)?b:null};e.writeValue=function(b){var c=a[0].options[a[0].selectedIndex];\n            c&&Ta(F(c),!1);e.hasOption(b)?(e.removeUnknownOption(),c=Pa(b),a.val(c in e.selectValueMap?c:b),Ta(F(a[0].options[a[0].selectedIndex]),!0)):null==b&&e.emptyOption?(e.removeUnknownOption(),e.selectEmptyOption()):e.unknownOption.parent().length?e.updateUnknownOption(b):e.renderUnknownOption(b)};e.addOption=function(a,b){if(8!==b[0].nodeType){Ka(a,'\"option value\"');\"\"===a&&(e.hasEmptyOption=!0,e.emptyOption=b);var c=f.get(a)||0;f.set(a,c+1);d()}};e.removeOption=function(a){var b=f.get(a);b&&(1===b?(f.delete(a),\n            \"\"===a&&(e.hasEmptyOption=!1,e.emptyOption=void 0)):f.set(a,b-1))};e.hasOption=function(a){return!!f.get(a)};var g=!1,h=!1;e.registerOption=function(a,b,f,g,h){if(f.$attr.ngValue){var p,s=NaN;f.$observe(\"value\",function(a){var d,f=b.prop(\"selected\");u(s)&&(e.removeOption(p),delete e.selectValueMap[s],d=!0);s=Pa(a);p=a;e.selectValueMap[s]=a;e.addOption(a,b);b.attr(\"value\",s);d&&f&&c()})}else g?f.$observe(\"value\",function(a){e.readValue();var d,f=b.prop(\"selected\");u(p)&&(e.removeOption(p),d=!0);p=\n                a;e.addOption(a,b);d&&f&&c()}):h?a.$watch(h,function(a,d){f.$set(\"value\",a);var g=b.prop(\"selected\");d!==a&&e.removeOption(d);e.addOption(a,b);d&&g&&c()}):e.addOption(f.value,b);f.$observe(\"disabled\",function(a){if(\"true\"===a||a&&b.prop(\"selected\"))e.multiple?c(!0):(e.ngModelCtrl.$setViewValue(null),e.ngModelCtrl.$render())});b.on(\"$destroy\",function(){var a=e.readValue(),b=f.value;e.removeOption(b);d();(e.multiple&&a&&-1!==a.indexOf(b)||a===b)&&c(!0)})}}],Ie=function(){return{restrict:\"E\",require:[\"select\",\n            \"?ngModel\"],controller:jh,priority:1,link:{pre:function(a,b,d,c){var e=c[0],f=c[1];if(f){if(e.ngModelCtrl=f,b.on(\"change\",function(){e.removeUnknownOption();a.$apply(function(){f.$setViewValue(e.readValue())})}),d.multiple){e.multiple=!0;e.readValue=function(){var a=[];p(b.find(\"option\"),function(b){b.selected&&!b.disabled&&(b=b.value,a.push(b in e.selectValueMap?e.selectValueMap[b]:b))});return a};e.writeValue=function(a){p(b.find(\"option\"),function(b){var c=!!a&&(-1!==Array.prototype.indexOf.call(a,\n                b.value)||-1!==Array.prototype.indexOf.call(a,e.selectValueMap[b.value]));c!==b.selected&&Ta(F(b),c)})};var g,h=NaN;a.$watch(function(){h!==f.$viewValue||pa(g,f.$viewValue)||(g=qa(f.$viewValue),f.$render());h=f.$viewValue});f.$isEmpty=function(a){return!a||0===a.length}}}else e.registerOption=A},post:function(a,b,d,c){var e=c[1];if(e){var f=c[0];e.$render=function(){f.writeValue(e.$viewValue)}}}}}},Je=[\"$interpolate\",function(a){return{restrict:\"E\",priority:100,compile:function(b,d){var c,e;u(d.ngValue)||\n        (u(d.value)?c=a(d.value,!0):(e=a(b.text(),!0))||d.$set(\"value\",b.text()));return function(a,b,d){var k=b.parent();(k=k.data(\"$selectController\")||k.parent().data(\"$selectController\"))&&k.registerOption(a,b,d,c,e)}}}}],Wc=function(){return{restrict:\"A\",require:\"?ngModel\",link:function(a,b,d,c){c&&(d.required=!0,c.$validators.required=function(a,b){return!d.required||!c.$isEmpty(b)},d.$observe(\"required\",function(){c.$validate()}))}}},Vc=function(){return{restrict:\"A\",require:\"?ngModel\",link:function(a,\nb,d,c){if(c){var e,f=d.ngPattern||d.pattern;d.$observe(\"pattern\",function(a){D(a)&&0<a.length&&(a=new RegExp(\"^\"+a+\"$\"));if(a&&!a.test)throw M(\"ngPattern\")(\"noregexp\",f,a,xa(b));e=a||void 0;c.$validate()});c.$validators.pattern=function(a,b){return c.$isEmpty(b)||x(e)||e.test(b)}}}}},Yc=function(){return{restrict:\"A\",require:\"?ngModel\",link:function(a,b,d,c){if(c){var e=-1;d.$observe(\"maxlength\",function(a){a=Z(a);e=da(a)?-1:a;c.$validate()});c.$validators.maxlength=function(a,b){return 0>e||c.$isEmpty(b)||\n            b.length<=e}}}}},Xc=function(){return{restrict:\"A\",require:\"?ngModel\",link:function(a,b,d,c){if(c){var e=0;d.$observe(\"minlength\",function(a){e=Z(a)||0;c.$validate()});c.$validators.minlength=function(a,b){return c.$isEmpty(b)||b.length>=e}}}}};w.angular.bootstrap?w.console&&console.log(\"WARNING: Tried to load angular more than once.\"):(ze(),Ce(ea),ea.module(\"ngLocale\",[],[\"$provide\",function(a){function b(a){a+=\"\";var b=a.indexOf(\".\");return-1==b?0:a.length-b-1}a.value(\"$locale\",{DATETIME_FORMATS:{AMPMS:[\"AM\",\n            \"PM\"],DAY:\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\".split(\" \"),ERANAMES:[\"Before Christ\",\"Anno Domini\"],ERAS:[\"BC\",\"AD\"],FIRSTDAYOFWEEK:6,MONTH:\"January February March April May June July August September October November December\".split(\" \"),SHORTDAY:\"Sun Mon Tue Wed Thu Fri Sat\".split(\" \"),SHORTMONTH:\"Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec\".split(\" \"),STANDALONEMONTH:\"January February March April May June July August September October November December\".split(\" \"),WEEKENDRANGE:[5,\n            6],fullDate:\"EEEE, MMMM d, y\",longDate:\"MMMM d, y\",medium:\"MMM d, y h:mm:ss a\",mediumDate:\"MMM d, y\",mediumTime:\"h:mm:ss a\",\"short\":\"M/d/yy h:mm a\",shortDate:\"M/d/yy\",shortTime:\"h:mm a\"},NUMBER_FORMATS:{CURRENCY_SYM:\"$\",DECIMAL_SEP:\".\",GROUP_SEP:\",\",PATTERNS:[{gSize:3,lgSize:3,maxFrac:3,minFrac:0,minInt:1,negPre:\"-\",negSuf:\"\",posPre:\"\",posSuf:\"\"},{gSize:3,lgSize:3,maxFrac:2,minFrac:2,minInt:1,negPre:\"-\\u00a4\",negSuf:\"\",posPre:\"\\u00a4\",posSuf:\"\"}]},id:\"en-us\",localeID:\"en_US\",pluralCat:function(a,\nc){var e=a|0,f=c;void 0===f&&(f=Math.min(b(a),3));Math.pow(10,f);return 1==e&&0==f?\"one\":\"other\"}})}]),F(function(){ue(w.document,Pc)}))})(window);!window.angular.$$csp().noInlineStyle&&window.angular.element(document.head).prepend('<style type=\"text/css\">@charset \"UTF-8\";[ng\\\\:cloak],[ng-cloak],[data-ng-cloak],[x-ng-cloak],.ng-cloak,.x-ng-cloak,.ng-hide:not(.ng-hide-animate){display:none !important;}ng\\\\:form{display:block;}.ng-animate-shim{visibility:hidden;}.ng-anchor{position:absolute;}</style>');\n//# sourceMappingURL=angular.min.js.map\n\n//# sourceURL=webpack:///./js/lib/angular.min.js?");

/***/ }),

/***/ "./js/polismaker.js":
/*!**************************!*\
  !*** ./js/polismaker.js ***!
  \**************************/
/*! exports provided: PolisMaker */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PolisMaker\", function() { return PolisMaker; });\n/* harmony import */ var _calculation_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./calculation.js */ \"./js/calculation.js\");\n/**\n * Класс для работы с PDF\n */\n\n\nconst NOBORDER = [false,false,false,false];\nconst emptyCell = {\n    text: '',\n    border: [false, false, false, false],\n}\nconst HIP_NAME = '№ HIP-0000000-00-17';\nconst BASEFONTSIZE = 10.5;\nconst BIGFONTSIZE = BASEFONTSIZE + 1.5;\n\nclass PolisMaker {\n    constructor() {\n        this.carsTables = [];\n        this.includedRisksOrder = new Set();\n        Set.prototype._indexOf = function (val) {\n            return [...this].indexOf(val);\n        }\n        this.isOneCarGroup = false;\n        this.hipName = HIP_NAME; //FIXME: изменить потом, когда дойдет до генерации индекса полиса\n    }\n    /**\n     * Перераспределяем машины по спискам\n     * @param {object} myFactory объект с практически всеми нужными данными\n     * @return {array} массив со списками машин\n     */\n    makeCarLists(myFactory) {\n        let lists = [];\n        myFactory.parks.forEach((park, parkNumber) => {\n            park.processes.forEach((process, i) => {\n                let wasIndex = null;\n                for (let k = 0; k < i; k++) {\n                    //ищем проц с идентичными машинами\n                    if (this.areEquivalent(process.cars, park.processes[k][\"cars\"])) {\n                        wasIndex = lists.findIndex(l => l.processes.includes(park.processes[k]));\n                        break;\n                    }\n                }\n                let currGroup;\n                if (i == 0 || wasIndex === null) {\n                    lists.push(\n                        {\n                            cars: process.cars,\n                            processes: [process],\n                            risks: [process.risk],\n                            wrappings: [process.wrapping],\n                            group: lists.length,\n                        }\n                    )\n                    currGroup = lists.length-1;\n                }\n                else {\n                    if (!wasSameRisk (lists[wasIndex].processes, process)) {\n                        lists[wasIndex].processes.push(process);\n                        lists[wasIndex].risks.push(process.risk);\n                    } \n\n                    if (!lists[wasIndex].wrappings.includes(process.wrapping)) lists[wasIndex].wrappings.push(process.wrapping);\n                    currGroup = wasIndex;\n                }\n                process.cars.forEach(car=>{\n                    if (!car.tableGroup) car.tableGroup = [currGroup];\n                    if (!car.tableGroup.includes(currGroup)) car.tableGroup.push(currGroup);\n                    if (!car.wrappings) car.wrappings = [process.wrapping];\n                    if (!car.wrappings.includes(process.wrapping)) car.wrappings.push(process.wrapping);\n                })\n                if (process.isFull){ \n                    lists[currGroup].isFull = true;\n                    lists[currGroup].groups = process.cars[0].tableGroup;\n                }\n            });\n        });\n        return lists;\n        /**\n         * Проверка, сущетсвует ли в нашем списке проц с такими же полями (кроме типа отсека)\n         * @param {array} listOfProcesses - список уже добавленных процев\n         * @param {process} proc - проверяемый про\n         */\n        function wasSameRisk (listOfProcesses, proc) {\n            const checkingFields = ['cost', 'franchise', 'limit', 'risk', 'turnover'];\n            // проходимся по списку всех процев в листе, если есть хоть один, у которого все проверяемые параметры совпадают с нашим то true\n            return listOfProcesses.some(p => {\n                return checkingFields.every(field => p[field] === proc[field]);\n            })\n        }\n    }\n    /**\n     * Функция проверки двух соседних строк на идентичность машин, к которым относятся данные строки\n     * @param  {array} mass1\n     * @param  {array} mass2\n     * @return {boolean} возвращает true, если машины идентичны\n     */\n    areEquivalent(mass1, mass2) {\n        if (mass1.length !== mass2.length) return false;\n        for (const car of mass1) {\n            if (!mass2.includes(car)) return false;\n        }\n        return true;\n    }\n    /**\n     * Создаем массив, который представляет из себя таблицы с рисками и номерами машин\n     * @param {object} myFactory объект с практически всеми нужными данными\n     * @return {arrayOfTables}\n     */\n    makeTables(myFactory) {\n        this.carsTables = [];\n        let body = [];\n        const lists = this.makeCarLists(myFactory);\n        this.isOneCarGroup = (lists.length===1); // если одна группа машин, то слово Група не нужно\n        const listContent = [];\n        let carTablesCount = 1;\n        //порядок столбцов в таблице\n        const colOrder = ['risk', 'cost', 'limit', 'franchise'];\n        const colNumber = () => colOrder.length;\n        const putEmptyCells = num => {\n            const arr = [];\n            for (let i=0;i<num;i++) {\n                arr.push(emptyCell)\n            }\n            return arr;\n        }\n        // ширины столбца\n        const colWidth = {\n            'group': 0,\n            'risk': 97+25+35+100,\n            'cost': 61+20,\n            \"amount\": 0,\n            \"wrapping\": 0, //100 было\n            \"limit\": 60,\n            \"franchise\": 60,\n        }\n        const rowWidths = [];\n        //создание массива с ширинами столбцов\n        for (let i = 0; i < colOrder.length; i++) {\n            const name = colOrder[i];\n            rowWidths.push(colWidth[name]);\n        }\n        let table = {\n            style: 'table',\n            table: {\n                headerRows: 1,\n                widths: rowWidths,\n                body: [\n                    [\n                        {\n                            text: 'Таблица 1 - Условия страхования',\n                            border: NOBORDER,\n                            colSpan: colNumber(),\n                            alignment: 'left',\n                            fontSize: BIGFONTSIZE,\n                        },\n                        ...putEmptyCells(colNumber()-1)\n                    ],\n                    [\n                        {\n                            text: 'Застрахованные риски,\\n согласно п. 1.1',\n                            style: \"firstHeader\",\n                            border: NOBORDER,\n                            fontSize: BIGFONTSIZE,\n                        },\n                        // {\n                        //     text: 'Тип грузового отсека',\n                        //     style: \"firstHeader\",\n                        //     border: NOBORDER,\n                        //     fontSize: BIGFONTSIZE,\n                        // },\n                        {\n                            text: 'Страховая стоимость, руб.',\n                            style: \"firstHeader\",\n                            border: NOBORDER,\n                            fontSize: BIGFONTSIZE,\n                        },\n                        \n                        {\n                            text: 'Лимит по случаю, руб.',\n                            style: \"firstHeader\",\n                            border: NOBORDER,\n                            fontSize: BIGFONTSIZE,\n                        },\n                        {\n                            text: 'Франшиза по случаю, руб.',\n                            style: \"firstHeader\",\n                            border: NOBORDER,\n                            fontSize: BIGFONTSIZE,\n                        }\n                    ]\n                ]\n            }\n        }\n        if (this.isOneCarGroup) table.layout = {\n            fillColor: function (i, node) {\n                return (i % 2 === 1 && i>2) ? '#e6e6e6' : null;\n            }\n        }\n        else table.layout = {\n            fillColor: function (i, node) {\n                const text = node.table.body[i][0].text;\n                const reg = /Набор рисков \\d+/;\n                const isGroupRow = reg.test(text);\n                return (isGroupRow) ? '#e6e6e6' : null;\n            }\n        }\n        lists.forEach((list,i) => {\n            const group = i + 1;\n            let tableContent = table.table.body;\n            if (!this.isOneCarGroup) {\n                // добавляем разделитель Групп, если групп больше чем одна\n                tableContent.push([{\n                    text: `Набор рисков ${group}:`,\n                    border: NOBORDER,\n                    colSpan: colNumber(),\n                    alignment: 'left',\n                    bold: true,\n                    fontSize: BASEFONTSIZE,\n                }, ...putEmptyCells(colNumber() - 1)]);\n            }\n            //функция выдачи отступов для строки, что бы значения были отцентрованы\n            const getMargin = (str) => {\n                const twoRows = ['Повреждение товарных автомобилей', 'Противоправные действия третьих лиц'];\n                const noMargin = [0,0,0,0];\n                const oneMargin = noMargin; //[0,8,0,8] было для двустрочных\n                return twoRows.includes(str) ? noMargin : oneMargin;\n            }\n\n            list.processes.forEach((process, i) => {\n                const row = [];\n                const riskMargin = getMargin(process.risk);\n                const wrapMargin = getMargin(process.wrapping);\n                const oneMargin = getMargin('');\n                this.includedRisksOrder.add(process.risk);\n\n                colOrder.forEach((property, id) => {\n                    let obj;\n                    switch (property) {\n                        case 'amount':\n                            if (myFactory.amountType == \"Тягачей\") {\n                                obj = {\n                                    text: `${process[property] / 24}`,\n                                    margin: oneMargin,\n                                    fontSize: BIGFONTSIZE,\n                                }\n                            }\n                            else {\n                                obj = {\n                                    text: `${process[property]}`,\n                                    margin: oneMargin,\n                                    fontSize: BIGFONTSIZE,\n                                }\n                            }\n                            break;\n                        case 'cost':\n                        case 'limit':\n                        case 'franchise':\n                            obj = {\n                                text: this.addSpaces(process[property]),\n                                margin: oneMargin,\n                                fontSize: BIGFONTSIZE,\n                            }\n                            break;\n                        case 'risk':\n                            obj = {\n                                // пункт риска отключен пока\n                                // text: `${process[property]} п.\\u00A01.1.${this.includedRisksOrder._indexOf(process[property])+1}`,\n                                text: `\"${process[property]}\"`,\n                                margin: riskMargin,\n                                alignment: 'left',\n                                fontSize: BIGFONTSIZE,\n                            };\n                            break;\n                        case 'group':\n                            obj = {\n                                text: `${group}`,\n                                margin: oneMargin,\n                                fontSize: BIGFONTSIZE,\n                            };\n                            break;\n                        case 'wrapping':\n                            obj = {\n                                text: list.wrappings.join(', '),\n                                margin: wrapMargin,\n                                fontSize: BIGFONTSIZE,\n                            };\n                            break;\n                        default:\n                            obj = {\n                                text: process[property],\n                                margin: oneMargin,\n                                fontSize: BIGFONTSIZE,\n                            };\n                            break;\n                    }\n                    obj.border = NOBORDER;\n                    row.push(obj);\n                })\n                tableContent.push(row);\n            })\n\n            if (list.isFull) {\n                this.carsTables.push('\\n');\n                // генерируем таблицу в зависимости от количества групп ТС\n                // если групп ТС больше одной, то необходимо добавить дополнительный стоблец с обозначением Групп\n                const colNumber = (this.isOneCarGroup) ? 5 : 6;\n                const tableHeader = (this.isOneCarGroup) ? 'Список транспортных средств' : `Список транспортных средств №${carTablesCount} - Набор рисков: ${list.groups.map(x=>x+1).join(', ')}`;\n                const colWidths = (this.isOneCarGroup) ? [44, 88, 121, 58, 149] : [34, 68, 121, 48, 129, 60];\n                const contentHeader = [\n                    {\n                        text: 'п/п',\n                        style: \"firstHeader\",\n                        fontSize: BASEFONTSIZE,\n                    },\n                    {\n                        text: 'Гос. знак',\n                        style: \"firstHeader\",\n                        fontSize: BASEFONTSIZE,\n                    },\n                    {\n                        text: `VIN`,\n                        style: \"firstHeader\",\n                        fontSize: BASEFONTSIZE,\n                    },\n                    {\n                        text: 'Год',\n                        style: \"firstHeader\",\n                        fontSize: BASEFONTSIZE,\n                    },\n                    {\n                        text: 'Тип грузового отсека',\n                        style: \"firstHeader\",\n                        fontSize: BASEFONTSIZE,\n                    }\n                ];\n                if (!this.isOneCarGroup) contentHeader.push(\n                    {\n                        text: 'Набор рисков*',\n                        style: \"firstHeader\",\n                        fontSize: BASEFONTSIZE,\n                    }\n                )\n                /**\n                 * Возвращает строку с описанием ТС со столбцом Группа или без него в зависимости от общего кол-ва групп\n                 * @param {*} car \n                 * @param {*} i \n                 */\n                const contentBody = (car, i) => {\n                    const content = [\n                        {\n                            text: i + 1,\n                            style: 'carInfo',\n                        },\n                        {\n                            text: car.data.autNumber,\n                            style: 'carInfo',\n                        }\n                        ,\n                        {\n                            text: car.data.VIN,\n                            style: 'carInfo',\n                        },\n                        {\n                            text: car.data.prodYear,\n                            style: 'carInfo',\n                        },\n                        {\n                            text: car.wrappings.join(', '),\n                            style: 'carInfo',\n                        }\n                    ]\n                    if (!this.isOneCarGroup) content.push(\n                        {\n                            text: car.tableGroup.map(x=>x+1).join(', '),\n                            style: 'carInfo',\n                        }\n                    )\n                    return content;\n                };\n                const tableCar = {\n                    style: 'table',\n                    table: {\n                        headerRows: 2,\n                        widths: colWidths,\n                        body: [\n                            [\n                                {\n                                    text: tableHeader,\n                                    border: NOBORDER,\n                                    colSpan: colNumber,\n                                    alignment: 'left',\n                                    fontSize: BASEFONTSIZE,\n                                },\n                                ...putEmptyCells(colNumber-1),\n                            ],\n                            contentHeader,\n                        ]\n                    },\n                }\n                const tableContentCar = tableCar.table.body;\n                // данные по машинам\n                list.cars.forEach((car, i) => {\n                    tableContentCar.push(\n                        contentBody(car, i)\n                    )\n                })\n                this.carsTables.push(tableCar);\n                carTablesCount++;\n            }\n        })\n        if (!this.isOneCarGroup) this.carsTables.push({\n            text:'* Транспортные средства застрахованы на условиях и рисках, соответствующих указанным наборам рисков в Таблице 1.',\n            bold: false,\n            alignment: 'justify',\n            fontSize: 10,\n        })\n        listContent.push(table);\n        listContent.push({\n            text:'Совокупные выплаты по всем застрахованным случаям не могут превышать агрегатный лимит отвественности страховщика по Полису.',\n            bold: true,\n            alignment: 'justify',\n            fontSize: BASEFONTSIZE,\n        },'\\n')\n        return listContent;\n    }\n    /**\n     * Преобразуем число из 1000000 в 1 000 000 (то есть добавляем пробелы между)\n     * @param  {string} nStr 1000000\n     * @return {string} 1 000 000\n     */\n    addSpaces(nStr) {\n        nStr += '';\n        let x = nStr.split('.');\n        let x1 = x[0];\n        let x2 = x.length > 1 ? '.' + x[1] : '';\n        let rgx = /(\\d+)(\\d{3})/;\n        while (rgx.test(x1)) {\n            x1 = x1.replace(rgx, '$1' + ' ' + '$2');\n        }\n        return x1 + x2;\n    }\n    /**\n     * Преобразуем в нужный формат \"оговорки и условия\"\n     * @param  {object} myFactory объект с практически всеми нужными данными\n     * @return {array} возвращаем подготовленные для формата pdf данные\n     */\n    makeParagraphs(myFactory) {\n        const paragraphs = [];\n        let parIndex = 2; //Стартующий номер параграфа, так как 1 занята под Риски\n        myFactory.polisObj.conditions.forEach(obj => {\n            if (obj.name === BASENAME) {\n                return;\n            }\n            if (obj.const) return;\n            let paragraph = {};\n            paragraph.widths = [30, 457];\n            paragraph.keepWithHeaderRows = 1;\n            paragraph.body = [\n                [\n                    {\n                        text: `${parIndex}. ${obj.name}:`,\n                        style: \"firstHeader\",\n                        colSpan: 2,\n                        border: NOBORDER,\n                        fontSize: BASEFONTSIZE,\n                    },\n                    {},\n                ]\n            ];\n            let mass = obj.values.filter(({ checked }) => checked);\n            if (obj.oneLine) {\n                const text = mass.map(el => el.text).join(', ');\n                const tb = [\n                    {\n                        text: text,\n                        colSpan: 2,\n                        border: NOBORDER,\n                        alignment: 'justify',\n                        fontSize: BASEFONTSIZE,\n                    }\n                ]\n                paragraph.body.push(tb);\n            }\n            else {\n                mass.forEach((param, num) => {\n                    let arr = [];\n                    arr.push({\n                        text: `${parIndex}.${num + 1}`,\n                        border: NOBORDER,\n                        fontSize: BASEFONTSIZE,\n                    }, {\n                            text: param.text,\n                            border: NOBORDER,\n                            fontSize: BASEFONTSIZE,\n                        })\n                    paragraph.body.push(arr);\n                    paragraph.headerRows = 1;\n                });\n            }\n            paragraph.headerRows = 1;\n            let layout = {\n                fillColor: function (i, node) {\n                    return (i % 2 === 0) ? '#e6e6e6' : null;\n                }\n            }\n            paragraphs.push({\n                table: paragraph,\n                layout\n            }, \"\\n\");\n            parIndex++;\n        });\n        return paragraphs;\n\n    }\n    /**\n     * Создаем два списка\n     * 1. Застрахованные риски\n     * 2. Незастрахованные риски\n     * @param  {object} myFactory объект с практически всеми нужными данными\n     * @return {array} возвращаем подготовленные для формата pdf данные\n     */\n    makeRisksList(myFactory, risks) {\n        /**\n         * преобразуем массив данных в объект, который войдет в PDF файл в виде списка\n         * @param  {array} list массив с рисками\n         * @param  {boolean} included определяет какой именно это должен быть список, если true - значит застрахованные риски, \n         * @param  {object} baseRisk объект с данными о базовых рисках\n         * @return {object}\n         */\n        const prepareListToPDF = ({ list, included, baseRisk }) => {\n            const table = {\n                headerRows: 1,\n                widths: [1, 486],\n                body: []\n            };\n            if (included) {\n                table.body.push([\n                    {\n                        text: '1.1 Определения застрахованных рисков',\n                        style: \"firstHeader\",\n                        colSpan: 2,\n                        border: NOBORDER,\n                    },\n                    {}\n                ])\n                let count = 1;\n                // сначала добавляем Базовые риски (включенные)\n                if (baseRisk.ToPDFinclude) {\n                    table.body.push([\n                        // {\n                        //     text: `1.1.${count}`,\n                        //     border: NOBORDER,\n                        // },\n                        {\n                            text: baseRisk.ToPDFinclude[0].text,\n                            bold: baseRisk.ToPDFinclude[0].bold,\n                            border: NOBORDER,\n                            colSpan: 2,\n                            alignment: 'justify',\n                            fontSize: BASEFONTSIZE,\n                        },\n                        emptyCell\n                    ]);\n                    baseRisk.ToPDFinclude[1].ul.forEach(ul=>{\n                        table.body.push([\n                            {\n                                text: ` `,\n                                border: NOBORDER,\n                            },\n                            {\n                                text: `• ${ul}`,\n                                border: NOBORDER,\n                                alignment: 'justify',\n                                fontSize: BASEFONTSIZE,\n                            }\n                        ])\n                    })\n                    table.body.push()\n                    count++;\n                }\n                for (const risk of list) {\n                    table.body.push([\n                        // {\n                        //     text: `1.1.${count}`,\n                        //     border: NOBORDER,\n                        // },\n                        {\n                            text: [\n                                { text: `${risk.name}`, bold: true },\n                                { text: ` - ${risk.title}. ` }\n                            ],\n                            border: NOBORDER,\n                            colSpan: 2,\n                            alignment: 'justify',\n                            fontSize: BASEFONTSIZE,\n                        },\n                        emptyCell,\n                    ])\n                    count++;\n                }\n            }\n            else {\n                table.body.push([\n                    {\n                        text: '1.2 Определения не заявленных на страхование рисков:',\n                        style: \"firstHeader\",\n                        colSpan: 2,\n                        border: NOBORDER\n                    },\n                    {}\n                ])\n                let count = 1;\n                // сначала добавляем Базовые риски (исключенные)\n                if (baseRisk.ToPDFnotInclude) {\n                    table.body.push([\n                        {\n                            text: baseRisk.ToPDFnotInclude[0].text,\n                            bold: baseRisk.ToPDFnotInclude[0].bold,\n                            border: NOBORDER,\n                            colSpan: 2,\n                            alignment: 'justify',\n                            fontSize: BASEFONTSIZE,\n                        },\n                        emptyCell\n                    ]);\n                    baseRisk.ToPDFnotInclude[1].ul.forEach(ul=>{\n                        table.body.push([\n                            {\n                                text: ` `,\n                                border: NOBORDER,\n                            },\n                            {\n                                text: `• ${ul}`,\n                                border: NOBORDER,\n                                alignment: 'justify',\n                                fontSize: BASEFONTSIZE,\n                            }\n                        ])\n                    })\n                    count++;\n                }\n                for (const risk of list) {\n                    table.body.push([\n                        {\n                            text: [\n                                { text: `${risk.name}`, bold: true },\n                                { text: ` - ${risk.title}. ` }\n                            ],\n                            border: NOBORDER,\n                            colSpan:2,\n                            alignment: 'justify',\n                            fontSize: BASEFONTSIZE,\n                        },\n                        emptyCell,\n                    ])\n                    count++;\n                }\n            }\n            let layout = {\n                fillColor: function (i, node) {\n                    return (i % 2 === 0) ? '#e6e6e6' : null;\n                }\n            }\n            return {\n                table,\n                layout,\n            };\n        }\n        let content = [];\n        /** \n         * После таблиц с номерами авто и рисками идет перечисление застрахованных и незастрахованных рисков \n         * Начинаем с базовых рисков\n         * Если они включены(по умолчанию включены)\n         */\n        let baseRisk = Object.assign({}, myFactory.polisObj.conditions.filter((paragraph) => {\n            return paragraph.name == BASENAME;\n        })[0]);\n        const baseHeader = { text: `${BASENAME}:`, bold: true }\n        baseRisk.ToPDFinclude = [baseHeader];\n        baseRisk.ToPDFnotInclude = [baseHeader];\n        if (baseRisk) {\n            /**\n             * если базовые риски включены - значит они в этом массиве не нужны, удаляем их \n             */\n            risks = risks.filter(({ name }) => {\n                return name !== BASENAME;\n            })\n            /**\n             * Сначала отбираем те параметры базовых рисков, которые включены, а затем делаем из них массив строк\n             */\n            const baseInclude = [];\n            const baseNotInlude = [];\n\n            baseRisk.values.forEach((val) => {\n                if (val.checked) baseInclude.push(val.text)\n                else baseNotInlude.push(val.text);\n            });\n            baseRisk.ToPDFinclude.push(\n                {\n                    type: 'square',\n                    ul: baseInclude,\n                }\n            )\n            baseRisk.ToPDFnotInclude.push(\n                {\n                    type: 'square',\n                    ul: baseNotInlude,\n                }\n            )\n            if (baseInclude.length === 0) delete baseRisk.ToPDFinclude;\n            if (baseNotInlude.length === 0) delete baseRisk.ToPDFnotInclude;\n        }\n        /**\n         * Дальше перечисляем сначала те риски, которые застрахованы, а также к каким перечням(спискам) машин они относятся\n         * Для начала раскидаем машины по спискам\n         */\n        let lists = this.makeCarLists(myFactory);\n        /**\n         * Затем определим, какие риски и куда входят\n         */\n        for (const risk of risks) {\n            risk.list = [];\n            lists.forEach((list, i) => {\n                if (list.risks.includes(risk.name)) risk.list.push(i + 1);\n            });\n        }\n        /**\n         * Остается лишь преобразовать профильтрованные данные в формат pdf\n         */\n        //сортируем массив включенных рисков по очереди упоминания в таблице условий\n        const includedRisks = [...this.includedRisksOrder].map(risk=>{\n            if (risk!==BASENAME) return risks.find(r=>r.name===risk);\n        }).filter(val=>val!==undefined);\n        content.push(prepareListToPDF(\n            {\n                list: includedRisks,\n                included: true,\n                baseRisk\n            }), \"\\n\"\n        );\n        const notIncludedRisks = risks.filter((risk) => {\n            return risk.list.length == 0\n        })\n        content.push(prepareListToPDF(\n            {\n                list: notIncludedRisks,\n                included: false,\n                baseRisk\n            }), \"\\n\"\n        );\n        return content;\n    }\n    /**\n     * Создаем строку с описанием территории страхования на основе оговорки \n     * @param {object}  myFactory\n     */\n    makeTerritory(myFactory) {\n        const territoryVals = [];\n        myFactory.polisObj.conditions.find(c => c.type === 'territory').values.forEach(v => {\n            if (v.checked) territoryVals.push(v.text.toUpperCase());\n        });\n        return territoryVals.join(', ');\n    }\n    /**\n     * Основная функция, создает на основе данных расчета и компании файл PDF и скачивает его\n     * @param  {object} myFactory объект с практически всеми нужными данными\n     * @param  {array} risks Список рисков с описанием\n     */\n    makePDF(myFactory, risks) {\n        if (!myFactory.companyObj.card) {\n            // заполняем нужные поля заглушками, если компания не выбрана\n            myFactory.companyObj.card = {\n                \"Данные компании\" : {\n                    \"Форма организации\": '',\n                    \"Наименование организации\": 'ОБРАЗЕЦ',\n                },\n                \"Доп. информация\": {\n                    \"Юридический адрес\": '',\n                },\n                \"Генеральный директор\": {\n                    \"ФИО директора\": '',\n                }\n            }\n        }\n        const emptyCell = {\n            text: '',\n            border: [false, false, false, false],\n        }\n        const oneRowMargin = [0, 10, 0, 10];\n        const twoRowMargin = [0, 5, 0, 5];\n        // собираем стоку с данными о территории страхования\n        const territory = this.makeTerritory(myFactory);\n        const currencySign = {\n            'Р': '₽',\n            'EUR': '€',\n            'USD': '$',\n        }\n        let pageWithExtraFooter = null;\n        const docDefinition = {\n            pageSize: 'A4',\n            pageMargins: [50, 115, 50, 65],\n            content: [\n                {\n                    table: {\n                        headerRows: 1,\n                        widths: [150, 150, 175],\n                        body: [\n                            [\n                                {\n                                    text: [\n                                        \"ПОЛИС CMR/ТТН - СТРАХОВАНИЯ ПЕРЕВОЗЧИКА \\n\",\n                                        `${this.hipName}`\n                                    ],\n                                    colSpan: 3,\n                                    style: 'firstHeader',\n                                    fontSize: 20,\n                                    fillColor: '#e6e6e6',\n                                },\n                                {},\n                                {}\n                            ],\n                            [\n                                {\n                                    text: `Страхование действует в соответствии с Договором CMR/ТТН - страхования перевозчика ${this.hipName}.`,\n                                    colSpan: 3,\n                                    fontSize: 10,\n                                    alignment: 'center'\n                                },\n                                {},\n                                {}\n                            ],\n\n\n                        ],\n                        style: 'table',\n                    },\n                    layout: {// цвет границы \n                        hLineColor: '#e6e6e6',\n                        vLineColor: '#e6e6e6',\n                    }\n                },\n                '\\n',\n                {\n                    table: {\n                        headerRows: 1,\n                        widths: [150, 150, 175],\n                        body: [\n                            [\n                                {\n                                    text: \"СТРАХОВЩИК\",\n                                    style: \"leftCellFirstTable\",\n                                    margin: oneRowMargin,\n                                },\n                                {\n                                    text: [\n                                        {\n                                            text: \"ООО «СК «КАПИТАЛ-ПОЛИС»\\n\",\n                                            bold: true,\n                                        },\n                                        {\n                                            text: \"Московский пр., д.22, лит. 3, Санкт-Петербург, 190013\\n\",\n                                            fontSize: 10\n                                        }\n                                    ],\n                                    colSpan: 2,\n                                    alignment: 'center',\n                                    margin: twoRowMargin,\n                                },\n                                {}\n                            ],\n                            [\n                                {\n                                    text: \"ПЕРИОД СТРАХОВАНИЯ\",\n                                    style: \"leftCellFirstTable\",\n                                    margin: oneRowMargin\n                                },\n                                {\n                                    text: `${myFactory.polisObj.dates.start} - ${myFactory.polisObj.dates.end}`,\n                                    alignment: 'center',\n                                    bold: true,\n                                    colSpan: 2,\n                                    margin: oneRowMargin\n                                }\n                            ]\n                        ],\n                        style: 'table',\n                    },\n                    layout: {// цвет границы \n                        hLineColor: '#e6e6e6',\n                        vLineColor: '#e6e6e6',\n                    }\n                },\n                \"\\n\",\n                {\n                    table: {\n                        headerRows: 1,\n                        widths: [150, 150, 175],\n                        body: [\n                            [\n                                {\n                                    text: \"СТРАХОВАТЕЛЬ\",\n                                    style: \"leftCellFirstTable\",\n                                    margin: oneRowMargin\n\n                                },\n                                {\n                                    text: [\n                                        {\n                                            text: `${myFactory.companyObj.card[\"Данные компании\"][\"Форма организации\"]} ${myFactory.companyObj.card[\"Данные компании\"][\"Наименование организации\"].toUpperCase()}\\n`,\n                                            bold: true,\n                                        },\n                                        {\n                                            text: `${myFactory.companyObj.card[\"Доп. информация\"][\"Юридический адрес\"]}`,\n                                            fontSize: 10,\n                                        }\n\n                                    ],\n                                    colSpan: 2,\n                                    alignment: 'center',\n                                    margin: twoRowMargin\n                                },\n                            ],\n                            [\n                                {\n                                    text: \"КОЛИЧЕСТВО ЗАСТРАХОВАННЫХ ТРАНСПОРТНЫХ СРЕДСТВ\",\n                                    style: \"leftCellFirstTable\",\n                                    margin: twoRowMargin\n                                },\n                                {\n                                    text: `${myFactory.totalAmount / 24}`,\n                                    margin: oneRowMargin,\n                                    bold: true,\n                                    colSpan: 2,\n                                    alignment: 'center'\n                                },\n                            ]\n                        ]\n                    },\n                    layout: {// цвет границы \n                        hLineColor: '#e6e6e6',\n                        vLineColor: '#e6e6e6',\n                    }\n                },\n                \"\\n\",\n                {\n                    table: {\n                        headerRows: 1,\n                        widths: [150, 150, 175],\n\n                        body: [\n                            [\n                                {\n                                    text: \"ТЕРРИТОРИЯ СТРАХОВАНИЯ\",\n                                    style: \"leftCellFirstTable\",\n                                    margin: oneRowMargin.map((v, i) => (i === 1) ? v + 2 : v)\n                                },\n                                {\n                                    text: `${territory}`,\n                                    colSpan: 2,\n                                    alignment: 'center',\n                                    margin: (territory.length < 65) ? oneRowMargin : twoRowMargin\n                                },\n                            ],\n                            [\n                                {\n                                    text: \"АГРЕГАТНЫЙ ЛИМИТ ОТВЕТСТВЕННОСТИ СТРАХОВЩИКА ПО ПОЛИСУ\",\n                                    style: \"leftCellFirstTable\",\n                                    margin: twoRowMargin\n                                },\n                                {\n                                    text: `${this.addSpaces(myFactory.a_limit.value)} ${currencySign[myFactory.document.currency]}`,\n                                    margin: oneRowMargin,\n                                    bold: true,\n                                    colSpan: 2,\n                                    alignment: 'center'\n                                },\n                            ],\n                            [\n                                {\n                                    text: \"ДАТА ВЫДАЧИ\",\n                                    style: \"leftCellFirstTable\",\n                                    margin: oneRowMargin\n                                },\n                                {\n                                    text: `${Object(_calculation_js__WEBPACK_IMPORTED_MODULE_0__[\"parseDate\"])(new Date())}`,\n                                    bold: true,\n                                    colSpan: 2,\n                                    alignment: 'center',\n                                    margin: oneRowMargin\n                                },\n                            ]\n                        ]\n                    },\n                    layout: {// цвет границы \n                        hLineColor: '#e6e6e6',\n                        vLineColor: '#e6e6e6',\n                    }\n                },\n                {\n                    table: {\n                        headerRows: 1,\n                        widths: [493],\n                        body: [\n                            [\n                                {\n                                    text: \"Страхованием покрывается любой и каждый груз, с учетом исключений, предусмотренных полисом.\",\n                                    style: \"leftCellFirstTable\",\n                                    alignment: 'center',\n                                    bold: true\n                                },\n                            ],\n                        ]\n                    },\n                    layout: {// цвет границы \n                        hLineColor: '#e6e6e6',\n                        vLineColor: '#e6e6e6',\n                    }\n                },\n                \"\\n\",\n                {\n                    table: {\n                        headerRows: 1,\n                        widths: [100, 300, 75],\n                        body: [\n                            [\n                                {\n                                    text: [\n                                        {\n                                            text: \"ООО «СК «КАПИТАЛ-ПОЛИС»\\n\",\n                                            bold: true,\n                                        },\n                                        {\n                                            text: \"\\n\\n\"\n                                        },\n                                        {\n                                            text: \"__________________________________________\\n\",\n                                        },\n                                        {\n                                            text: \"/Корпусов Д.В/\\n\",\n                                            fontSize: 7\n                                        },\n                                        {\n                                            text: \"Доверенность №74/2018 от 10.03.2018\\n\",\n                                            fontSize: 7\n                                        },\n                                        {\n                                            text: \"\\n\"\n                                        }\n                                    ],\n                                    alignment: \"center\",\n                                    colSpan: 3\n                                },\n                                {},\n                                {}\n                            ]\n                        ]\n                    },\n                    layout: {// цвет границы \n                        hLineColor: '#e6e6e6',\n                        vLineColor: '#e6e6e6',\n                    }\n                },\n                \"\\n\",\n                {\n                    table: {\n                        headerRows: 1,\n                        widths: [100, 300, 75],\n                        body: [\n                            [\n                                {\n                                    text: [\n                                        {\n                                            text: 'ЦЕНТР СТРАХОВАНИЯ ТРАНСПОРТНЫХ РИСКОВ\\n\\n',\n                                            bold: true,\n                                            fontSize: 12,\n                                        },\n                                        {\n                                            text: \"Телефон: +7 (812) 322-63-51\\n\",\n                                            fontSize: 10,\n                                        },\n                                        {\n                                            text: \"E-mail: cargo@capitalpolis.ru, claims@capitalpolis.ru\\n\",\n                                            fontSize: 10,\n                                        },\n                                        {\n                                            text: \"Московский пр., д.22, лит. 3, Санкт-Петербург, 190013, Россия\",\n                                            fontSize: 10\n                                        }\n                                    ],\n                                    alignment: \"center\",\n                                    colSpan: 3\n                                },\n                                {},\n                                {}\n                            ]\n                        ]\n                    },\n                    layout: {// цвет границы \n                        hLineColor: '#e6e6e6',\n                        vLineColor: '#e6e6e6',\n                    }\n                }\n            ],\n            footer: (page, pages, smth, pagesArr) => {\n                const findExtraPage = arr => {\n                    let pageNumb = null;\n                    arr.forEach((page, ind) => {\n                        if (page.items[0].type === 'line' && page.items[0].item.inlines[0].text === 'ПРИЛОЖЕНИЕ ' &&\n                            page.items[0].item.inlines[1].text === '1 ') pageNumb = ind;\n                    })\n                    if (!pageNumb) console.error('Не найдена страница с приложением 1');\n                    else pageWithExtraFooter = pageNumb;\n                }\n                if (pageWithExtraFooter === null) {\n                    findExtraPage(pagesArr);\n                }\n                if (page === pageWithExtraFooter) return {\n                    table: {\n                        headerRows: 0,\n                        widths: [50, 70, 150, 70, 150, 50],\n                        body: [\n                            [\n                                {\n                                    text: `Лист ${page.toString()}/${pages.toString()} Полиса ${this.hipName}`,\n                                    colSpan: 6,\n                                    border: NOBORDER,\n                                    alignment: 'center',\n                                    fontSize: 7,\n                                    margin: [0, 40, 0, 0],\n                                }\n                            ]\n                        ],\n                        style: 'table'\n                    }\n                }\n                if (page > 1) return {\n                    table: {\n                        headerRows: 0,\n                        widths: [50, 70, 150, 70, 150, 50],\n                        body: [\n                            [\n                                {\n                                    // пустая строка для отступа\n                                    text: '',\n                                    fontSize: 12,\n                                    border: NOBORDER\n                                },\n                                emptyCell,\n                                emptyCell,\n                                emptyCell,\n                                emptyCell,\n                                emptyCell,\n                            ],\n                            [\n                                emptyCell\n                                ,\n                                {\n                                    text: 'Cтрахователь:',\n                                    fontSize: 10,\n                                    border: NOBORDER,\n                                },\n                                {\n                                    text: '___________________________________',\n                                    border: NOBORDER,\n                                }\n                                ,\n                                {\n                                    text: 'Cтраховщик:',\n                                    fontSize: 10,\n                                    border: NOBORDER,\n                                },\n                                {\n                                    text: '___________________________________',\n                                    border: NOBORDER,\n                                }\n                                ,\n                                emptyCell\n                            ],\n                            [\n                                emptyCell\n                                ,\n                                emptyCell,\n                                {\n                                    text: 'подпись и печать',\n                                    fontSize: 7,\n                                    alignment: 'center',\n                                    border: NOBORDER,\n                                },\n                                emptyCell,\n                                {\n                                    text: 'подпись и печать',\n                                    fontSize: 7,\n                                    alignment: 'center',\n                                    border: NOBORDER,\n                                },\n                                emptyCell\n                            ],\n                            [\n                                {\n                                    text: `Лист ${page.toString()}/${pages.toString()} Полиса ${this.hipName}`,\n                                    colSpan: 6,\n                                    border: NOBORDER,\n                                    alignment: 'center',\n                                    fontSize: 7,\n                                }\n                            ]\n                        ],\n                        style: 'table'\n                    }\n                };\n            },\n            styles: {\n                leftCellFirstTable: {\n                    fillColor: '#e6e6e6',\n                    fontSize: 10,\n                },\n                table: {\n                    fontStyle: \"PT Sans Narrow\",\n                    alignment: 'center'\n                },\n                firstHeader: {\n                    bold: true,\n                    fillColor: '#DBE5F1',\n                    alignment: 'center',\n                },\n                carInfo: {\n                    fontSize: 9,\n                }\n            }\n\n        };\n\n        docDefinition.content.push(\n            {\n                pageBreak: 'before',\n                text: `1. Риски и условия страхования для транспортных средств, перечисленных в Приложении 1`,\n                alignment: 'center',\n                margin: [0, 0, 0, 5],\n                style: \"firstHeader\",\n            },\n            ...this.makeTables(myFactory), //списки условий страхования\n            ...this.makeRisksList(myFactory, risks), //таблицы заявленных/не заявленных рисков\n            ...this.makeParagraphs(myFactory), //таблицы оговорок\n            \"\\n\",\n            //таблица для подписей\n            {\n                table: {\n                    headerRows: 1,\n                    widths: [245, 245],\n                    dontBreakRows: true,\n                    keepWithHeaderRows: 1,\n                    body: [\n\n                        [\n                            {\n                                text: \"СТРАХОВАТЕЛЬ:\",\n                                style: \"firstHeader\",\n                                fontSize: 12,\n                                fillColor: '#e6e6e6',\n                            },\n                            {\n                                text: \"СТРАХОВЩИК:\",\n                                style: \"firstHeader\",\n                                fontSize: 12,\n                                fillColor: '#e6e6e6',\n                            }\n                        ],\n                        [\n                            {\n                                text: [\n                                    {\n                                        text: `${myFactory.companyObj.card[\"Данные компании\"][\"Форма организации\"]} «${myFactory.companyObj.card[\"Данные компании\"][\"Наименование организации\"].toUpperCase()}»\\n`,\n                                        bold: true\n                                    },\n                                    {\n                                        text: \"\\n\\n\\n\"\n                                    },\n                                    {\n                                        text: \"__________________________________\\n\",\n                                    },\n                                    {\n                                        text: `${myFactory.companyObj.card[\"Генеральный директор\"][\"ФИО директора\"]}\\n`,\n                                        fontSize: 7\n                                    },\n                                    {\n                                        text: \"На основании Устава\",\n                                        fontSize: 7\n                                    }\n                                ],\n                                alignment: \"center\"\n                            },\n                            {\n                                text: [\n                                    {\n                                        text: \"ООО «СК «КАПИТАЛ-ПОЛИС»\\n\",\n                                        bold: true\n                                    },\n                                    {\n                                        text: \"\\n\\n\\n\"\n                                    },\n                                    {\n                                        text: \"__________________________________\\n\",\n                                    },\n                                    {\n                                        text: \"/Корпусов Д.В./\\n\",\n                                        fontSize: 7\n                                    },\n                                    {\n                                        text: \"Доверенность №74/2018 от 10.03.2018\",\n                                        fontSize: 7\n                                    }\n                                ],\n                                alignment: \"center\"\n                            },\n                        ]\n                    ]\n                },\n                layout: {// цвет границы \n                    hLineColor: '#e6e6e6',\n                    vLineColor: '#e6e6e6',\n                }\n            },\n            {\n                pageBreak: 'before',\n                text: `ПРИЛОЖЕНИЕ 1 - Списки транспортных средств подпадающих под страхование Полиса ${this.hipName}`,\n                alignment: 'justify',\n                bold: true,\n            },\n            ...this.carsTables,\n        )\n        pdfMake.fonts = {\n            Roboto: {\n                normal: 'PTN.ttf',\n                bold: 'PTN-bold.ttf'\n            }\n        }\n        // pdfMake.createPdf(docDefinition).download('optionalName.pdf');\n        // console.log(JSON.stringify(docDefinition,null,'    ')); // временно для вставки в редактор\n        const win = window.open('', '_blank');\n        Object(_calculation_js__WEBPACK_IMPORTED_MODULE_0__[\"delay\"])(500).then(() => pdfMake.createPdf(docDefinition).open({}, win)); // временно, чтобы не плодить кучу файлов\n    }\n}\nconst polisMaker = new PolisMaker();\n\n\n\n\n\n//# sourceURL=webpack:///./js/polismaker.js?");

/***/ }),

/***/ "./js/proto.js":
/*!*********************!*\
  !*** ./js/proto.js ***!
  \*********************/
/*! exports provided: Multi, Process, Park */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Multi\", function() { return Multi; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Process\", function() { return Process; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Park\", function() { return Park; });\n/* harmony import */ var _calculation_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./calculation.js */ \"./js/calculation.js\");\n\n\n\nwindow.transportProp=[\"cost\",\"amount\",\"wrapping\",\"risk\",\"limit\",\"franchise\"];\nwindow.qwerty=[\"Q\",\"W\",\"E\",\"R\",\"T\",\"Y\",\"U\",\"I\",\"O\",\"P\"];\nwindow.TRACTOR=24;\nwindow.LimKoef=1;\nwindow.totalAmount=0;\n\nclass Multi{\n    constructor(array, packName, template){\n        let mult=this;\n        this.show=false;\n        this.processes=[];\n        array.forEach(function (proc) {\n            mult.processes.push(proc);\n            proc.multi=mult;\n        });\n        if(packName){\n            this.packName=packName;\n            this.template=template;\n        }\n        this.getValues();\n    }\n    removePackage(){\n        if(this.packName){\n            let mass=this.processes.filter(process=>process.package==this.packName);\n            mass.forEach(function (process) {\n                process.remove();\n            })\n        }\n    }\n    prepareForPackage(){\n        this.processes.forEach(process=>{if(process.risk==BASENAME) process.remove();});\n        let mass=[];\n        this.template.forEach(obj=>mass.push(obj.risk));\n        let array=this.processes.filter(process=>mass.indexOf(process.risk)!=-1);\n        array.forEach(process=>process.remove());\n    }\n    getValues(){\n        let wrapping=[];\n        let risk=[];\n        let limit=[];\n        let franchise=[];\n        let cost=[];\n        let amount=[];\n        this.processes.forEach(function (proc, i) {\n\n                if(wrapping.indexOf(proc.wrapping)==-1) wrapping.push(proc.wrapping);\n                if(risk.indexOf(proc.risk)==-1) risk.push(proc.risk);\n                if(!proc.package || proc.package && i==0){\n                    limit.push(proc.limit);\n                    franchise.push(proc.franchise);\n                    cost.push(proc.cost);\n                    amount.push(proc.amount);\n                }\n\n        });\n        if(cost.length==1) this.cost=cost[0];\n        else{\n            let min=cost[0];\n            let max=cost[0];\n            for(let i=0;i<cost.length;i++){\n                if(cost[i]>max) max=cost[i];\n                if(cost[i]<min) min=cost[i];\n            }\n            if(min==max) this.cost=min;\n            else this.cost=min+\"-\"+max;\n        }\n        if(amount.length==1) this.amount=amount[0];\n        else{\n            let min=amount[0];\n            let max=amount[0];\n            for(let i=0;i<amount.length;i++){\n                if(amount[i]>max) max=amount[i];\n                if(amount[i]<min) min=amount[i];\n            }\n            if(min==max) this.amount=min;\n            else this.amount=min+\"-\"+max;\n        }\n        this.wrapping=wrapping;\n        this.risk=risk;\n        if(limit.length==1) this.limit=limit[0];\n        else{\n            let min=limit[0];\n            let max=limit[0];\n            for(let i=0;i<limit.length;i++){\n                if(limit[i]>max) max=limit[i];\n                if(limit[i]<min) min=limit[i];\n            }\n            if(min==max) this.limit=min;\n            else this.limit=min+\"-\"+max;\n        }\n        if(franchise.length==1) this.franchise=franchise[0];\n        else{\n            let min=franchise[0];\n            let max=franchise[0];\n            for(let i=0;i<franchise.length;i++){\n                if(franchise[i]>max) max=franchise[i];\n                if(franchise[i]<min) min=franchise[i];\n            }\n            if(min==max) this.franchise=min;\n            else this.franchise=min+\"-\"+max;\n        }\n        if(this.packName){\n            let risks=[BASENAME];\n            this.template.forEach(function (process) {\n                risks.push(process.risk);\n            });\n            for(let i=0;i<risks.length; i++){\n                this.risk.splice(this.risk.indexOf(risks[i]),1);\n            }\n            this.risk.push(this.packName)\n        }\n    }\n    calculatePrice(){\n        this.getValues();\n        let total=0;\n        this.processes.forEach(function (proc) {\n            total+=proc.totalPrice;\n        });\n        this.price=total;\n    }\n    // функция разворачивания мульти узла на строчки\n    open(multies, key) {\n        removeCellSelection();\n        const isDestructed = destructuringPairs.call(this, key);\n        if (!isDestructed) destructuringOldMulties.call(this);\n        this.show = true;\n        multies.forEach(multi => multi.getValues());\n\n        /**\n         * удаляем выделенные ячейки, так как из-за них скачет анимация, все равно по логике эти выделения не нужны\n         */\n        function removeCellSelection() {\n            const selectedCell = document.querySelector('.matrix_table .mi_selected');\n            if (selectedCell!== null) selectedCell.classList.toggle('mi_selected');\n            const alreadySelectedCells = document.querySelectorAll('.matrix_table .alreadySelected');\n            alreadySelectedCells.forEach(cell=>cell.classList.toggle(\"alreadySelected\"));\n        }\n\n        // если раньше процы были распределены по мулььи узлам то их нужно распределить опять\n        function destructuringOldMulties() {\n            // архив для удаления проца\n            const arr = [];\n            // смотрим есть ли внутри мульти узла процы, которые до сворачивания были мультиузлами\n            this.processes.forEach(pr => {\n                if (pr.oldMulti) {\n                    pr.oldMulti.processes.push(pr);\n                    arr.push(pr);\n                    pr.multi = pr.oldMulti;\n                    delete pr.oldMulti;\n                }\n            })\n            // удаляем процы которые превратились в мульти узлы, добавляем их мульти узлы\n            arr.forEach(pr => {\n                const ind = this.processes.indexOf(pr);\n                this.processes.splice(ind, 1);\n                if (!this.processes.includes(pr.multi)) this.processes.splice(ind, 0, pr.multi);\n            })\n        }\n        // если новый мульти-в-мульти узел то структурируем его сами\n        function destructuringPairs(key) {\n            const isPairs = () => {\n                let flag = true;\n                if (this.risk.length===1 && this.wrapping.length > 1 && (this.risk[0]==='Международные'||this.risk[0]==='Внутренние'||this.risk[0]==='Автомотив')) return true;\n                if (!(this.risk.length > 1 && this.wrapping.length > 1 && this.processes.length===this.risk.length*this.wrapping.length)) flag = false;\n                this.risk.forEach(risk=> {\n                    if ((typeof risk)!=='string') flag = false;\n                    const counter = this.processes.filter(pr=>pr[key]===risk);\n                    if (counter.lenght!==this.risk.lenght) flag = false;\n                });\n                this.wrapping.forEach(wrap=> {\n                    if ((typeof wrap)!=='string') flag = false;\n                    const counter = this.processes.filter(pr=>pr[key]===wrap);\n                    if (counter.lenght!==this.wrapping.lenght) flag = false;\n                });\n                // проверяем, были ли они уже разбиты на пары по этому ключу\n                this.processes.forEach(pr => {\n                    if (pr.oldMulti && pr.oldMulti.distructedByKey === key) flag = false;\n                }); \n                return flag;\n            } \n            if (isPairs()) {\n                const keysInMulti = [];\n                this.processes.forEach(pr => {\n                    if (!keysInMulti.includes(pr[key])) keysInMulti.push(pr[key]);\n                })\n                // сортировка \n                const sortedProcesses = [];\n                keysInMulti.forEach(k=>{\n                    this.processes.forEach(pr=>{\n                        if (pr[key]===k) sortedProcesses.push(pr);\n                    })\n                })\n                const sortingPark = this.processes[0].park.processes;\n                const placesOfProcs = [];\n                    // находим  места процев в парке, соответствующие отсортированным процам, чтобы их потом заменить\n                sortingPark.forEach((pr,ind)=>{\n                    if (sortedProcesses.includes(pr)) placesOfProcs.push(ind);\n                })\n                    // заменяем процы в парке, на отсортированные процы\n                sortedProcesses.forEach((pr,ind)=>{\n                    sortingPark.splice(placesOfProcs[ind],1,pr);\n                })\n                this.processes = sortedProcesses;\n                // конец сортировки\n                keysInMulti.forEach(k => {\n                    // собираем процессы с одинаковым ключем, чтобы создать из них мульти\n                    const creatingMulti = this.processes.filter(pr => pr[key] === k);\n                    creatingMulti.forEach(pr=>{\n                        // если он уже был деструктурирован на другие пары, то убираем старые мульти\n                        if (pr.oldMulti && pr.oldMulti.distructedByKey!==key) {\n                            if (multies.includes(pr.oldMulti)) multies.splice(multies.indexOf(pr.oldMulti),1);\n                            delete pr.oldMulti;\n                        }\n                    })\n                    const newMulti = new Multi(creatingMulti);\n                    // сохраняем индекс первого проца, чтобы потом на его место поставить мульти\n                    let ind = this.processes.indexOf(creatingMulti[0]);\n                    creatingMulti.forEach(pr => {\n                        this.processes.splice(this.processes.indexOf(pr), 1);\n                    })\n                    newMulti.multi = this;\n                    newMulti.parent = this;\n                    newMulti.show = false;\n                    newMulti.distructedByKey = key;\n                    this.processes.splice(ind,0,newMulti);\n                    // this.processes.push(newMulti);\n                    multies.push(newMulti);\n                })\n                return true;\n            }\n            return false;\n        }\n    }\n    // функция сворачивания мультиузла в одну строку\n    close(multies, toParent, process, myFactory) {\n        myFactory.removeCellSelection();\n        // определяем есть ли родитель, потому что то что в параметре не всегда правда\n        this.processes.forEach(pr => {\n            if (pr.constructor.name === 'Multi') toParent = true;\n        })\n        // если закрываем родителя , то переносим все процы в него и свертываем\n        if (toParent) {\n            const newProcesses = [];\n            this.processes.forEach((multi, i) => {\n                if (multi.constructor.name === 'Multi') {\n                    multi.show = false;\n                    multi.processes.map((pr, i) => {\n                        pr.oldMulti = multi;\n                        pr.multi = this;\n                        newProcesses.push(pr);\n                    })\n                    multi.processes.splice(0, multi.processes.length);\n                }\n                else newProcesses.push(multi);\n            })\n            this.processes = newProcesses;\n        }\n        this.show = false;\n        this.calculatePrice();\n    }\n    changeProperty(key, value){\n        let multi=this;\n        this.processes.forEach(function (process) {\n            if(process.package){\n                if(multi.parent===undefined){\n                    if (!multi.template) {\n                        process[key]=value;\n                        return true;\n                    }\n                    let template=multi.template.filter(function (proc) {\n                        return proc.risk==process.risk;\n                    });\n                    template=template[0];\n                    let flag=false;\n                    for(let prop in template){\n                        if(prop==key) {\n                            process[key]=template[prop]*value;\n                            flag=true;\n                        }\n                    }\n                    if(!flag) process[key]=value;\n                }\n                else{\n                    const mainMulti=multi.parent;\n                    delete mainMulti.packName;\n                    delete mainMulti.template;\n                    mainMulti.processes.forEach((multik)=>{\n                        multik.processes.forEach(process=>delete process.package)\n                    });\n                    multi.processes.forEach(process=>process[key]=value);\n                }\n            }\n            else process[key]=value;\n        })\n    }\n\n}\nclass Process{\n    constructor(process, multi){\n        for(let key in process){\n            if (key!=='practicalPriceKoef') this[key]=process[key];\n            else {\n                this[key]=0;\n            }\n            if (key==='multi') this[key]=undefined;\n        }\n        if(multi) this.multi=multi;\n    }\n    calculateBase(){\n        this.totalPrice=0;\n        for(let i=0;i<transportProp.length;i++){\n            if(typeof this[transportProp[i]]  == \"undefined\"){\n                console.log(\"Объект не полный, не хватает свойства \"+ transportProp[i]);\n                return false;\n            }\n        }\n        //SKLV 14.05.2018: этот блок нужен в случае, если объем перевозок в базовых рисках меньше чем в других рисках. Базовые риски должны считаться по наибольшему из объемов перевозок, поэтому перезаписываем amount на наибольшее. сохраняем значение, чтобы поменять его обратно после расчетов, чтобы в интерфейсе выводилось первоначальное число\n        const maxAmount = this.park.calculateAmount();\n        let writtenAmount;\n        if (this.risk===BASENAME && maxAmount!=this.amount) {\n            // если у базовых рисков не самое большое кол-во груза в парке, то запоминаем самое большое кол-во для учета в расчетах базового риска\n            writtenAmount = this.amount;\n            this.amount = maxAmount;\n        }\n        //грузооборот = цена груза х кол-во груза\n        this.turnover=this.cost*this.amount;\n        let spline = Object(_calculation_js__WEBPACK_IMPORTED_MODULE_0__[\"Spline\"])(this.cost, Points.cost, 1);\n        let spline1 = Object(_calculation_js__WEBPACK_IMPORTED_MODULE_0__[\"Spline\"])(totalAmount, Points.amount, 0);\n        // базовая ставка price\n        let price = spline*(1+spline1/100);\n        // учет франшизы\n        price *= Object(_calculation_js__WEBPACK_IMPORTED_MODULE_0__[\"Franchise\"])(this.cost, this.franchise);\n\n        /**\n         * влияние лимита по случаю на данный риск\n         * 05.03.2018 поменяли totalAmount на this.park.amount(поменяли в формуле общее число траков на число траков в данном парке)\n         */\n        if(this.cost>=this.limit){\n            price*=Object(_calculation_js__WEBPACK_IMPORTED_MODULE_0__[\"Limit\"])(this.limit*this.park.amount*(1+((this.cost-this.limit)/this.limit)), this.limit);\n        }\n        else price*=Object(_calculation_js__WEBPACK_IMPORTED_MODULE_0__[\"Limit\"])(this.cost*this.park.amount*(1+((this.limit-this.cost)/this.limit)), this.limit);\n        this.baseRate=price;\n        this.basePrice=this.turnover*price/100;\n        //******************до сюда мы посчитали стоимость без вычетов и надбавок за риск\n\n        //************  проверяем учли ли мы надбавку за прицеп базовых рисков для данного типа прицепа\n        if(this.park.wrappings.indexOf(this.wrapping)!=-1){\n            this.park.wrappings.splice(this.park.wrappings.indexOf(this.wrapping),1);\n            if(this.risk!=BASENAME){\n                //this.park.riskSum+=risks[this.wrapping];\n                let spline2 = Object(_calculation_js__WEBPACK_IMPORTED_MODULE_0__[\"Spline\"])(risks[this.wrapping]*this.park.riskKoef/2, Points.risk, 2);\n                this.totalPrice+=this.turnover*(this.baseRate*spline2/100)/100;\n            }\n        }\n        //************** метод определения значимости доли этого процесса во всем парке, то есть если у него меньший лимит, то и по распределению на него должно приходиться меньше нагрузка \n        const calcKoef = ()=> {\n            const numOfProccesses = this.park.processes.length;\n            // если процесс в парке один, то нечего считать, распределение в парке приходится только на него\n            if (this.park.processes.length===1) return 1;\n            \n            const wrapKoefCalc = () => {\n                const sumParWrapKoef = this.park.processes.reduce ((sum, val)=>{\n                    // \"контейнеру\" присвоена 1 с целью придать ему весомости в доле\n                    const wRisk = (risks[val.wrapping]===0) ? 0 : risks[val.wrapping];\n                    return sum+wRisk;\n                },0);\n                // если сумма=0, значит у всех Контейнеры, значит мы можем вернуть всем коэф. =1 \n                if (sumParWrapKoef===0) return 1;\n                return numOfProccesses*risks[this.wrapping]/sumParWrapKoef;\n            }\n            const limitKoefCalc = () => {\n                const sumParkLimits = this.park.processes.reduce ((sum, val)=>{return sum+val.limit;},0);\n                const procLimitKoef = numOfProccesses*(this.limit/sumParkLimits);\n                return procLimitKoef;\n            }\n            const turnoverKoefCalc = () => {\n                const sumParkTurnover = this.park.processes.reduce ((sum, val)=>{return sum+(val.amount*val.cost);},0);\n                return numOfProccesses*(this.turnover/sumParkTurnover);\n            }\n            //  рассчет коэф. за франшизу\n            //  зависимость от франшизы обратная, чем больше франшиза у процесса, тем меньшую долю он должен занимать в общем распределнии\n            // знаменатель (1-франшиза/сумму франшиз парка)\n            // числитель сумма по всем процессам в парке (1-франшиза/сумму франшиз парка) \n            const franchKoefCalc = () => {\n                // если есть нет ни одной не нулевой франшизы, другими словами если все равны 0 тогда коэф одинаковый \n                let flag = true;\n                this.park.processes.forEach(proc=>{if (proc.franchise!==this.park.processes[0].franchise) flag=false})\n                if (flag) return 1;\n                // суммируем все франшизы в парке\n                const sumParkFranch = this.park.processes.reduce ((sum, val)=>{\n                    return sum+val.franchise;\n                },0);\n                const upper = 1-(this.franchise/sumParkFranch);\n                const lower =  this.park.processes.reduce ((sum, val)=>{\n                    return sum+(1-val.franchise/sumParkFranch);\n                },0);\n                return numOfProccesses*upper/lower;\n            }\n            const limK = limitKoefCalc();\n            const limF = franchKoefCalc();\n            if (limK===1||limF===1) return limK*limF;\n            else return (limK*limF)/2;\n        }\n        //*******************считаем надбавку за риск\n            // считаем коэф. надбавки по типу отсека для этого процесса \n            // calcKoef() - метод определения значимости доли этого процесса во всем парке, то есть если у него меньший лимит, то и по распределению на него должно приходиться меньше нагрузка\n        const wrapRisk = risks[this.wrapping]*this.park.riskKoef*calcKoef();\n            // ищем по груфику соответствующее значение по среднему между риском и надбавкой за тип отсека\n        const spline2 = Object(_calculation_js__WEBPACK_IMPORTED_MODULE_0__[\"Spline\"])((wrapRisk+risks[this.risk])/2, Points.risk, 2);//риски надо еще обработать\n        price *= 1 + spline2 / 100;\n        this.riskRate=price;\n        this.riskPrice=this.turnover*price/100;\n        if(this.basePrice>this.park.base){\n            this.totalPrice+=this.riskPrice-this.park.base;\n            this.park.base=this.basePrice;\n        }\n        else{\n            this.totalPrice+=this.riskPrice-this.basePrice;\n        }\n        // SKLV 14.05.2018: change back amount if it's базовые риски\n        if (writtenAmount) {\n            this.amount = writtenAmount;\n        }\n        // найти коэф. по объему перевозок, лимитам и франшизам,по типу груза\n        \n    }\n    remove(){\n        if(this.multi && this.multi!==\"deleted\"){\n            this.multi.processes.splice(this.multi.processes.indexOf(this),1);\n        }\n        // SKLV 01.06.18: delete process if it is in main object of park\n        if (this.park.processes.indexOf(this)!==-1){\n            this.park.processes.splice(this.park.processes.indexOf(this),1);\n        }\n    }\n}\nclass Park{\n    constructor(process){\n        if(Array.isArray(process)){\n            this.processes=process;\n            process=process[0];\n            this.processes.forEach((process, i)=>{\n                if(i!==0) process.park=this;\n            })\n        }\n        else this.processes=[process];\n        if(process.constructor.name==\"Process\"){\n            this.cost=process.cost;\n            this.amount=process.amount;\n            this.wrappings=[process.wrapping];\n            this.risks=[process.risk];\n            this.limit=process.limit;\n            this.franchise=process.franchise;\n            this.base=process.basePrice;\n            this.show=true;\n            process.park=this;\n        }\n    }\n    copyPark(){\n        let mass=deepCopyMultiProcess(this.processes);\n        let park=new Park(mass[0]);\n        return {mass, park}\n    }\n    changeProperty(key, value, mass){\n        if(mass===undefined) mass=this.processes;\n        mass.forEach(function (process) {\n            process[key]=value;\n            if(process.package){\n                if(key!='wrapping' && key!='risk'){\n                    let template=process.multi.template.filter(function (proc) {\n                        return proc.risk==process.risk;\n                    });\n                    template=template[0];\n                    let flag=false;\n                    for(let prop in template){\n                        if(prop==key) {\n                            process[key]=template[prop]*value;\n                            flag=true;\n                        }\n                    }\n                    if(!flag) process[key]=value;\n                }\n                else{\n                    if(key==\"risk\"){\n                        let array=process.multi.processes.filter(function (proc) {\n                            return proc.package==process.package;\n                        });\n                        array.forEach(function (proc) {\n                            delete proc.package;\n                        });\n                        let multi=process.multi;\n                        multi.processes.forEach(function(proc){\n                            proc.multi=\"deleted\";\n                        });\n                        multi.processes=[];\n\n                    }\n                }\n            }\n        })\n\n\n    }\n    getValues(){\n        let wrapping=[];\n        let risk=[];\n        let limit=[];\n        let franchise=[];\n        let cost=[];\n        let amount=[];\n        let total=0;\n        this.processes.forEach(function (proc, i) {\n            total+=proc.totalPrice;\n            if(wrapping.indexOf(proc.wrapping)==-1) wrapping.push(proc.wrapping);\n            if(risk.indexOf(proc.risk)==-1) risk.push(proc.risk);\n            if(!proc.package || proc.package && i==0){\n                limit.push(proc.limit);\n                franchise.push(proc.franchise);\n                cost.push(proc.cost);\n                amount.push(proc.amount);\n            }\n\n        });\n        if(cost.length==1) this.cost=cost[0];\n        else{\n            let min=cost[0];\n            let max=cost[0];\n            for(let i=0;i<cost.length;i++){\n                if(cost[i]>max) max=cost[i];\n                if(cost[i]<min) min=cost[i];\n            }\n            if(min==max) this.cost=min;\n            else this.cost=min+\"-\"+max;\n        }\n        if(amount.length==1) this.amount=amount[0];\n        else{\n            let min=amount[0];\n            let max=amount[0];\n            for(let i=0;i<amount.length;i++){\n                if(amount[i]>max) max=amount[i];\n                if(amount[i]<min) min=amount[i];\n            }\n            if(min==max) this.amount=min;\n            else this.amount=min+\"-\"+max;\n        }\n        this.wrapping=wrapping;\n        this.risk=risk;\n        if(limit.length==1) this.limit=limit[0];\n        else{\n            let min=limit[0];\n            let max=limit[0];\n            for(let i=0;i<limit.length;i++){\n                if(limit[i]>max) max=limit[i];\n                if(limit[i]<min) min=limit[i];\n            }\n            if(min==max) this.limit=min;\n            else this.limit=min+\"-\"+max;\n        }\n        if(franchise.length==1) this.franchise=franchise[0];\n        else{\n            let min=franchise[0];\n            let max=franchise[0];\n            for(let i=0;i<franchise.length;i++){\n                if(franchise[i]>max) max=franchise[i];\n                if(franchise[i]<min) min=franchise[i];\n            }\n            if(min==max) this.franchise=min;\n            else this.franchise=min+\"-\"+max;\n        }\n        this.price=total;\n    }\n    findMaxLimit(){\n        let max=0;\n        this.processes.forEach(function (process){\n            max=Math.max(process.limit, max);\n        });\n        return max;\n    }\n    calculateAmount(){\n        let max=0;\n        this.processes.forEach(function (process){\n            max=Math.max(process.amount, max);\n        });\n        this.amount=max;\n        return max;\n    }\n    clear(){\n        this.risks=[];\n        this.wrappings=[];\n        this.base=0;\n        this.riskKoef=0;\n    }\n    replaceBase(){\n        if(this.processes.length==0) return false;\n        let base;\n        if(this.processes[0].risk==BASENAME) return;\n\n        for(let i=0; i<this.processes.length; i++){\n            let process=this.processes[i];\n            if(process.risk==BASENAME){\n                base=this.processes.splice(i,1);\n                this.processes.splice(0,0,base[0]);\n                return false;\n            }\n        }\n    }\n    check(NO){\n        this.clear();\n        let wraps={};\n        let mass=[];\n        let sum=0,amount=0,risksum=0;\n        let array=this.processes.filter(function(process){\n            return process.multi!==undefined\n        });\n        let park=this;\n        const maxAmount = park.calculateAmount();\n        const amountOfBaseToMax = () => {\n            park.processes.map(proc=>{\n                if (proc.risk===BASENAME) {\n                    proc.writtenAmount = proc.amount;\n                    proc.amount = maxAmount;\n                }\n            })\n        }\n        const amountOfBaseChangeBack = () => {\n            park.processes.map(proc=>{\n                if (proc.risk===BASENAME) {\n                    proc.amount = proc.writtenAmount;\n                    delete proc.writtenAmount;\n                }\n            })\n        }\n        amountOfBaseToMax();\n\n        array.forEach(function(process){\n            //добавляем название риска процесса в массив \"риски\" у парка\n            if(park.risks.indexOf(process.risk)==-1) park.risks.push(process.risk);\n            if(!wraps.hasOwnProperty(process.wrapping)) wraps[process.wrapping]=process.amount;\n            // создаем массив wraps: тип отсека - количество\n            else if(wraps.hasOwnProperty(process.wrapping) && wraps[process.wrapping]<process.amount) wraps[process.wrapping]=process.amount;\n            // сумма = кол-во грузов * коэф. отсека\n            sum+=process.amount*risks[process.wrapping];\n            amount+=process.amount;\n            // сумма коэф. отсека ЗАЧЕМ?\n            risksum+=risks[process.wrapping];\n            // добавляем в типы отсека парка тип отсека данного процесса\n            if(park.wrappings.indexOf(process.wrapping)==-1) park.wrappings.push(process.wrapping);\n        });\n\n        for(let i=0;i<this.processes.length;i++){\n            delete this.processes[i].changing;//на всякий случай убираем выделение строки\n            if(this.processes[i].multi===undefined) {\n                if (this.risks.indexOf(this.processes[i].risk) == -1) {\n                    this.risks.push(this.processes[i].risk);\n                    if (!wraps.hasOwnProperty(this.processes[i].wrapping)) wraps[this.processes[i].wrapping] = this.processes[i].amount;\n                    else if (wraps.hasOwnProperty(this.processes[i].wrapping) && wraps[this.processes[i].wrapping] < this.processes[i].amount) wraps[this.processes[i].wrapping] = this.processes[i].amount;\n\n\n                    sum += this.processes[i].amount * risks[this.processes[i].wrapping];\n                    amount += this.processes[i].amount;\n                    risksum += risks[this.processes[i].wrapping];\n\n\n                }\n                else {\n                    mass.push(new Process(this.processes.splice(i, 1)[0]));\n                    if(i>0) i--;\n                }\n                if (this.wrappings.indexOf(this.processes[i].wrapping) == -1) this.wrappings.push(this.processes[i].wrapping);\n            }\n\n        }\n        \n        for(let key in wraps){\n            let flag=true;\n            // если в парке нет мульти узла, то надо посчитать и за него учет коэф.\n            this.processes.forEach(function(process){\n                if(process.wrapping==key && process.risk==BASENAME) flag=false;\n            });\n            if(flag){\n                risksum+=risks[key];\n                amount+=wraps[key];\n                sum+=risks[key]*wraps[key];\n            }\n        }\n        if(amount==0 || risksum==0) this.riskKoef=0;\n        else this.riskKoef=sum/(amount*risksum);\n        // эксперементальная функция расчета средневзвешенного коэф. по правильному, пока коэф нигде не используется\n        const newAmount = this.processes.reduce((sum,proc)=>sum+proc.amount,0);\n        const newWrapRisk = this.processes.reduce((sum,proc)=>{\n            const wrapRisk = risks[proc.wrapping];\n            return sum+wrapRisk;\n        },0);\n        const newSum = this.processes.reduce((sum,proc)=>{\n            const wrapRisk = risks[proc.wrapping];\n            return sum+(proc.amount*wrapRisk);\n        },0);\n        this.newRiskKoef = (newWrapRisk===0) ? 0 : (newSum)/(newAmount*this.risks.length);\n\n        //this.riskSum=risksum;\n        if(NO===undefined && this.risks.indexOf(BASENAME)==-1 && this.processes.length==1){\n            mass=this.processes;\n            this.processes=[];\n        }\n        amountOfBaseChangeBack ();\n        return mass;\n    }\n    cutDownLimits(a_limit){\n        this.processes.forEach(function (process) {\n            if(process.limit>a_limit){\n                process.limit=a_limit;\n                if(process.package){\n                    let array=process.multi.processes.filter(function (proc) {\n                        return proc.package==process.package;\n                    });\n                    array.forEach(function (proc) {\n                        delete proc.package;\n                    });\n                    delete process.multi.packName;\n                    delete process.multi.template;\n                }\n            }\n        })\n    }\n    calculateMatrixWithAlimit(a_limit, events){//считаем сколько была бы общая премия если вместо лимита и стоимости поставить агрегатный лимит\n        let overall=0;\n        this.processes.forEach(function (process) {\n            let cost=process.cost;\n            let limit=process.limit;\n            if(events){\n                process.limit*=a_limit*0.33;\n            }\n            else{\n                if(process.cost<a_limit) process.cost=a_limit;\n                process.limit=a_limit;\n            }\n            process.calculateBase();\n            overall+=process.totalPrice*1;\n            process.cost=cost;\n            process.limit=limit;\n            process.calculateBase();\n        });\n        return overall;\n    }\n    //Сюда может передаваться коэффициент за агента, коэффициент из-за лимита и коэффициент из-за этапов\n    applyKoef(koef){\n        this.processes.forEach(function(process){\n            process.totalPrice*=koef;\n        })\n    }\n    applyPracticalPriceKoef(mode){\n        this.processes.forEach(function(process){\n            // если расчеты были загружены из БД с назначенной фактической премией, то назначаем старую цену и удаляем ее из памяти\n            if (typeof (process.loadedPrice) === \"number\" && mode===\"load\") {\n                if (process.loadedPrice!==0) process.practicalPriceKoef = process.loadedPrice/process.totalPrice;\n                else process.practicalPriceKoef = 0;\n                delete process.loadedPrice;\n            }\n            if(process.practicalPriceKoef!==undefined) process.totalPrice*=process.practicalPriceKoef;\n            \n        })\n    }\n    calculate(){\n        this.processes.forEach(function (process) {\n            process.calculateBase();\n            if(process.multi && process.multi!=\"deleted\"){\n                if(process.multi.processes.length==1){\n                    delete process.multi;\n                }\n            }\n        })\n    }\n    getTotal(){\n        let sum=0;\n        this.processes.forEach(function(process){\n            sum+=process.totalPrice;\n        });\n        return sum;\n    }\n    /**\n     * Функция проверки наличия таких процев в парке\n     * @param {array} checkProcs - проц или список процев, если это создаваемый мульти узел\n     * @returns {boolean}  -  true - содержит, false - не содержит\n     */\n    contains(checkProcs) {\n        let isContain = false;\n        const pairsInPark = []; \n        this.processes.map(pr=>{\n            // формируем строку с названием риска и типом отсека\n            // бывают случаи, когда проц уже добавлен в парк, эти процы мы не должны учитывать\n            if (!checkProcs.includes(pr)) pairsInPark.push(`${pr.risk}-${pr.wrapping}`);\n        });\n        checkProcs.map(pr=>{\n            const pair = `${pr.risk}-${pr.wrapping}`;\n            if (pairsInPark.includes(pair)) isContain = true;\n        })\n        return isContain;\n    }\n}\n\nfunction replaceProcessesInParkForMulti(array){\n    for(let i=1;i<array.length; i++){\n        let park=array[i].park.processes;\n        let previousProcess=array[i-1];\n        let currentProcess=array[i];\n        if( Math.abs(park.indexOf(previousProcess)-park.indexOf(currentProcess))!==1 ){\n            park.splice(park.indexOf(previousProcess), 0, ...park.splice(park.indexOf(currentProcess), 1));\n        }\n    }\n}\nfunction deepCopyMultiProcess(array){\n    let mass=[];\n    array.forEach(process=>{\n        if(process.constructor.name!==\"Multi\") mass.push(process);\n        else deepCopyMultiProcess(process.processes);\n    });\n    let processes=[];\n    mass.forEach(process=>{\n        if(process.multi && process.multi!==\"deleted\"){\n            let newProcess=new Process(process);\n            newProcess.multi=\"create\";\n            processes.push(newProcess);\n        }\n        else processes.push(new Process(process));\n    });\n    return processes;\n}\n\n//# sourceURL=webpack:///./js/proto.js?");

/***/ }),

/***/ "./js/protos/calc.js":
/*!***************************!*\
  !*** ./js/protos/calc.js ***!
  \***************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Calculation; });\nclass Calculation {\n  constructor (mf) {\n    this.id = null;\n    this.name = null;\n    this.date = null;\n    this.factory = mf || null;\n    this.companyID = null;\n    this.links = null;\n    this.isSaved = false;\n    this.isLoaded = false;\n    this.isLinked = false;\n    this.isInited = true;\n  }\n  parseFromMyFactory (mf) {\n    this.name = mf.calculationName;\n    this.factory = mf;\n    mf.calcObj = this;\n\n  }\n  markAsLoaded () {\n    this.isSaved = true;\n    this.isLoaded = true;\n  }\n  parseFromResponse (data) {\n    this.id = data.id;\n    this.date = data.date;\n    this.name = this.name || data.name;\n    this.companyID = data.companyID || null;\n  }\n  isEmpty() {\n    return this.factory.parks.length===0;\n  }\n  refreshName() {\n    this.name = this.factory.calculationName;\n  }\n  /**\n   * loading links for this calc obj and binding it\n   */\n  async loadLink() {\n    const resp = await this.factory.loadLinks('calc_id',this.id);\n    await this.bindLink(resp);\n  }\n  /**\n   * Binding array of links to calculation object\n   * @param {Array} arr - all links for this calc \n   */\n  bindLink(arr) {\n    if (!arr.length) return undefined;\n    this.isLinked = (arr.length>0); \n    this.links = arr.length>0 ? arr : null;\n  }\n}\n\n//# sourceURL=webpack:///./js/protos/calc.js?");

/***/ }),

/***/ "./js/protos/car.js":
/*!**************************!*\
  !*** ./js/protos/car.js ***!
  \**************************/
/*! exports provided: Car, CarGroup */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Car\", function() { return Car; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CarGroup\", function() { return CarGroup; });\nclass Car {\n  constructor () {\n    this.id = null;\n    this.park = null;\n    this.group = {\n      id: null,\n      obj: null,\n    }\n    this.data = {\n      model: null,\n      autNumber: null,\n      VIN: null,\n      prodYear: null,\n      startYear: null,\n      endYear: null,\n      type: null,\n      risks: null,\n    }\n  }\n  setData (obj) {\n    this.data = obj;\n\n  }\n}\n\nclass CarGroup {\n  constructor() {\n    this.id = null;\n    this.cars = [];\n  }\n  add(car) {\n    this.cars.push(car);\n    car.group.obj = this;\n  }\n}\n\n//# sourceURL=webpack:///./js/protos/car.js?");

/***/ }),

/***/ "./js/protos/company.js":
/*!******************************!*\
  !*** ./js/protos/company.js ***!
  \******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Company; });\nclass Company {\n  constructor(){\n    this.id = null;\n    this.card = null;\n    this.responses = {};\n    this.isLoaded = false;\n    this.isSaved = false;\n    this.links = null;\n    this.name = null;\n    this.factory = null;\n    this._isFull = null;\n  }\n  /**\n   * \n   * @param {object} data объект с ответом\n   */\n  parseFromCompaniesResponse (data) {\n    this.id = data.id;\n    this.responses.card = data;\n    this.name = data.name;\n    this.info = {\n      'Communications':data.Communications,\n      'company_group': data.company_group,\n      'company_mail': data.company_mail,\n      'company_phone': data.company_phone,\n      'company_url:':data.company_url,\n      'status': data.status,\n    }\n  }\n  markAsLoaded(){\n    this.isLoaded = true;\n    this.isSaved = true;\n  }\n  savedAs({id,card,savedObj}){\n    this.isSaved = true;\n    this.id = id;\n    this.card = card;\n    this.name = card['Данные компании']['Наименование организации'];\n    delete savedObj.type;\n    this.responses.card = savedObj;\n  }\n  set isFull (val) {\n    this._isFull = val;\n  }\n  get isFull () {\n    this._isFull = this.getFullness();\n    return this._isFull;\n  }\n  getFullness() {\n    const card = this.card;\n    for (let outobj in card) {\n      const field = card[outobj];\n      for (let inobj in field) {\n        const val = field[inobj];\n        if (val==='') return false;\n      }\n    }\n    return true;\n  }\n}\n/**\n * Функция преобразования строки с айдишниками рассчетов в массив чисел\n * @param {string} ids строка из id \n */\nfunction parseCalcId (ids) {\n  return ids.split(', ').map(v=>Number(v));\n}\n\n//# sourceURL=webpack:///./js/protos/company.js?");

/***/ }),

/***/ "./js/protos/loading.js":
/*!******************************!*\
  !*** ./js/protos/loading.js ***!
  \******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Loading; });\n/**\n *  Модальное окно с просьбой подождать так как идет загрузка данных\n * Чтобы его подключить в html вставить div id=loading_modal и loading модель, в js создать новый объект класса для управления им\n */\nclass Loading {\n  constructor(show){\n    this.div = document.querySelector('#loading_modal');\n    if (show) this.show();\n  }\n  show () {\n    if (this.div) this.div.style.display = 'block';\n  }\n  hide () {\n    if (this.div) this.div.style.display = 'none';\n  }\n}\n\n//# sourceURL=webpack:///./js/protos/loading.js?");

/***/ }),

/***/ "./js/protos/polis.js":
/*!****************************!*\
  !*** ./js/protos/polis.js ***!
  \****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Polis; });\nclass Polis {\n  constructor(mf) {\n    this.isSaved = false;\n    this.companyName = null;\n    this.calcName = null;\n    this.isInited = false;\n    this.isRequested = false;\n    this.multi = true;\n    this.additionsSeen = false;\n    this.financeSeen = false;\n    this.type = 'Перевозчики';\n    this.dates = {\n      start: null,\n      startDate: null,\n      end: null,\n      endDate: null,\n      changes: [],\n      time: 'Год',\n    }\n    if (mf) this.bindMyFactory(mf);\n  }\n  bindMyFactory (myFactory) {\n    this.factory = myFactory;\n    this.updateNames ();\n  };\n  updateNames () {\n    const myFactory = this.factory;\n    if (myFactory.calculationName!==\"\" && myFactory.calculationName!==undefined) this.calcName = myFactory.calculationName;\n    else if (myFactory.calcObj.isLinked) this.calcName = 'привязанный';\n    if (myFactory.newClientCard) this.companyName = myFactory.newClientCard['Данные компании']['Наименование организации'];\n  };\n  /**\n   * Функция загрузки стартовых оговорок из json\n   * @param {str} str  название загружаемых оговорок: Перевозчики либо Экспедиторы\n   * @param {boolean} includeBR - добавлять Базовые риски или нет\n   */\n  async loadConditions (str, includeBR) {\n    let url;\n    switch (str) {\n      case 'Экспедиторы':\n        url = 'polisConditions-conf';\n        break;\n      case 'Перевозчики':\n        url = 'polisConditions'\n        break;\n      default:\n        console.error('Ошибка загрузки оговорок. Ожидался Перевозчики или Экспедиторы, пришел '+str);\n        return false;\n        break;\n    }\n    const resp = await fetch (`./src/${url}.json`);\n    this.conditions = await resp.json();\n    this.conditions.forEach(val=>{\n      if (val.name===BASENAME && !includeBR) val.values.forEach(v=>v.checked = false);\n      val.included = false;\n    });\n    return this.conditions;\n  }\n  updateConditionsCheck() {\n    if (!this.conditions) return false;\n    this.conditions.forEach(cond=>{\n      let counter = 0;\n      cond.values.forEach(val=>{if (val.checked) counter++});\n      cond.chechedCount = counter;\n      cond.delete = (cond) => {return this.deleteAddition(cond);}\n    })\n  }\n  deleteAddition (condition) {\n    if (condition.name===BASENAME||condition.name==='Страхование по полису не распространяется на следующие грузы'||condition.const) return false;\n    this.conditions = this.conditions.filter(cond=>cond.name!==condition.name);\n  }\n  applyStartAdditions () {\n    //стартовые дополнения \n    this.additions = {'0':[],'1':[],'2':[]};\n  }\n}\n\n\n\n//# sourceURL=webpack:///./js/protos/polis.js?");

/***/ }),

/***/ "./js/protos/profile.js":
/*!******************************!*\
  !*** ./js/protos/profile.js ***!
  \******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Profile; });\nclass Profile {\n  constructor () {\n    this.store = {}; // хранилище всех объектов, например ответы от базы данных по расчетам и тд\n    this.factory = null;\n  }\n  bindFactory (mf) {\n    mf.profileObj = this;\n    this.factory = mf;\n  }\n  deleteCalc (id) {\n    this.store.calcLinks = this.store.calcLinks.filter(c=>c.calc_id!==id);\n    this.store.calculations = this.store.calculations.filter(c=>c.id!==id);\n  }\n}\n\n//# sourceURL=webpack:///./js/protos/profile.js?");

/***/ })

/******/ });